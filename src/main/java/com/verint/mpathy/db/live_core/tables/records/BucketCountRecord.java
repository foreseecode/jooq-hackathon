/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables.records;


import com.verint.mpathy.db.live_core.tables.BucketCount;

import java.math.BigDecimal;
import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BucketCountRecord extends TableRecordImpl<BucketCountRecord> implements Record6<Long, BigDecimal, Integer, LocalTime, BigDecimal, Short> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live_core.bucket_count.idbucket_count</code>.
     */
    public void setIdbucketCount(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>live_core.bucket_count.idbucket_count</code>.
     */
    public Long getIdbucketCount() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>live_core.bucket_count.idbucket</code>.
     */
    public void setIdbucket(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_core.bucket_count.idbucket</code>.
     */
    public BigDecimal getIdbucket() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>live_core.bucket_count.idsite</code>.
     */
    public void setIdsite(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>live_core.bucket_count.idsite</code>.
     */
    public Integer getIdsite() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>live_core.bucket_count.start_date</code>.
     */
    public void setStartDate(LocalTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>live_core.bucket_count.start_date</code>.
     */
    public LocalTime getStartDate() {
        return (LocalTime) get(3);
    }

    /**
     * Setter for <code>live_core.bucket_count.value</code>.
     */
    public void setValue(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>live_core.bucket_count.value</code>.
     */
    public BigDecimal getValue() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>live_core.bucket_count.snapshot</code>.
     */
    public void setSnapshot(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>live_core.bucket_count.snapshot</code>.
     */
    public Short getSnapshot() {
        return (Short) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, BigDecimal, Integer, LocalTime, BigDecimal, Short> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, BigDecimal, Integer, LocalTime, BigDecimal, Short> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return BucketCount.BUCKET_COUNT.IDBUCKET_COUNT;
    }

    @Override
    public Field<BigDecimal> field2() {
        return BucketCount.BUCKET_COUNT.IDBUCKET;
    }

    @Override
    public Field<Integer> field3() {
        return BucketCount.BUCKET_COUNT.IDSITE;
    }

    @Override
    public Field<LocalTime> field4() {
        return BucketCount.BUCKET_COUNT.START_DATE;
    }

    @Override
    public Field<BigDecimal> field5() {
        return BucketCount.BUCKET_COUNT.VALUE;
    }

    @Override
    public Field<Short> field6() {
        return BucketCount.BUCKET_COUNT.SNAPSHOT;
    }

    @Override
    public Long component1() {
        return getIdbucketCount();
    }

    @Override
    public BigDecimal component2() {
        return getIdbucket();
    }

    @Override
    public Integer component3() {
        return getIdsite();
    }

    @Override
    public LocalTime component4() {
        return getStartDate();
    }

    @Override
    public BigDecimal component5() {
        return getValue();
    }

    @Override
    public Short component6() {
        return getSnapshot();
    }

    @Override
    public Long value1() {
        return getIdbucketCount();
    }

    @Override
    public BigDecimal value2() {
        return getIdbucket();
    }

    @Override
    public Integer value3() {
        return getIdsite();
    }

    @Override
    public LocalTime value4() {
        return getStartDate();
    }

    @Override
    public BigDecimal value5() {
        return getValue();
    }

    @Override
    public Short value6() {
        return getSnapshot();
    }

    @Override
    public BucketCountRecord value1(Long value) {
        setIdbucketCount(value);
        return this;
    }

    @Override
    public BucketCountRecord value2(BigDecimal value) {
        setIdbucket(value);
        return this;
    }

    @Override
    public BucketCountRecord value3(Integer value) {
        setIdsite(value);
        return this;
    }

    @Override
    public BucketCountRecord value4(LocalTime value) {
        setStartDate(value);
        return this;
    }

    @Override
    public BucketCountRecord value5(BigDecimal value) {
        setValue(value);
        return this;
    }

    @Override
    public BucketCountRecord value6(Short value) {
        setSnapshot(value);
        return this;
    }

    @Override
    public BucketCountRecord values(Long value1, BigDecimal value2, Integer value3, LocalTime value4, BigDecimal value5, Short value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BucketCountRecord
     */
    public BucketCountRecord() {
        super(BucketCount.BUCKET_COUNT);
    }

    /**
     * Create a detached, initialised BucketCountRecord
     */
    public BucketCountRecord(Long idbucketCount, BigDecimal idbucket, Integer idsite, LocalTime startDate, BigDecimal value, Short snapshot) {
        super(BucketCount.BUCKET_COUNT);

        setIdbucketCount(idbucketCount);
        setIdbucket(idbucket);
        setIdsite(idsite);
        setStartDate(startDate);
        setValue(value);
        setSnapshot(snapshot);
    }
}
