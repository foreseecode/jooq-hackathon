/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables.records;


import com.verint.mpathy.db.live.tables.CustomparameterSqlquery;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomparameterSqlqueryRecord extends TableRecordImpl<CustomparameterSqlqueryRecord> implements Record4<Long, String, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live.customparameter_sqlquery.idcp</code>.
     */
    public void setIdcp(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>live.customparameter_sqlquery.idcp</code>.
     */
    public Long getIdcp() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>live.customparameter_sqlquery.query</code>.
     */
    public void setQuery(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>live.customparameter_sqlquery.query</code>.
     */
    public String getQuery() {
        return (String) get(1);
    }

    /**
     * Setter for <code>live.customparameter_sqlquery.rawquery</code>.
     */
    public void setRawquery(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>live.customparameter_sqlquery.rawquery</code>.
     */
    public String getRawquery() {
        return (String) get(2);
    }

    /**
     * Setter for <code>live.customparameter_sqlquery.useRawQuery</code>.
     */
    public void setUserawquery(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>live.customparameter_sqlquery.useRawQuery</code>.
     */
    public Boolean getUserawquery() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CustomparameterSqlquery.CUSTOMPARAMETER_SQLQUERY.IDCP;
    }

    @Override
    public Field<String> field2() {
        return CustomparameterSqlquery.CUSTOMPARAMETER_SQLQUERY.QUERY;
    }

    @Override
    public Field<String> field3() {
        return CustomparameterSqlquery.CUSTOMPARAMETER_SQLQUERY.RAWQUERY;
    }

    @Override
    public Field<Boolean> field4() {
        return CustomparameterSqlquery.CUSTOMPARAMETER_SQLQUERY.USERAWQUERY;
    }

    @Override
    public Long component1() {
        return getIdcp();
    }

    @Override
    public String component2() {
        return getQuery();
    }

    @Override
    public String component3() {
        return getRawquery();
    }

    @Override
    public Boolean component4() {
        return getUserawquery();
    }

    @Override
    public Long value1() {
        return getIdcp();
    }

    @Override
    public String value2() {
        return getQuery();
    }

    @Override
    public String value3() {
        return getRawquery();
    }

    @Override
    public Boolean value4() {
        return getUserawquery();
    }

    @Override
    public CustomparameterSqlqueryRecord value1(Long value) {
        setIdcp(value);
        return this;
    }

    @Override
    public CustomparameterSqlqueryRecord value2(String value) {
        setQuery(value);
        return this;
    }

    @Override
    public CustomparameterSqlqueryRecord value3(String value) {
        setRawquery(value);
        return this;
    }

    @Override
    public CustomparameterSqlqueryRecord value4(Boolean value) {
        setUserawquery(value);
        return this;
    }

    @Override
    public CustomparameterSqlqueryRecord values(Long value1, String value2, String value3, Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomparameterSqlqueryRecord
     */
    public CustomparameterSqlqueryRecord() {
        super(CustomparameterSqlquery.CUSTOMPARAMETER_SQLQUERY);
    }

    /**
     * Create a detached, initialised CustomparameterSqlqueryRecord
     */
    public CustomparameterSqlqueryRecord(Long idcp, String query, String rawquery, Boolean userawquery) {
        super(CustomparameterSqlquery.CUSTOMPARAMETER_SQLQUERY);

        setIdcp(idcp);
        setQuery(query);
        setRawquery(rawquery);
        setUserawquery(userawquery);
    }
}
