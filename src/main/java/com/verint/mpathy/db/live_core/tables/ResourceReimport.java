/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables;


import com.verint.mpathy.db.live_core.LiveCore;
import com.verint.mpathy.db.live_core.tables.records.ResourceReimportRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourceReimport extends TableImpl<ResourceReimportRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live_core.resource_reimport</code>
     */
    public static final ResourceReimport RESOURCE_REIMPORT = new ResourceReimport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResourceReimportRecord> getRecordType() {
        return ResourceReimportRecord.class;
    }

    /**
     * The column <code>live_core.resource_reimport.idpage</code>.
     */
    public final TableField<ResourceReimportRecord, Long> IDPAGE = createField(DSL.name("idpage"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.resource_reimport.idres</code>.
     */
    public final TableField<ResourceReimportRecord, Integer> IDRES = createField(DSL.name("idres"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>live_core.resource_reimport.is_mutation_stream</code>.
     */
    public final TableField<ResourceReimportRecord, Boolean> IS_MUTATION_STREAM = createField(DSL.name("is_mutation_stream"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>live_core.resource_reimport.url</code>.
     */
    public final TableField<ResourceReimportRecord, String> URL = createField(DSL.name("url"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live_core.resource_reimport.ua_string</code>.
     */
    public final TableField<ResourceReimportRecord, String> UA_STRING = createField(DSL.name("ua_string"), SQLDataType.CLOB, this, "");

    private ResourceReimport(Name alias, Table<ResourceReimportRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResourceReimport(Name alias, Table<ResourceReimportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Easy access to underlying table in other schemas."), TableOptions.view("create view \"resource_reimport\" as  SELECT resource_reimport.idpage,\n    resource_reimport.idres,\n    resource_reimport.is_mutation_stream,\n    resource_reimport.url,\n    resource_reimport.ua_string\n   FROM live.resource_reimport;"));
    }

    /**
     * Create an aliased <code>live_core.resource_reimport</code> table
     * reference
     */
    public ResourceReimport(String alias) {
        this(DSL.name(alias), RESOURCE_REIMPORT);
    }

    /**
     * Create an aliased <code>live_core.resource_reimport</code> table
     * reference
     */
    public ResourceReimport(Name alias) {
        this(alias, RESOURCE_REIMPORT);
    }

    /**
     * Create a <code>live_core.resource_reimport</code> table reference
     */
    public ResourceReimport() {
        this(DSL.name("resource_reimport"), null);
    }

    public <O extends Record> ResourceReimport(Table<O> child, ForeignKey<O, ResourceReimportRecord> key) {
        super(child, key, RESOURCE_REIMPORT);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : LiveCore.LIVE_CORE;
    }

    @Override
    public ResourceReimport as(String alias) {
        return new ResourceReimport(DSL.name(alias), this);
    }

    @Override
    public ResourceReimport as(Name alias) {
        return new ResourceReimport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourceReimport rename(String name) {
        return new ResourceReimport(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourceReimport rename(Name name) {
        return new ResourceReimport(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Integer, Boolean, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
