/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_data.tables.records;


import com.verint.mpathy.db.live_data.tables.Session;

import java.math.BigDecimal;
import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SessionRecord extends TableRecordImpl<SessionRecord> implements Record20<BigDecimal, Integer, BigDecimal, Long, Long, Long, LocalTime, LocalTime, Long, Long, Long, String, Short, Short, Long, Short, String, BigDecimal, BigDecimal, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live_data.session.idsession</code>.
     */
    public void setIdsession(BigDecimal value) {
        set(0, value);
    }

    /**
     * Getter for <code>live_data.session.idsession</code>.
     */
    public BigDecimal getIdsession() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>live_data.session.idsite</code>.
     */
    public void setIdsite(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_data.session.idsite</code>.
     */
    public Integer getIdsite() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>live_data.session.idvisitor</code>.
     */
    public void setIdvisitor(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>live_data.session.idvisitor</code>.
     */
    public BigDecimal getIdvisitor() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>live_data.session.idurl</code>.
     */
    public void setIdurl(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>live_data.session.idurl</code>.
     */
    public Long getIdurl() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>live_data.session.idreferer</code>.
     */
    public void setIdreferer(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>live_data.session.idreferer</code>.
     */
    public Long getIdreferer() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>live_data.session.iduseragent</code>.
     */
    public void setIduseragent(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>live_data.session.iduseragent</code>.
     */
    public Long getIduseragent() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>live_data.session.date</code>.
     */
    public void setDate(LocalTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>live_data.session.date</code>.
     */
    public LocalTime getDate() {
        return (LocalTime) get(6);
    }

    /**
     * Setter for <code>live_data.session.updated_at</code>.
     */
    public void setUpdatedAt(LocalTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>live_data.session.updated_at</code>.
     */
    public LocalTime getUpdatedAt() {
        return (LocalTime) get(7);
    }

    /**
     * Setter for <code>live_data.session.length_active</code>.
     */
    public void setLengthActive(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>live_data.session.length_active</code>.
     */
    public Long getLengthActive() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>live_data.session.length_visible</code>.
     */
    public void setLengthVisible(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>live_data.session.length_visible</code>.
     */
    public Long getLengthVisible() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>live_data.session.length_loaded</code>.
     */
    public void setLengthLoaded(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>live_data.session.length_loaded</code>.
     */
    public Long getLengthLoaded() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>live_data.session.locale</code>.
     */
    public void setLocale(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>live_data.session.locale</code>.
     */
    public String getLocale() {
        return (String) get(11);
    }

    /**
     * Setter for <code>live_data.session.mpathy_enabled</code>.
     */
    public void setMpathyEnabled(Short value) {
        set(12, value);
    }

    /**
     * Getter for <code>live_data.session.mpathy_enabled</code>.
     */
    public Short getMpathyEnabled() {
        return (Short) get(12);
    }

    /**
     * Setter for <code>live_data.session.flashver</code>.
     */
    public void setFlashver(Short value) {
        set(13, value);
    }

    /**
     * Getter for <code>live_data.session.flashver</code>.
     */
    public Short getFlashver() {
        return (Short) get(13);
    }

    /**
     * Setter for <code>live_data.session.num_pi</code>.
     */
    public void setNumPi(Long value) {
        set(14, value);
    }

    /**
     * Getter for <code>live_data.session.num_pi</code>.
     */
    public Long getNumPi() {
        return (Long) get(14);
    }

    /**
     * Setter for <code>live_data.session.imported</code>.
     */
    public void setImported(Short value) {
        set(15, value);
    }

    /**
     * Getter for <code>live_data.session.imported</code>.
     */
    public Short getImported() {
        return (Short) get(15);
    }

    /**
     * Setter for <code>live_data.session.script_versions</code>. Different
     * tracking script version information separated by pipe.
     */
    public void setScriptVersions(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>live_data.session.script_versions</code>. Different
     * tracking script version information separated by pipe.
     */
    public String getScriptVersions() {
        return (String) get(16);
    }

    /**
     * Setter for <code>live_data.session.successor</code>.
     */
    public void setSuccessor(BigDecimal value) {
        set(17, value);
    }

    /**
     * Getter for <code>live_data.session.successor</code>.
     */
    public BigDecimal getSuccessor() {
        return (BigDecimal) get(17);
    }

    /**
     * Setter for <code>live_data.session.idbucket</code>.
     */
    public void setIdbucket(BigDecimal value) {
        set(18, value);
    }

    /**
     * Getter for <code>live_data.session.idbucket</code>.
     */
    public BigDecimal getIdbucket() {
        return (BigDecimal) get(18);
    }

    /**
     * Setter for <code>live_data.session.sdk_type</code>. The column contains
     * the tracking sdk type of the sessions.
     */
    public void setSdkType(String value) {
        set(19, value);
    }

    /**
     * Getter for <code>live_data.session.sdk_type</code>. The column contains
     * the tracking sdk type of the sessions.
     */
    public String getSdkType() {
        return (String) get(19);
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row20<BigDecimal, Integer, BigDecimal, Long, Long, Long, LocalTime, LocalTime, Long, Long, Long, String, Short, Short, Long, Short, String, BigDecimal, BigDecimal, String> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    @Override
    public Row20<BigDecimal, Integer, BigDecimal, Long, Long, Long, LocalTime, LocalTime, Long, Long, Long, String, Short, Short, Long, Short, String, BigDecimal, BigDecimal, String> valuesRow() {
        return (Row20) super.valuesRow();
    }

    @Override
    public Field<BigDecimal> field1() {
        return Session.SESSION.IDSESSION;
    }

    @Override
    public Field<Integer> field2() {
        return Session.SESSION.IDSITE;
    }

    @Override
    public Field<BigDecimal> field3() {
        return Session.SESSION.IDVISITOR;
    }

    @Override
    public Field<Long> field4() {
        return Session.SESSION.IDURL;
    }

    @Override
    public Field<Long> field5() {
        return Session.SESSION.IDREFERER;
    }

    @Override
    public Field<Long> field6() {
        return Session.SESSION.IDUSERAGENT;
    }

    @Override
    public Field<LocalTime> field7() {
        return Session.SESSION.DATE;
    }

    @Override
    public Field<LocalTime> field8() {
        return Session.SESSION.UPDATED_AT;
    }

    @Override
    public Field<Long> field9() {
        return Session.SESSION.LENGTH_ACTIVE;
    }

    @Override
    public Field<Long> field10() {
        return Session.SESSION.LENGTH_VISIBLE;
    }

    @Override
    public Field<Long> field11() {
        return Session.SESSION.LENGTH_LOADED;
    }

    @Override
    public Field<String> field12() {
        return Session.SESSION.LOCALE;
    }

    @Override
    public Field<Short> field13() {
        return Session.SESSION.MPATHY_ENABLED;
    }

    @Override
    public Field<Short> field14() {
        return Session.SESSION.FLASHVER;
    }

    @Override
    public Field<Long> field15() {
        return Session.SESSION.NUM_PI;
    }

    @Override
    public Field<Short> field16() {
        return Session.SESSION.IMPORTED;
    }

    @Override
    public Field<String> field17() {
        return Session.SESSION.SCRIPT_VERSIONS;
    }

    @Override
    public Field<BigDecimal> field18() {
        return Session.SESSION.SUCCESSOR;
    }

    @Override
    public Field<BigDecimal> field19() {
        return Session.SESSION.IDBUCKET;
    }

    @Override
    public Field<String> field20() {
        return Session.SESSION.SDK_TYPE;
    }

    @Override
    public BigDecimal component1() {
        return getIdsession();
    }

    @Override
    public Integer component2() {
        return getIdsite();
    }

    @Override
    public BigDecimal component3() {
        return getIdvisitor();
    }

    @Override
    public Long component4() {
        return getIdurl();
    }

    @Override
    public Long component5() {
        return getIdreferer();
    }

    @Override
    public Long component6() {
        return getIduseragent();
    }

    @Override
    public LocalTime component7() {
        return getDate();
    }

    @Override
    public LocalTime component8() {
        return getUpdatedAt();
    }

    @Override
    public Long component9() {
        return getLengthActive();
    }

    @Override
    public Long component10() {
        return getLengthVisible();
    }

    @Override
    public Long component11() {
        return getLengthLoaded();
    }

    @Override
    public String component12() {
        return getLocale();
    }

    @Override
    public Short component13() {
        return getMpathyEnabled();
    }

    @Override
    public Short component14() {
        return getFlashver();
    }

    @Override
    public Long component15() {
        return getNumPi();
    }

    @Override
    public Short component16() {
        return getImported();
    }

    @Override
    public String component17() {
        return getScriptVersions();
    }

    @Override
    public BigDecimal component18() {
        return getSuccessor();
    }

    @Override
    public BigDecimal component19() {
        return getIdbucket();
    }

    @Override
    public String component20() {
        return getSdkType();
    }

    @Override
    public BigDecimal value1() {
        return getIdsession();
    }

    @Override
    public Integer value2() {
        return getIdsite();
    }

    @Override
    public BigDecimal value3() {
        return getIdvisitor();
    }

    @Override
    public Long value4() {
        return getIdurl();
    }

    @Override
    public Long value5() {
        return getIdreferer();
    }

    @Override
    public Long value6() {
        return getIduseragent();
    }

    @Override
    public LocalTime value7() {
        return getDate();
    }

    @Override
    public LocalTime value8() {
        return getUpdatedAt();
    }

    @Override
    public Long value9() {
        return getLengthActive();
    }

    @Override
    public Long value10() {
        return getLengthVisible();
    }

    @Override
    public Long value11() {
        return getLengthLoaded();
    }

    @Override
    public String value12() {
        return getLocale();
    }

    @Override
    public Short value13() {
        return getMpathyEnabled();
    }

    @Override
    public Short value14() {
        return getFlashver();
    }

    @Override
    public Long value15() {
        return getNumPi();
    }

    @Override
    public Short value16() {
        return getImported();
    }

    @Override
    public String value17() {
        return getScriptVersions();
    }

    @Override
    public BigDecimal value18() {
        return getSuccessor();
    }

    @Override
    public BigDecimal value19() {
        return getIdbucket();
    }

    @Override
    public String value20() {
        return getSdkType();
    }

    @Override
    public SessionRecord value1(BigDecimal value) {
        setIdsession(value);
        return this;
    }

    @Override
    public SessionRecord value2(Integer value) {
        setIdsite(value);
        return this;
    }

    @Override
    public SessionRecord value3(BigDecimal value) {
        setIdvisitor(value);
        return this;
    }

    @Override
    public SessionRecord value4(Long value) {
        setIdurl(value);
        return this;
    }

    @Override
    public SessionRecord value5(Long value) {
        setIdreferer(value);
        return this;
    }

    @Override
    public SessionRecord value6(Long value) {
        setIduseragent(value);
        return this;
    }

    @Override
    public SessionRecord value7(LocalTime value) {
        setDate(value);
        return this;
    }

    @Override
    public SessionRecord value8(LocalTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public SessionRecord value9(Long value) {
        setLengthActive(value);
        return this;
    }

    @Override
    public SessionRecord value10(Long value) {
        setLengthVisible(value);
        return this;
    }

    @Override
    public SessionRecord value11(Long value) {
        setLengthLoaded(value);
        return this;
    }

    @Override
    public SessionRecord value12(String value) {
        setLocale(value);
        return this;
    }

    @Override
    public SessionRecord value13(Short value) {
        setMpathyEnabled(value);
        return this;
    }

    @Override
    public SessionRecord value14(Short value) {
        setFlashver(value);
        return this;
    }

    @Override
    public SessionRecord value15(Long value) {
        setNumPi(value);
        return this;
    }

    @Override
    public SessionRecord value16(Short value) {
        setImported(value);
        return this;
    }

    @Override
    public SessionRecord value17(String value) {
        setScriptVersions(value);
        return this;
    }

    @Override
    public SessionRecord value18(BigDecimal value) {
        setSuccessor(value);
        return this;
    }

    @Override
    public SessionRecord value19(BigDecimal value) {
        setIdbucket(value);
        return this;
    }

    @Override
    public SessionRecord value20(String value) {
        setSdkType(value);
        return this;
    }

    @Override
    public SessionRecord values(BigDecimal value1, Integer value2, BigDecimal value3, Long value4, Long value5, Long value6, LocalTime value7, LocalTime value8, Long value9, Long value10, Long value11, String value12, Short value13, Short value14, Long value15, Short value16, String value17, BigDecimal value18, BigDecimal value19, String value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SessionRecord
     */
    public SessionRecord() {
        super(Session.SESSION);
    }

    /**
     * Create a detached, initialised SessionRecord
     */
    public SessionRecord(BigDecimal idsession, Integer idsite, BigDecimal idvisitor, Long idurl, Long idreferer, Long iduseragent, LocalTime date, LocalTime updatedAt, Long lengthActive, Long lengthVisible, Long lengthLoaded, String locale, Short mpathyEnabled, Short flashver, Long numPi, Short imported, String scriptVersions, BigDecimal successor, BigDecimal idbucket, String sdkType) {
        super(Session.SESSION);

        setIdsession(idsession);
        setIdsite(idsite);
        setIdvisitor(idvisitor);
        setIdurl(idurl);
        setIdreferer(idreferer);
        setIduseragent(iduseragent);
        setDate(date);
        setUpdatedAt(updatedAt);
        setLengthActive(lengthActive);
        setLengthVisible(lengthVisible);
        setLengthLoaded(lengthLoaded);
        setLocale(locale);
        setMpathyEnabled(mpathyEnabled);
        setFlashver(flashver);
        setNumPi(numPi);
        setImported(imported);
        setScriptVersions(scriptVersions);
        setSuccessor(successor);
        setIdbucket(idbucket);
        setSdkType(sdkType);
    }
}
