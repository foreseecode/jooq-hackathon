/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables.records;


import com.verint.mpathy.db.live.tables.Settings;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * General settings table to define key/value pairs at user, site or user/site
 * level.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SettingsRecord extends TableRecordImpl<SettingsRecord> implements Record6<Long, Long, Integer, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live.settings.idsettings</code>. Primary key of this
     * table.
     */
    public void setIdsettings(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>live.settings.idsettings</code>. Primary key of this
     * table.
     */
    public Long getIdsettings() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>live.settings.iduser</code>. Optional foreign key to the
     * user table.
     */
    public void setIduser(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>live.settings.iduser</code>. Optional foreign key to the
     * user table.
     */
    public Long getIduser() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>live.settings.idsite</code>. Optional foreign key to the
     * site table.
     */
    public void setIdsite(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>live.settings.idsite</code>. Optional foreign key to the
     * site table.
     */
    public Integer getIdsite() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>live.settings.scope</code>. The scope which define a
     * optional namespace for "key".
     */
    public void setScope(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>live.settings.scope</code>. The scope which define a
     * optional namespace for "key".
     */
    public String getScope() {
        return (String) get(3);
    }

    /**
     * Setter for <code>live.settings.key</code>. The key to identify "value"
     * for the "iduser" or "idsite".
     */
    public void setKey(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>live.settings.key</code>. The key to identify "value"
     * for the "iduser" or "idsite".
     */
    public String getKey() {
        return (String) get(4);
    }

    /**
     * Setter for <code>live.settings.value</code>. The concrete value of the
     * settings entry.
     */
    public void setValue(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>live.settings.value</code>. The concrete value of the
     * settings entry.
     */
    public String getValue() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, Integer, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Long, Integer, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Settings.SETTINGS.IDSETTINGS;
    }

    @Override
    public Field<Long> field2() {
        return Settings.SETTINGS.IDUSER;
    }

    @Override
    public Field<Integer> field3() {
        return Settings.SETTINGS.IDSITE;
    }

    @Override
    public Field<String> field4() {
        return Settings.SETTINGS.SCOPE;
    }

    @Override
    public Field<String> field5() {
        return Settings.SETTINGS.KEY;
    }

    @Override
    public Field<String> field6() {
        return Settings.SETTINGS.VALUE;
    }

    @Override
    public Long component1() {
        return getIdsettings();
    }

    @Override
    public Long component2() {
        return getIduser();
    }

    @Override
    public Integer component3() {
        return getIdsite();
    }

    @Override
    public String component4() {
        return getScope();
    }

    @Override
    public String component5() {
        return getKey();
    }

    @Override
    public String component6() {
        return getValue();
    }

    @Override
    public Long value1() {
        return getIdsettings();
    }

    @Override
    public Long value2() {
        return getIduser();
    }

    @Override
    public Integer value3() {
        return getIdsite();
    }

    @Override
    public String value4() {
        return getScope();
    }

    @Override
    public String value5() {
        return getKey();
    }

    @Override
    public String value6() {
        return getValue();
    }

    @Override
    public SettingsRecord value1(Long value) {
        setIdsettings(value);
        return this;
    }

    @Override
    public SettingsRecord value2(Long value) {
        setIduser(value);
        return this;
    }

    @Override
    public SettingsRecord value3(Integer value) {
        setIdsite(value);
        return this;
    }

    @Override
    public SettingsRecord value4(String value) {
        setScope(value);
        return this;
    }

    @Override
    public SettingsRecord value5(String value) {
        setKey(value);
        return this;
    }

    @Override
    public SettingsRecord value6(String value) {
        setValue(value);
        return this;
    }

    @Override
    public SettingsRecord values(Long value1, Long value2, Integer value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SettingsRecord
     */
    public SettingsRecord() {
        super(Settings.SETTINGS);
    }

    /**
     * Create a detached, initialised SettingsRecord
     */
    public SettingsRecord(Long idsettings, Long iduser, Integer idsite, String scope, String key, String value) {
        super(Settings.SETTINGS);

        setIdsettings(idsettings);
        setIduser(iduser);
        setIdsite(idsite);
        setScope(scope);
        setKey(key);
        setValue(value);
    }
}
