/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables.records;


import com.verint.mpathy.db.live.tables.Visitor;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VisitorRecord extends TableRecordImpl<VisitorRecord> implements Record3<BigDecimal, Short, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live.visitor.idvisitor</code>.
     */
    public void setIdvisitor(BigDecimal value) {
        set(0, value);
    }

    /**
     * Getter for <code>live.visitor.idvisitor</code>.
     */
    public BigDecimal getIdvisitor() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>live.visitor.delete_me</code>.
     */
    public void setDeleteMe(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>live.visitor.delete_me</code>.
     */
    public Short getDeleteMe() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>live.visitor.hash</code>.
     */
    public void setHash(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>live.visitor.hash</code>.
     */
    public String getHash() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<BigDecimal, Short, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<BigDecimal, Short, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<BigDecimal> field1() {
        return Visitor.VISITOR.IDVISITOR;
    }

    @Override
    public Field<Short> field2() {
        return Visitor.VISITOR.DELETE_ME;
    }

    @Override
    public Field<String> field3() {
        return Visitor.VISITOR.HASH;
    }

    @Override
    public BigDecimal component1() {
        return getIdvisitor();
    }

    @Override
    public Short component2() {
        return getDeleteMe();
    }

    @Override
    public String component3() {
        return getHash();
    }

    @Override
    public BigDecimal value1() {
        return getIdvisitor();
    }

    @Override
    public Short value2() {
        return getDeleteMe();
    }

    @Override
    public String value3() {
        return getHash();
    }

    @Override
    public VisitorRecord value1(BigDecimal value) {
        setIdvisitor(value);
        return this;
    }

    @Override
    public VisitorRecord value2(Short value) {
        setDeleteMe(value);
        return this;
    }

    @Override
    public VisitorRecord value3(String value) {
        setHash(value);
        return this;
    }

    @Override
    public VisitorRecord values(BigDecimal value1, Short value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VisitorRecord
     */
    public VisitorRecord() {
        super(Visitor.VISITOR);
    }

    /**
     * Create a detached, initialised VisitorRecord
     */
    public VisitorRecord(BigDecimal idvisitor, Short deleteMe, String hash) {
        super(Visitor.VISITOR);

        setIdvisitor(idvisitor);
        setDeleteMe(deleteMe);
        setHash(hash);
    }
}
