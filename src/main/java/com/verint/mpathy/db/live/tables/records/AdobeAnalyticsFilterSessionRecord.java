/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables.records;


import com.verint.mpathy.db.live.tables.AdobeAnalyticsFilterSession;

import java.math.BigDecimal;
import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdobeAnalyticsFilterSessionRecord extends TableRecordImpl<AdobeAnalyticsFilterSessionRecord> implements Record4<BigDecimal, String, BigDecimal, LocalDate> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live.adobe_analytics_filter_session.idfilter</code>.
     * this serves as a FK to the table "adobe_analytics_filter".
     */
    public void setIdfilter(BigDecimal value) {
        set(0, value);
    }

    /**
     * Getter for <code>live.adobe_analytics_filter_session.idfilter</code>.
     * this serves as a FK to the table "adobe_analytics_filter".
     */
    public BigDecimal getIdfilter() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>live.adobe_analytics_filter_session.idvisitor</code>.
     * this serves as a FK to the table "visitor".
     */
    public void setIdvisitor(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>live.adobe_analytics_filter_session.idvisitor</code>.
     * this serves as a FK to the table "visitor".
     */
    public String getIdvisitor() {
        return (String) get(1);
    }

    /**
     * Setter for <code>live.adobe_analytics_filter_session.idsession</code>.
     */
    public void setIdsession(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>live.adobe_analytics_filter_session.idsession</code>.
     */
    public BigDecimal getIdsession() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>live.adobe_analytics_filter_session.import_date</code>.
     * this is the date, the value was imported the first time.
     */
    public void setImportDate(LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>live.adobe_analytics_filter_session.import_date</code>.
     * this is the date, the value was imported the first time.
     */
    public LocalDate getImportDate() {
        return (LocalDate) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<BigDecimal, String, BigDecimal, LocalDate> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<BigDecimal, String, BigDecimal, LocalDate> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<BigDecimal> field1() {
        return AdobeAnalyticsFilterSession.ADOBE_ANALYTICS_FILTER_SESSION.IDFILTER;
    }

    @Override
    public Field<String> field2() {
        return AdobeAnalyticsFilterSession.ADOBE_ANALYTICS_FILTER_SESSION.IDVISITOR;
    }

    @Override
    public Field<BigDecimal> field3() {
        return AdobeAnalyticsFilterSession.ADOBE_ANALYTICS_FILTER_SESSION.IDSESSION;
    }

    @Override
    public Field<LocalDate> field4() {
        return AdobeAnalyticsFilterSession.ADOBE_ANALYTICS_FILTER_SESSION.IMPORT_DATE;
    }

    @Override
    public BigDecimal component1() {
        return getIdfilter();
    }

    @Override
    public String component2() {
        return getIdvisitor();
    }

    @Override
    public BigDecimal component3() {
        return getIdsession();
    }

    @Override
    public LocalDate component4() {
        return getImportDate();
    }

    @Override
    public BigDecimal value1() {
        return getIdfilter();
    }

    @Override
    public String value2() {
        return getIdvisitor();
    }

    @Override
    public BigDecimal value3() {
        return getIdsession();
    }

    @Override
    public LocalDate value4() {
        return getImportDate();
    }

    @Override
    public AdobeAnalyticsFilterSessionRecord value1(BigDecimal value) {
        setIdfilter(value);
        return this;
    }

    @Override
    public AdobeAnalyticsFilterSessionRecord value2(String value) {
        setIdvisitor(value);
        return this;
    }

    @Override
    public AdobeAnalyticsFilterSessionRecord value3(BigDecimal value) {
        setIdsession(value);
        return this;
    }

    @Override
    public AdobeAnalyticsFilterSessionRecord value4(LocalDate value) {
        setImportDate(value);
        return this;
    }

    @Override
    public AdobeAnalyticsFilterSessionRecord values(BigDecimal value1, String value2, BigDecimal value3, LocalDate value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AdobeAnalyticsFilterSessionRecord
     */
    public AdobeAnalyticsFilterSessionRecord() {
        super(AdobeAnalyticsFilterSession.ADOBE_ANALYTICS_FILTER_SESSION);
    }

    /**
     * Create a detached, initialised AdobeAnalyticsFilterSessionRecord
     */
    public AdobeAnalyticsFilterSessionRecord(BigDecimal idfilter, String idvisitor, BigDecimal idsession, LocalDate importDate) {
        super(AdobeAnalyticsFilterSession.ADOBE_ANALYTICS_FILTER_SESSION);

        setIdfilter(idfilter);
        setIdvisitor(idvisitor);
        setIdsession(idsession);
        setImportDate(importDate);
    }
}
