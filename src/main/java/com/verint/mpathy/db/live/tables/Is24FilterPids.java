/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.Is24FilterPidsRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Is24FilterPids extends TableImpl<Is24FilterPidsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live.is24_filter_pids</code>
     */
    public static final Is24FilterPids IS24_FILTER_PIDS = new Is24FilterPids();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Is24FilterPidsRecord> getRecordType() {
        return Is24FilterPidsRecord.class;
    }

    /**
     * The column <code>live.is24_filter_pids.idfilter</code>.
     */
    public final TableField<Is24FilterPidsRecord, BigDecimal> IDFILTER = createField(DSL.name("idfilter"), SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>live.is24_filter_pids.idpage</code>.
     */
    public final TableField<Is24FilterPidsRecord, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>live.is24_filter_pids.date</code>.
     */
    public final TableField<Is24FilterPidsRecord, Integer> DATE = createField(DSL.name("date"), SQLDataType.INTEGER, this, "");

    private Is24FilterPids(Name alias, Table<Is24FilterPidsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Is24FilterPids(Name alias, Table<Is24FilterPidsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>live.is24_filter_pids</code> table reference
     */
    public Is24FilterPids(String alias) {
        this(DSL.name(alias), IS24_FILTER_PIDS);
    }

    /**
     * Create an aliased <code>live.is24_filter_pids</code> table reference
     */
    public Is24FilterPids(Name alias) {
        this(alias, IS24_FILTER_PIDS);
    }

    /**
     * Create a <code>live.is24_filter_pids</code> table reference
     */
    public Is24FilterPids() {
        this(DSL.name("is24_filter_pids"), null);
    }

    public <O extends Record> Is24FilterPids(Table<O> child, ForeignKey<O, Is24FilterPidsRecord> key) {
        super(child, key, IS24_FILTER_PIDS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public Is24FilterPids as(String alias) {
        return new Is24FilterPids(DSL.name(alias), this);
    }

    @Override
    public Is24FilterPids as(Name alias) {
        return new Is24FilterPids(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Is24FilterPids rename(String name) {
        return new Is24FilterPids(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Is24FilterPids rename(Name name) {
        return new Is24FilterPids(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<BigDecimal, BigDecimal, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
