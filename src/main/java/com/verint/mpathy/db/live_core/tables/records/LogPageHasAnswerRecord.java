/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables.records;


import com.verint.mpathy.db.live_core.tables.LogPageHasAnswer;

import java.math.BigDecimal;
import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogPageHasAnswerRecord extends TableRecordImpl<LogPageHasAnswerRecord> implements Record6<BigDecimal, Long, Short, LocalTime, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live_core.log_page_has_answer.idpage</code>.
     */
    public void setIdpage(BigDecimal value) {
        set(0, value);
    }

    /**
     * Getter for <code>live_core.log_page_has_answer.idpage</code>.
     */
    public BigDecimal getIdpage() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>live_core.log_page_has_answer.idquestion</code>.
     */
    public void setIdquestion(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_core.log_page_has_answer.idquestion</code>.
     */
    public Long getIdquestion() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>live_core.log_page_has_answer.import_state</code>.
     */
    public void setImportState(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>live_core.log_page_has_answer.import_state</code>.
     */
    public Short getImportState() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>live_core.log_page_has_answer.date</code>.
     */
    public void setDate(LocalTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>live_core.log_page_has_answer.date</code>.
     */
    public LocalTime getDate() {
        return (LocalTime) get(3);
    }

    /**
     * Setter for <code>live_core.log_page_has_answer.import_error</code>.
     */
    public void setImportError(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>live_core.log_page_has_answer.import_error</code>.
     */
    public String getImportError() {
        return (String) get(4);
    }

    /**
     * Setter for <code>live_core.log_page_has_answer.idresponse</code>.
     */
    public void setIdresponse(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>live_core.log_page_has_answer.idresponse</code>.
     */
    public String getIdresponse() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<BigDecimal, Long, Short, LocalTime, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<BigDecimal, Long, Short, LocalTime, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<BigDecimal> field1() {
        return LogPageHasAnswer.LOG_PAGE_HAS_ANSWER.IDPAGE;
    }

    @Override
    public Field<Long> field2() {
        return LogPageHasAnswer.LOG_PAGE_HAS_ANSWER.IDQUESTION;
    }

    @Override
    public Field<Short> field3() {
        return LogPageHasAnswer.LOG_PAGE_HAS_ANSWER.IMPORT_STATE;
    }

    @Override
    public Field<LocalTime> field4() {
        return LogPageHasAnswer.LOG_PAGE_HAS_ANSWER.DATE;
    }

    @Override
    public Field<String> field5() {
        return LogPageHasAnswer.LOG_PAGE_HAS_ANSWER.IMPORT_ERROR;
    }

    @Override
    public Field<String> field6() {
        return LogPageHasAnswer.LOG_PAGE_HAS_ANSWER.IDRESPONSE;
    }

    @Override
    public BigDecimal component1() {
        return getIdpage();
    }

    @Override
    public Long component2() {
        return getIdquestion();
    }

    @Override
    public Short component3() {
        return getImportState();
    }

    @Override
    public LocalTime component4() {
        return getDate();
    }

    @Override
    public String component5() {
        return getImportError();
    }

    @Override
    public String component6() {
        return getIdresponse();
    }

    @Override
    public BigDecimal value1() {
        return getIdpage();
    }

    @Override
    public Long value2() {
        return getIdquestion();
    }

    @Override
    public Short value3() {
        return getImportState();
    }

    @Override
    public LocalTime value4() {
        return getDate();
    }

    @Override
    public String value5() {
        return getImportError();
    }

    @Override
    public String value6() {
        return getIdresponse();
    }

    @Override
    public LogPageHasAnswerRecord value1(BigDecimal value) {
        setIdpage(value);
        return this;
    }

    @Override
    public LogPageHasAnswerRecord value2(Long value) {
        setIdquestion(value);
        return this;
    }

    @Override
    public LogPageHasAnswerRecord value3(Short value) {
        setImportState(value);
        return this;
    }

    @Override
    public LogPageHasAnswerRecord value4(LocalTime value) {
        setDate(value);
        return this;
    }

    @Override
    public LogPageHasAnswerRecord value5(String value) {
        setImportError(value);
        return this;
    }

    @Override
    public LogPageHasAnswerRecord value6(String value) {
        setIdresponse(value);
        return this;
    }

    @Override
    public LogPageHasAnswerRecord values(BigDecimal value1, Long value2, Short value3, LocalTime value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LogPageHasAnswerRecord
     */
    public LogPageHasAnswerRecord() {
        super(LogPageHasAnswer.LOG_PAGE_HAS_ANSWER);
    }

    /**
     * Create a detached, initialised LogPageHasAnswerRecord
     */
    public LogPageHasAnswerRecord(BigDecimal idpage, Long idquestion, Short importState, LocalTime date, String importError, String idresponse) {
        super(LogPageHasAnswer.LOG_PAGE_HAS_ANSWER);

        setIdpage(idpage);
        setIdquestion(idquestion);
        setImportState(importState);
        setDate(date);
        setImportError(importError);
        setIdresponse(idresponse);
    }
}
