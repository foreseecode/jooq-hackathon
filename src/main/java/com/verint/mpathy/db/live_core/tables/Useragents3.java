/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables;


import com.verint.mpathy.db.live_core.LiveCore;
import com.verint.mpathy.db.live_core.tables.records.Useragents3Record;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Useragents3 extends TableImpl<Useragents3Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live_core.useragents3</code>
     */
    public static final Useragents3 USERAGENTS3 = new Useragents3();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Useragents3Record> getRecordType() {
        return Useragents3Record.class;
    }

    /**
     * The column <code>live_core.useragents3.iduseragent</code>.
     */
    public final TableField<Useragents3Record, Long> IDUSERAGENT = createField(DSL.name("iduseragent"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.useragents3.product</code>.
     */
    public final TableField<Useragents3Record, String> PRODUCT = createField(DSL.name("product"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live_core.useragents3.version</code>.
     */
    public final TableField<Useragents3Record, String> VERSION = createField(DSL.name("version"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live_core.useragents3.os</code>.
     */
    public final TableField<Useragents3Record, String> OS = createField(DSL.name("os"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live_core.useragents3.ua_string</code>.
     */
    public final TableField<Useragents3Record, String> UA_STRING = createField(DSL.name("ua_string"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live_core.useragents3.type</code>.
     */
    public final TableField<Useragents3Record, String> TYPE = createField(DSL.name("type"), SQLDataType.CLOB, this, "");

    private Useragents3(Name alias, Table<Useragents3Record> aliased) {
        this(alias, aliased, null);
    }

    private Useragents3(Name alias, Table<Useragents3Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Easy access to underlying table in other schemas."), TableOptions.view("create view \"useragents3\" as  SELECT useragents3.iduseragent,\n    useragents3.product,\n    useragents3.version,\n    useragents3.os,\n    useragents3.ua_string,\n    useragents3.type\n   FROM live.useragents3;"));
    }

    /**
     * Create an aliased <code>live_core.useragents3</code> table reference
     */
    public Useragents3(String alias) {
        this(DSL.name(alias), USERAGENTS3);
    }

    /**
     * Create an aliased <code>live_core.useragents3</code> table reference
     */
    public Useragents3(Name alias) {
        this(alias, USERAGENTS3);
    }

    /**
     * Create a <code>live_core.useragents3</code> table reference
     */
    public Useragents3() {
        this(DSL.name("useragents3"), null);
    }

    public <O extends Record> Useragents3(Table<O> child, ForeignKey<O, Useragents3Record> key) {
        super(child, key, USERAGENTS3);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : LiveCore.LIVE_CORE;
    }

    @Override
    public Useragents3 as(String alias) {
        return new Useragents3(DSL.name(alias), this);
    }

    @Override
    public Useragents3 as(Name alias) {
        return new Useragents3(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Useragents3 rename(String name) {
        return new Useragents3(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Useragents3 rename(Name name) {
        return new Useragents3(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
