/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables.records;


import com.verint.mpathy.db.live_core.tables.LogSession;

import java.math.BigDecimal;
import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogSessionRecord extends TableRecordImpl<LogSessionRecord> implements Record4<BigDecimal, Short, LocalTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live_core.log_session.idsession</code>.
     */
    public void setIdsession(BigDecimal value) {
        set(0, value);
    }

    /**
     * Getter for <code>live_core.log_session.idsession</code>.
     */
    public BigDecimal getIdsession() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>live_core.log_session.import_state</code>.
     */
    public void setImportState(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_core.log_session.import_state</code>.
     */
    public Short getImportState() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>live_core.log_session.date</code>.
     */
    public void setDate(LocalTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>live_core.log_session.date</code>.
     */
    public LocalTime getDate() {
        return (LocalTime) get(2);
    }

    /**
     * Setter for <code>live_core.log_session.import_error</code>.
     */
    public void setImportError(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>live_core.log_session.import_error</code>.
     */
    public String getImportError() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<BigDecimal, Short, LocalTime, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<BigDecimal, Short, LocalTime, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<BigDecimal> field1() {
        return LogSession.LOG_SESSION.IDSESSION;
    }

    @Override
    public Field<Short> field2() {
        return LogSession.LOG_SESSION.IMPORT_STATE;
    }

    @Override
    public Field<LocalTime> field3() {
        return LogSession.LOG_SESSION.DATE;
    }

    @Override
    public Field<String> field4() {
        return LogSession.LOG_SESSION.IMPORT_ERROR;
    }

    @Override
    public BigDecimal component1() {
        return getIdsession();
    }

    @Override
    public Short component2() {
        return getImportState();
    }

    @Override
    public LocalTime component3() {
        return getDate();
    }

    @Override
    public String component4() {
        return getImportError();
    }

    @Override
    public BigDecimal value1() {
        return getIdsession();
    }

    @Override
    public Short value2() {
        return getImportState();
    }

    @Override
    public LocalTime value3() {
        return getDate();
    }

    @Override
    public String value4() {
        return getImportError();
    }

    @Override
    public LogSessionRecord value1(BigDecimal value) {
        setIdsession(value);
        return this;
    }

    @Override
    public LogSessionRecord value2(Short value) {
        setImportState(value);
        return this;
    }

    @Override
    public LogSessionRecord value3(LocalTime value) {
        setDate(value);
        return this;
    }

    @Override
    public LogSessionRecord value4(String value) {
        setImportError(value);
        return this;
    }

    @Override
    public LogSessionRecord values(BigDecimal value1, Short value2, LocalTime value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LogSessionRecord
     */
    public LogSessionRecord() {
        super(LogSession.LOG_SESSION);
    }

    /**
     * Create a detached, initialised LogSessionRecord
     */
    public LogSessionRecord(BigDecimal idsession, Short importState, LocalTime date, String importError) {
        super(LogSession.LOG_SESSION);

        setIdsession(idsession);
        setImportState(importState);
        setDate(date);
        setImportError(importError);
    }
}
