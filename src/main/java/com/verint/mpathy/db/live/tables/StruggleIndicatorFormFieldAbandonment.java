/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.StruggleIndicatorFormFieldAbandonmentRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Indicator definition: A user has entered at least the minimum amount of
 * characters defined within the settings into a funnel form field, but did not
 * submit the form.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StruggleIndicatorFormFieldAbandonment extends TableImpl<StruggleIndicatorFormFieldAbandonmentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>live.struggle_indicator_form_field_abandonment</code>
     */
    public static final StruggleIndicatorFormFieldAbandonment STRUGGLE_INDICATOR_FORM_FIELD_ABANDONMENT = new StruggleIndicatorFormFieldAbandonment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StruggleIndicatorFormFieldAbandonmentRecord> getRecordType() {
        return StruggleIndicatorFormFieldAbandonmentRecord.class;
    }

    /**
     * The column
     * <code>live.struggle_indicator_form_field_abandonment.idstruggle_indicator_form_field_abandonment</code>.
     * The primary key for identifying rows of this table.
     */
    public final TableField<StruggleIndicatorFormFieldAbandonmentRecord, Long> IDSTRUGGLE_INDICATOR_FORM_FIELD_ABANDONMENT = createField(DSL.name("idstruggle_indicator_form_field_abandonment"), SQLDataType.BIGINT.nullable(false).identity(true), this, "The primary key for identifying rows of this table.");

    /**
     * The column
     * <code>live.struggle_indicator_form_field_abandonment.idpage</code>. The
     * FK for reference to the ID column of the "page" table.
     */
    public final TableField<StruggleIndicatorFormFieldAbandonmentRecord, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC, this, "The FK for reference to the ID column of the \"page\" table.");

    /**
     * The column
     * <code>live.struggle_indicator_form_field_abandonment.value</code>. True,
     * i.e. 1, if a user has entered the minimum required number of characters
     * defined within the struggle settings into a funnel form field and if has
     * not submitted the form afterwards.
     */
    public final TableField<StruggleIndicatorFormFieldAbandonmentRecord, Short> VALUE = createField(DSL.name("value"), SQLDataType.SMALLINT, this, "True, i.e. 1, if a user has entered the minimum required number of characters defined within the struggle settings into a funnel form field and if has not submitted the form afterwards.");

    /**
     * The column
     * <code>live.struggle_indicator_form_field_abandonment.idtaskitem</code>.
     * The FK for reference to the ID column of the "task_item" table.
     */
    public final TableField<StruggleIndicatorFormFieldAbandonmentRecord, BigDecimal> IDTASKITEM = createField(DSL.name("idtaskitem"), SQLDataType.NUMERIC, this, "The FK for reference to the ID column of the \"task_item\" table.");

    private StruggleIndicatorFormFieldAbandonment(Name alias, Table<StruggleIndicatorFormFieldAbandonmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private StruggleIndicatorFormFieldAbandonment(Name alias, Table<StruggleIndicatorFormFieldAbandonmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Indicator definition: A user has entered at least the minimum amount of characters defined within the settings into a funnel form field, but did not submit the form."), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>live.struggle_indicator_form_field_abandonment</code> table
     * reference
     */
    public StruggleIndicatorFormFieldAbandonment(String alias) {
        this(DSL.name(alias), STRUGGLE_INDICATOR_FORM_FIELD_ABANDONMENT);
    }

    /**
     * Create an aliased
     * <code>live.struggle_indicator_form_field_abandonment</code> table
     * reference
     */
    public StruggleIndicatorFormFieldAbandonment(Name alias) {
        this(alias, STRUGGLE_INDICATOR_FORM_FIELD_ABANDONMENT);
    }

    /**
     * Create a <code>live.struggle_indicator_form_field_abandonment</code>
     * table reference
     */
    public StruggleIndicatorFormFieldAbandonment() {
        this(DSL.name("struggle_indicator_form_field_abandonment"), null);
    }

    public <O extends Record> StruggleIndicatorFormFieldAbandonment(Table<O> child, ForeignKey<O, StruggleIndicatorFormFieldAbandonmentRecord> key) {
        super(child, key, STRUGGLE_INDICATOR_FORM_FIELD_ABANDONMENT);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public Identity<StruggleIndicatorFormFieldAbandonmentRecord, Long> getIdentity() {
        return (Identity<StruggleIndicatorFormFieldAbandonmentRecord, Long>) super.getIdentity();
    }

    @Override
    public StruggleIndicatorFormFieldAbandonment as(String alias) {
        return new StruggleIndicatorFormFieldAbandonment(DSL.name(alias), this);
    }

    @Override
    public StruggleIndicatorFormFieldAbandonment as(Name alias) {
        return new StruggleIndicatorFormFieldAbandonment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StruggleIndicatorFormFieldAbandonment rename(String name) {
        return new StruggleIndicatorFormFieldAbandonment(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StruggleIndicatorFormFieldAbandonment rename(Name name) {
        return new StruggleIndicatorFormFieldAbandonment(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, BigDecimal, Short, BigDecimal> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
