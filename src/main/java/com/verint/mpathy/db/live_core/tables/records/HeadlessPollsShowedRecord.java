/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables.records;


import com.verint.mpathy.db.live_core.tables.HeadlessPollsShowed;

import java.math.BigDecimal;
import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HeadlessPollsShowedRecord extends TableRecordImpl<HeadlessPollsShowedRecord> implements Record4<Integer, BigDecimal, Long, LocalTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live_core.headless_polls_showed.idsite</code>.
     */
    public void setIdsite(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>live_core.headless_polls_showed.idsite</code>.
     */
    public Integer getIdsite() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>live_core.headless_polls_showed.idvisitor</code>.
     */
    public void setIdvisitor(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_core.headless_polls_showed.idvisitor</code>.
     */
    public BigDecimal getIdvisitor() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>live_core.headless_polls_showed.idquestion</code>.
     */
    public void setIdquestion(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>live_core.headless_polls_showed.idquestion</code>.
     */
    public Long getIdquestion() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>live_core.headless_polls_showed.date</code>.
     */
    public void setDate(LocalTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>live_core.headless_polls_showed.date</code>.
     */
    public LocalTime getDate() {
        return (LocalTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, BigDecimal, Long, LocalTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, BigDecimal, Long, LocalTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return HeadlessPollsShowed.HEADLESS_POLLS_SHOWED.IDSITE;
    }

    @Override
    public Field<BigDecimal> field2() {
        return HeadlessPollsShowed.HEADLESS_POLLS_SHOWED.IDVISITOR;
    }

    @Override
    public Field<Long> field3() {
        return HeadlessPollsShowed.HEADLESS_POLLS_SHOWED.IDQUESTION;
    }

    @Override
    public Field<LocalTime> field4() {
        return HeadlessPollsShowed.HEADLESS_POLLS_SHOWED.DATE;
    }

    @Override
    public Integer component1() {
        return getIdsite();
    }

    @Override
    public BigDecimal component2() {
        return getIdvisitor();
    }

    @Override
    public Long component3() {
        return getIdquestion();
    }

    @Override
    public LocalTime component4() {
        return getDate();
    }

    @Override
    public Integer value1() {
        return getIdsite();
    }

    @Override
    public BigDecimal value2() {
        return getIdvisitor();
    }

    @Override
    public Long value3() {
        return getIdquestion();
    }

    @Override
    public LocalTime value4() {
        return getDate();
    }

    @Override
    public HeadlessPollsShowedRecord value1(Integer value) {
        setIdsite(value);
        return this;
    }

    @Override
    public HeadlessPollsShowedRecord value2(BigDecimal value) {
        setIdvisitor(value);
        return this;
    }

    @Override
    public HeadlessPollsShowedRecord value3(Long value) {
        setIdquestion(value);
        return this;
    }

    @Override
    public HeadlessPollsShowedRecord value4(LocalTime value) {
        setDate(value);
        return this;
    }

    @Override
    public HeadlessPollsShowedRecord values(Integer value1, BigDecimal value2, Long value3, LocalTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HeadlessPollsShowedRecord
     */
    public HeadlessPollsShowedRecord() {
        super(HeadlessPollsShowed.HEADLESS_POLLS_SHOWED);
    }

    /**
     * Create a detached, initialised HeadlessPollsShowedRecord
     */
    public HeadlessPollsShowedRecord(Integer idsite, BigDecimal idvisitor, Long idquestion, LocalTime date) {
        super(HeadlessPollsShowed.HEADLESS_POLLS_SHOWED);

        setIdsite(idsite);
        setIdvisitor(idvisitor);
        setIdquestion(idquestion);
        setDate(date);
    }
}
