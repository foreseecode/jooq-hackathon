/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.StruggleScorePageRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Holds the calculated struggle score for a specific page ID and its references
 * to relevant tables.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StruggleScorePage extends TableImpl<StruggleScorePageRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live.struggle_score_page</code>
     */
    public static final StruggleScorePage STRUGGLE_SCORE_PAGE = new StruggleScorePage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StruggleScorePageRecord> getRecordType() {
        return StruggleScorePageRecord.class;
    }

    /**
     * The column <code>live.struggle_score_page.idstruggle_score_page</code>.
     * The primary key for identifying rows of this table.
     */
    public final TableField<StruggleScorePageRecord, Long> IDSTRUGGLE_SCORE_PAGE = createField(DSL.name("idstruggle_score_page"), SQLDataType.BIGINT.nullable(false).identity(true), this, "The primary key for identifying rows of this table.");

    /**
     * The column <code>live.struggle_score_page.idsite</code>. The FK for
     * reference to the ID column of the "site" table.
     */
    public final TableField<StruggleScorePageRecord, Integer> IDSITE = createField(DSL.name("idsite"), SQLDataType.INTEGER, this, "The FK for reference to the ID column of the \"site\" table.");

    /**
     * The column <code>live.struggle_score_page.idsession</code>. The FK for
     * reference to the ID column of the "session" table.
     */
    public final TableField<StruggleScorePageRecord, BigDecimal> IDSESSION = createField(DSL.name("idsession"), SQLDataType.NUMERIC, this, "The FK for reference to the ID column of the \"session\" table.");

    /**
     * The column <code>live.struggle_score_page.idpage</code>. The FK for
     * reference to the ID column of the "page" table.
     */
    public final TableField<StruggleScorePageRecord, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC, this, "The FK for reference to the ID column of the \"page\" table.");

    /**
     * The column <code>live.struggle_score_page.score</code>. The calculated
     * score for this page ID.
     */
    public final TableField<StruggleScorePageRecord, Long> SCORE = createField(DSL.name("score"), SQLDataType.BIGINT, this, "The calculated score for this page ID.");

    private StruggleScorePage(Name alias, Table<StruggleScorePageRecord> aliased) {
        this(alias, aliased, null);
    }

    private StruggleScorePage(Name alias, Table<StruggleScorePageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Holds the calculated struggle score for a specific page ID and its references to relevant tables."), TableOptions.table());
    }

    /**
     * Create an aliased <code>live.struggle_score_page</code> table reference
     */
    public StruggleScorePage(String alias) {
        this(DSL.name(alias), STRUGGLE_SCORE_PAGE);
    }

    /**
     * Create an aliased <code>live.struggle_score_page</code> table reference
     */
    public StruggleScorePage(Name alias) {
        this(alias, STRUGGLE_SCORE_PAGE);
    }

    /**
     * Create a <code>live.struggle_score_page</code> table reference
     */
    public StruggleScorePage() {
        this(DSL.name("struggle_score_page"), null);
    }

    public <O extends Record> StruggleScorePage(Table<O> child, ForeignKey<O, StruggleScorePageRecord> key) {
        super(child, key, STRUGGLE_SCORE_PAGE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public Identity<StruggleScorePageRecord, Long> getIdentity() {
        return (Identity<StruggleScorePageRecord, Long>) super.getIdentity();
    }

    @Override
    public StruggleScorePage as(String alias) {
        return new StruggleScorePage(DSL.name(alias), this);
    }

    @Override
    public StruggleScorePage as(Name alias) {
        return new StruggleScorePage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StruggleScorePage rename(String name) {
        return new StruggleScorePage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StruggleScorePage rename(Name name) {
        return new StruggleScorePage(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Integer, BigDecimal, BigDecimal, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
