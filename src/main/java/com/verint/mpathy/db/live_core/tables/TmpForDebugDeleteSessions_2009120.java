/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables;


import com.verint.mpathy.db.live_core.LiveCore;
import com.verint.mpathy.db.live_core.tables.records.TmpForDebugDeleteSessions_2009120Record;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TmpForDebugDeleteSessions_2009120 extends TableImpl<TmpForDebugDeleteSessions_2009120Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>live_core.tmp_for_debug_delete_sessions_2009120</code>
     */
    public static final TmpForDebugDeleteSessions_2009120 TMP_FOR_DEBUG_DELETE_SESSIONS_2009120 = new TmpForDebugDeleteSessions_2009120();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TmpForDebugDeleteSessions_2009120Record> getRecordType() {
        return TmpForDebugDeleteSessions_2009120Record.class;
    }

    /**
     * The column
     * <code>live_core.tmp_for_debug_delete_sessions_2009120.idsite</code>.
     */
    public final TableField<TmpForDebugDeleteSessions_2009120Record, Integer> IDSITE = createField(DSL.name("idsite"), SQLDataType.INTEGER, this, "");

    /**
     * The column
     * <code>live_core.tmp_for_debug_delete_sessions_2009120.idvisitor</code>.
     */
    public final TableField<TmpForDebugDeleteSessions_2009120Record, BigDecimal> IDVISITOR = createField(DSL.name("idvisitor"), SQLDataType.NUMERIC, this, "");

    /**
     * The column
     * <code>live_core.tmp_for_debug_delete_sessions_2009120.idsession</code>.
     */
    public final TableField<TmpForDebugDeleteSessions_2009120Record, BigDecimal> IDSESSION = createField(DSL.name("idsession"), SQLDataType.NUMERIC, this, "");

    /**
     * The column
     * <code>live_core.tmp_for_debug_delete_sessions_2009120.idpage</code>.
     */
    public final TableField<TmpForDebugDeleteSessions_2009120Record, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC, this, "");

    /**
     * The column
     * <code>live_core.tmp_for_debug_delete_sessions_2009120.scaffold</code>.
     */
    public final TableField<TmpForDebugDeleteSessions_2009120Record, String> SCAFFOLD = createField(DSL.name("scaffold"), SQLDataType.CLOB, this, "");

    private TmpForDebugDeleteSessions_2009120(Name alias, Table<TmpForDebugDeleteSessions_2009120Record> aliased) {
        this(alias, aliased, null);
    }

    private TmpForDebugDeleteSessions_2009120(Name alias, Table<TmpForDebugDeleteSessions_2009120Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Easy access to underlying table in other schemas."), TableOptions.view("create view \"tmp_for_debug_delete_sessions_2009120\" as  SELECT tmp_for_debug_delete_sessions_2009120.idsite,\n    tmp_for_debug_delete_sessions_2009120.idvisitor,\n    tmp_for_debug_delete_sessions_2009120.idsession,\n    tmp_for_debug_delete_sessions_2009120.idpage,\n    tmp_for_debug_delete_sessions_2009120.scaffold\n   FROM live.tmp_for_debug_delete_sessions_2009120;"));
    }

    /**
     * Create an aliased
     * <code>live_core.tmp_for_debug_delete_sessions_2009120</code> table
     * reference
     */
    public TmpForDebugDeleteSessions_2009120(String alias) {
        this(DSL.name(alias), TMP_FOR_DEBUG_DELETE_SESSIONS_2009120);
    }

    /**
     * Create an aliased
     * <code>live_core.tmp_for_debug_delete_sessions_2009120</code> table
     * reference
     */
    public TmpForDebugDeleteSessions_2009120(Name alias) {
        this(alias, TMP_FOR_DEBUG_DELETE_SESSIONS_2009120);
    }

    /**
     * Create a <code>live_core.tmp_for_debug_delete_sessions_2009120</code>
     * table reference
     */
    public TmpForDebugDeleteSessions_2009120() {
        this(DSL.name("tmp_for_debug_delete_sessions_2009120"), null);
    }

    public <O extends Record> TmpForDebugDeleteSessions_2009120(Table<O> child, ForeignKey<O, TmpForDebugDeleteSessions_2009120Record> key) {
        super(child, key, TMP_FOR_DEBUG_DELETE_SESSIONS_2009120);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : LiveCore.LIVE_CORE;
    }

    @Override
    public TmpForDebugDeleteSessions_2009120 as(String alias) {
        return new TmpForDebugDeleteSessions_2009120(DSL.name(alias), this);
    }

    @Override
    public TmpForDebugDeleteSessions_2009120 as(Name alias) {
        return new TmpForDebugDeleteSessions_2009120(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TmpForDebugDeleteSessions_2009120 rename(String name) {
        return new TmpForDebugDeleteSessions_2009120(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TmpForDebugDeleteSessions_2009120 rename(Name name) {
        return new TmpForDebugDeleteSessions_2009120(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, BigDecimal, BigDecimal, BigDecimal, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
