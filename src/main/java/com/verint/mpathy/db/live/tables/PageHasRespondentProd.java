/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.PageHasRespondentProdRecord;

import java.math.BigDecimal;
import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PageHasRespondentProd extends TableImpl<PageHasRespondentProdRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live.page_has_respondent_prod</code>
     */
    public static final PageHasRespondentProd PAGE_HAS_RESPONDENT_PROD = new PageHasRespondentProd();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PageHasRespondentProdRecord> getRecordType() {
        return PageHasRespondentProdRecord.class;
    }

    /**
     * The column
     * <code>live.page_has_respondent_prod.idpage_has_respondent</code>.
     */
    public final TableField<PageHasRespondentProdRecord, BigDecimal> IDPAGE_HAS_RESPONDENT = createField(DSL.name("idpage_has_respondent"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.idpage</code>.
     */
    public final TableField<PageHasRespondentProdRecord, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.idsite1</code>.
     */
    public final TableField<PageHasRespondentProdRecord, Integer> IDSITE1 = createField(DSL.name("idsite1"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.idsession1</code>.
     */
    public final TableField<PageHasRespondentProdRecord, BigDecimal> IDSESSION1 = createField(DSL.name("idsession1"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.idvisitor1</code>.
     */
    public final TableField<PageHasRespondentProdRecord, BigDecimal> IDVISITOR1 = createField(DSL.name("idvisitor1"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.idrespondent</code>.
     */
    public final TableField<PageHasRespondentProdRecord, String> IDRESPONDENT = createField(DSL.name("idrespondent"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.idclient</code>.
     */
    public final TableField<PageHasRespondentProdRecord, BigDecimal> IDCLIENT = createField(DSL.name("idclient"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.idmodelinstance</code>.
     */
    public final TableField<PageHasRespondentProdRecord, String> IDMODELINSTANCE = createField(DSL.name("idmodelinstance"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.respondentdate</code>.
     */
    public final TableField<PageHasRespondentProdRecord, LocalTime> RESPONDENTDATE = createField(DSL.name("respondentdate"), SQLDataType.LOCALTIME(6), this, "");

    /**
     * The column <code>live.page_has_respondent_prod.respondenttype</code>.
     */
    public final TableField<PageHasRespondentProdRecord, String> RESPONDENTTYPE = createField(DSL.name("respondenttype"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.deleted_at</code>.
     */
    public final TableField<PageHasRespondentProdRecord, LocalTime> DELETED_AT = createField(DSL.name("deleted_at"), SQLDataType.LOCALTIME(6), this, "");

    /**
     * The column <code>live.page_has_respondent_prod.idsession2</code>.
     */
    public final TableField<PageHasRespondentProdRecord, BigDecimal> IDSESSION2 = createField(DSL.name("idsession2"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.idsite2</code>.
     */
    public final TableField<PageHasRespondentProdRecord, Integer> IDSITE2 = createField(DSL.name("idsite2"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.idvisitor2</code>.
     */
    public final TableField<PageHasRespondentProdRecord, BigDecimal> IDVISITOR2 = createField(DSL.name("idvisitor2"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.idurl</code>.
     */
    public final TableField<PageHasRespondentProdRecord, Long> IDURL = createField(DSL.name("idurl"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.idreferer</code>.
     */
    public final TableField<PageHasRespondentProdRecord, Long> IDREFERER = createField(DSL.name("idreferer"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.iduseragent</code>.
     */
    public final TableField<PageHasRespondentProdRecord, Long> IDUSERAGENT = createField(DSL.name("iduseragent"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.date</code>.
     */
    public final TableField<PageHasRespondentProdRecord, LocalTime> DATE = createField(DSL.name("date"), SQLDataType.LOCALTIME(6), this, "");

    /**
     * The column <code>live.page_has_respondent_prod.updated_at</code>.
     */
    public final TableField<PageHasRespondentProdRecord, LocalTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALTIME(6), this, "");

    /**
     * The column <code>live.page_has_respondent_prod.length_active</code>.
     */
    public final TableField<PageHasRespondentProdRecord, Long> LENGTH_ACTIVE = createField(DSL.name("length_active"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.length_visible</code>.
     */
    public final TableField<PageHasRespondentProdRecord, Long> LENGTH_VISIBLE = createField(DSL.name("length_visible"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.length_loaded</code>.
     */
    public final TableField<PageHasRespondentProdRecord, Long> LENGTH_LOADED = createField(DSL.name("length_loaded"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.locale</code>.
     */
    public final TableField<PageHasRespondentProdRecord, String> LOCALE = createField(DSL.name("locale"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.mpathy_enabled</code>.
     */
    public final TableField<PageHasRespondentProdRecord, Short> MPATHY_ENABLED = createField(DSL.name("mpathy_enabled"), SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.flashver</code>.
     */
    public final TableField<PageHasRespondentProdRecord, Short> FLASHVER = createField(DSL.name("flashver"), SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.num_pi</code>.
     */
    public final TableField<PageHasRespondentProdRecord, Long> NUM_PI = createField(DSL.name("num_pi"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.imported</code>.
     */
    public final TableField<PageHasRespondentProdRecord, Short> IMPORTED = createField(DSL.name("imported"), SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.script_versions</code>.
     */
    public final TableField<PageHasRespondentProdRecord, String> SCRIPT_VERSIONS = createField(DSL.name("script_versions"), SQLDataType.CLOB, this, "");

    /**
     * The column
     * <code>live.page_has_respondent_prod.tracking_persistence</code>.
     */
    public final TableField<PageHasRespondentProdRecord, String> TRACKING_PERSISTENCE = createField(DSL.name("tracking_persistence"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.successor</code>.
     */
    public final TableField<PageHasRespondentProdRecord, BigDecimal> SUCCESSOR = createField(DSL.name("successor"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live.page_has_respondent_prod.idbucket</code>.
     */
    public final TableField<PageHasRespondentProdRecord, BigDecimal> IDBUCKET = createField(DSL.name("idbucket"), SQLDataType.NUMERIC, this, "");

    private PageHasRespondentProd(Name alias, Table<PageHasRespondentProdRecord> aliased) {
        this(alias, aliased, null);
    }

    private PageHasRespondentProd(Name alias, Table<PageHasRespondentProdRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>live.page_has_respondent_prod</code> table
     * reference
     */
    public PageHasRespondentProd(String alias) {
        this(DSL.name(alias), PAGE_HAS_RESPONDENT_PROD);
    }

    /**
     * Create an aliased <code>live.page_has_respondent_prod</code> table
     * reference
     */
    public PageHasRespondentProd(Name alias) {
        this(alias, PAGE_HAS_RESPONDENT_PROD);
    }

    /**
     * Create a <code>live.page_has_respondent_prod</code> table reference
     */
    public PageHasRespondentProd() {
        this(DSL.name("page_has_respondent_prod"), null);
    }

    public <O extends Record> PageHasRespondentProd(Table<O> child, ForeignKey<O, PageHasRespondentProdRecord> key) {
        super(child, key, PAGE_HAS_RESPONDENT_PROD);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public PageHasRespondentProd as(String alias) {
        return new PageHasRespondentProd(DSL.name(alias), this);
    }

    @Override
    public PageHasRespondentProd as(Name alias) {
        return new PageHasRespondentProd(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PageHasRespondentProd rename(String name) {
        return new PageHasRespondentProd(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PageHasRespondentProd rename(Name name) {
        return new PageHasRespondentProd(name, null);
    }
}
