/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.PageHasTagRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PageHasTag extends TableImpl<PageHasTagRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live.page_has_tag</code>
     */
    public static final PageHasTag PAGE_HAS_TAG = new PageHasTag();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PageHasTagRecord> getRecordType() {
        return PageHasTagRecord.class;
    }

    /**
     * The column <code>live.page_has_tag.idpage</code>.
     */
    public final TableField<PageHasTagRecord, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>live.page_has_tag.tag</code>.
     */
    public final TableField<PageHasTagRecord, String> TAG = createField(DSL.name("tag"), SQLDataType.CLOB.nullable(false), this, "");

    private PageHasTag(Name alias, Table<PageHasTagRecord> aliased) {
        this(alias, aliased, null);
    }

    private PageHasTag(Name alias, Table<PageHasTagRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>live.page_has_tag</code> table reference
     */
    public PageHasTag(String alias) {
        this(DSL.name(alias), PAGE_HAS_TAG);
    }

    /**
     * Create an aliased <code>live.page_has_tag</code> table reference
     */
    public PageHasTag(Name alias) {
        this(alias, PAGE_HAS_TAG);
    }

    /**
     * Create a <code>live.page_has_tag</code> table reference
     */
    public PageHasTag() {
        this(DSL.name("page_has_tag"), null);
    }

    public <O extends Record> PageHasTag(Table<O> child, ForeignKey<O, PageHasTagRecord> key) {
        super(child, key, PAGE_HAS_TAG);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public PageHasTag as(String alias) {
        return new PageHasTag(DSL.name(alias), this);
    }

    @Override
    public PageHasTag as(Name alias) {
        return new PageHasTag(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PageHasTag rename(String name) {
        return new PageHasTag(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PageHasTag rename(Name name) {
        return new PageHasTag(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<BigDecimal, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
