/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables.records;


import com.verint.mpathy.db.live_core.tables.UserFingerprint;

import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserFingerprintRecord extends TableRecordImpl<UserFingerprintRecord> implements Record8<Long, String, String, String, String, LocalTime, LocalTime, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live_core.user_fingerprint.iduser</code>.
     */
    public void setIduser(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>live_core.user_fingerprint.iduser</code>.
     */
    public Long getIduser() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>live_core.user_fingerprint.hashed_ip</code>.
     */
    public void setHashedIp(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_core.user_fingerprint.hashed_ip</code>.
     */
    public String getHashedIp() {
        return (String) get(1);
    }

    /**
     * Setter for <code>live_core.user_fingerprint.login_session_id</code>.
     */
    public void setLoginSessionId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>live_core.user_fingerprint.login_session_id</code>.
     */
    public String getLoginSessionId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>live_core.user_fingerprint.fingerprint_hash</code>.
     */
    public void setFingerprintHash(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>live_core.user_fingerprint.fingerprint_hash</code>.
     */
    public String getFingerprintHash() {
        return (String) get(3);
    }

    /**
     * Setter for <code>live_core.user_fingerprint.fingerprint_json</code>.
     */
    public void setFingerprintJson(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>live_core.user_fingerprint.fingerprint_json</code>.
     */
    public String getFingerprintJson() {
        return (String) get(4);
    }

    /**
     * Setter for <code>live_core.user_fingerprint.first_logged_in_at</code>.
     */
    public void setFirstLoggedInAt(LocalTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>live_core.user_fingerprint.first_logged_in_at</code>.
     */
    public LocalTime getFirstLoggedInAt() {
        return (LocalTime) get(5);
    }

    /**
     * Setter for <code>live_core.user_fingerprint.last_activity_at</code>.
     */
    public void setLastActivityAt(LocalTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>live_core.user_fingerprint.last_activity_at</code>.
     */
    public LocalTime getLastActivityAt() {
        return (LocalTime) get(6);
    }

    /**
     * Setter for <code>live_core.user_fingerprint.login_count</code>.
     */
    public void setLoginCount(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>live_core.user_fingerprint.login_count</code>.
     */
    public Long getLoginCount() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, String, String, String, LocalTime, LocalTime, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, String, String, String, LocalTime, LocalTime, Long> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserFingerprint.USER_FINGERPRINT.IDUSER;
    }

    @Override
    public Field<String> field2() {
        return UserFingerprint.USER_FINGERPRINT.HASHED_IP;
    }

    @Override
    public Field<String> field3() {
        return UserFingerprint.USER_FINGERPRINT.LOGIN_SESSION_ID;
    }

    @Override
    public Field<String> field4() {
        return UserFingerprint.USER_FINGERPRINT.FINGERPRINT_HASH;
    }

    @Override
    public Field<String> field5() {
        return UserFingerprint.USER_FINGERPRINT.FINGERPRINT_JSON;
    }

    @Override
    public Field<LocalTime> field6() {
        return UserFingerprint.USER_FINGERPRINT.FIRST_LOGGED_IN_AT;
    }

    @Override
    public Field<LocalTime> field7() {
        return UserFingerprint.USER_FINGERPRINT.LAST_ACTIVITY_AT;
    }

    @Override
    public Field<Long> field8() {
        return UserFingerprint.USER_FINGERPRINT.LOGIN_COUNT;
    }

    @Override
    public Long component1() {
        return getIduser();
    }

    @Override
    public String component2() {
        return getHashedIp();
    }

    @Override
    public String component3() {
        return getLoginSessionId();
    }

    @Override
    public String component4() {
        return getFingerprintHash();
    }

    @Override
    public String component5() {
        return getFingerprintJson();
    }

    @Override
    public LocalTime component6() {
        return getFirstLoggedInAt();
    }

    @Override
    public LocalTime component7() {
        return getLastActivityAt();
    }

    @Override
    public Long component8() {
        return getLoginCount();
    }

    @Override
    public Long value1() {
        return getIduser();
    }

    @Override
    public String value2() {
        return getHashedIp();
    }

    @Override
    public String value3() {
        return getLoginSessionId();
    }

    @Override
    public String value4() {
        return getFingerprintHash();
    }

    @Override
    public String value5() {
        return getFingerprintJson();
    }

    @Override
    public LocalTime value6() {
        return getFirstLoggedInAt();
    }

    @Override
    public LocalTime value7() {
        return getLastActivityAt();
    }

    @Override
    public Long value8() {
        return getLoginCount();
    }

    @Override
    public UserFingerprintRecord value1(Long value) {
        setIduser(value);
        return this;
    }

    @Override
    public UserFingerprintRecord value2(String value) {
        setHashedIp(value);
        return this;
    }

    @Override
    public UserFingerprintRecord value3(String value) {
        setLoginSessionId(value);
        return this;
    }

    @Override
    public UserFingerprintRecord value4(String value) {
        setFingerprintHash(value);
        return this;
    }

    @Override
    public UserFingerprintRecord value5(String value) {
        setFingerprintJson(value);
        return this;
    }

    @Override
    public UserFingerprintRecord value6(LocalTime value) {
        setFirstLoggedInAt(value);
        return this;
    }

    @Override
    public UserFingerprintRecord value7(LocalTime value) {
        setLastActivityAt(value);
        return this;
    }

    @Override
    public UserFingerprintRecord value8(Long value) {
        setLoginCount(value);
        return this;
    }

    @Override
    public UserFingerprintRecord values(Long value1, String value2, String value3, String value4, String value5, LocalTime value6, LocalTime value7, Long value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserFingerprintRecord
     */
    public UserFingerprintRecord() {
        super(UserFingerprint.USER_FINGERPRINT);
    }

    /**
     * Create a detached, initialised UserFingerprintRecord
     */
    public UserFingerprintRecord(Long iduser, String hashedIp, String loginSessionId, String fingerprintHash, String fingerprintJson, LocalTime firstLoggedInAt, LocalTime lastActivityAt, Long loginCount) {
        super(UserFingerprint.USER_FINGERPRINT);

        setIduser(iduser);
        setHashedIp(hashedIp);
        setLoginSessionId(loginSessionId);
        setFingerprintHash(fingerprintHash);
        setFingerprintJson(fingerprintJson);
        setFirstLoggedInAt(firstLoggedInAt);
        setLastActivityAt(lastActivityAt);
        setLoginCount(loginCount);
    }
}
