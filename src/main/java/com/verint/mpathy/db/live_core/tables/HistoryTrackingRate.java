/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables;


import com.verint.mpathy.db.live_core.LiveCore;
import com.verint.mpathy.db.live_core.tables.records.HistoryTrackingRateRecord;

import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HistoryTrackingRate extends TableImpl<HistoryTrackingRateRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live_core.history_tracking_rate</code>
     */
    public static final HistoryTrackingRate HISTORY_TRACKING_RATE = new HistoryTrackingRate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HistoryTrackingRateRecord> getRecordType() {
        return HistoryTrackingRateRecord.class;
    }

    /**
     * The column <code>live_core.history_tracking_rate.idhtr</code>.
     */
    public final TableField<HistoryTrackingRateRecord, Long> IDHTR = createField(DSL.name("idhtr"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.history_tracking_rate.date</code>.
     */
    public final TableField<HistoryTrackingRateRecord, LocalTime> DATE = createField(DSL.name("date"), SQLDataType.LOCALTIME(6), this, "");

    /**
     * The column <code>live_core.history_tracking_rate.idsite</code>.
     */
    public final TableField<HistoryTrackingRateRecord, Integer> IDSITE = createField(DSL.name("idsite"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>live_core.history_tracking_rate.device</code>.
     */
    public final TableField<HistoryTrackingRateRecord, String> DEVICE = createField(DSL.name("device"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live_core.history_tracking_rate.from</code>.
     */
    public final TableField<HistoryTrackingRateRecord, Double> FROM = createField(DSL.name("from"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>live_core.history_tracking_rate.to</code>.
     */
    public final TableField<HistoryTrackingRateRecord, Double> TO = createField(DSL.name("to"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>live_core.history_tracking_rate.iduser</code>.
     */
    public final TableField<HistoryTrackingRateRecord, Long> IDUSER = createField(DSL.name("iduser"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.history_tracking_rate.type</code>.
     */
    public final TableField<HistoryTrackingRateRecord, String> TYPE = createField(DSL.name("type"), SQLDataType.CLOB, this, "");

    private HistoryTrackingRate(Name alias, Table<HistoryTrackingRateRecord> aliased) {
        this(alias, aliased, null);
    }

    private HistoryTrackingRate(Name alias, Table<HistoryTrackingRateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Easy access to underlying table in other schemas."), TableOptions.view("create view \"history_tracking_rate\" as  SELECT history_tracking_rate.idhtr,\n    history_tracking_rate.date,\n    history_tracking_rate.idsite,\n    history_tracking_rate.device,\n    history_tracking_rate.\"from\",\n    history_tracking_rate.\"to\",\n    history_tracking_rate.iduser,\n    history_tracking_rate.type\n   FROM live.history_tracking_rate;"));
    }

    /**
     * Create an aliased <code>live_core.history_tracking_rate</code> table
     * reference
     */
    public HistoryTrackingRate(String alias) {
        this(DSL.name(alias), HISTORY_TRACKING_RATE);
    }

    /**
     * Create an aliased <code>live_core.history_tracking_rate</code> table
     * reference
     */
    public HistoryTrackingRate(Name alias) {
        this(alias, HISTORY_TRACKING_RATE);
    }

    /**
     * Create a <code>live_core.history_tracking_rate</code> table reference
     */
    public HistoryTrackingRate() {
        this(DSL.name("history_tracking_rate"), null);
    }

    public <O extends Record> HistoryTrackingRate(Table<O> child, ForeignKey<O, HistoryTrackingRateRecord> key) {
        super(child, key, HISTORY_TRACKING_RATE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : LiveCore.LIVE_CORE;
    }

    @Override
    public HistoryTrackingRate as(String alias) {
        return new HistoryTrackingRate(DSL.name(alias), this);
    }

    @Override
    public HistoryTrackingRate as(Name alias) {
        return new HistoryTrackingRate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HistoryTrackingRate rename(String name) {
        return new HistoryTrackingRate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HistoryTrackingRate rename(Name name) {
        return new HistoryTrackingRate(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, LocalTime, Integer, String, Double, Double, Long, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
