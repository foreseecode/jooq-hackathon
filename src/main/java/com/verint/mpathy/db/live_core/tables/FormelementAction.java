/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables;


import com.verint.mpathy.db.live_core.LiveCore;
import com.verint.mpathy.db.live_core.tables.records.FormelementActionRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row15;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FormelementAction extends TableImpl<FormelementActionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live_core.formelement_action</code>
     */
    public static final FormelementAction FORMELEMENT_ACTION = new FormelementAction();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FormelementActionRecord> getRecordType() {
        return FormelementActionRecord.class;
    }

    /**
     * The column <code>live_core.formelement_action.idelement</code>.
     */
    public final TableField<FormelementActionRecord, BigDecimal> IDELEMENT = createField(DSL.name("idelement"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.formelement_action.idpage</code>.
     */
    public final TableField<FormelementActionRecord, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.formelement_action.idsite</code>.
     */
    public final TableField<FormelementActionRecord, Integer> IDSITE = createField(DSL.name("idsite"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>live_core.formelement_action.idsession</code>.
     */
    public final TableField<FormelementActionRecord, BigDecimal> IDSESSION = createField(DSL.name("idsession"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.formelement_action.idurl</code>.
     */
    public final TableField<FormelementActionRecord, Long> IDURL = createField(DSL.name("idurl"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.formelement_action.idpage_name</code>.
     */
    public final TableField<FormelementActionRecord, Long> IDPAGE_NAME = createField(DSL.name("idpage_name"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.formelement_action.parentform</code>.
     */
    public final TableField<FormelementActionRecord, BigDecimal> PARENTFORM = createField(DSL.name("parentform"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.formelement_action.num_inputs</code>.
     */
    public final TableField<FormelementActionRecord, Long> NUM_INPUTS = createField(DSL.name("num_inputs"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.formelement_action.num_deletes</code>.
     */
    public final TableField<FormelementActionRecord, Long> NUM_DELETES = createField(DSL.name("num_deletes"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.formelement_action.num_corrects</code>.
     */
    public final TableField<FormelementActionRecord, Long> NUM_CORRECTS = createField(DSL.name("num_corrects"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.formelement_action.time_to_input</code>.
     */
    public final TableField<FormelementActionRecord, Long> TIME_TO_INPUT = createField(DSL.name("time_to_input"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.formelement_action.num_clicks</code>.
     */
    public final TableField<FormelementActionRecord, Long> NUM_CLICKS = createField(DSL.name("num_clicks"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.formelement_action.length_active</code>.
     */
    public final TableField<FormelementActionRecord, Long> LENGTH_ACTIVE = createField(DSL.name("length_active"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.formelement_action.field_value</code>.
     */
    public final TableField<FormelementActionRecord, String> FIELD_VALUE = createField(DSL.name("field_value"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live_core.formelement_action.uniquekey</code>.
     */
    public final TableField<FormelementActionRecord, BigDecimal> UNIQUEKEY = createField(DSL.name("uniquekey"), SQLDataType.NUMERIC, this, "");

    private FormelementAction(Name alias, Table<FormelementActionRecord> aliased) {
        this(alias, aliased, null);
    }

    private FormelementAction(Name alias, Table<FormelementActionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Easy access to underlying table in other schemas."), TableOptions.view("create view \"formelement_action\" as  SELECT formelement_action.idelement,\n    formelement_action.idpage,\n    formelement_action.idsite,\n    formelement_action.idsession,\n    formelement_action.idurl,\n    formelement_action.idpage_name,\n    formelement_action.parentform,\n    formelement_action.num_inputs,\n    formelement_action.num_deletes,\n    formelement_action.num_corrects,\n    formelement_action.time_to_input,\n    formelement_action.num_clicks,\n    formelement_action.length_active,\n    formelement_action.field_value,\n    formelement_action.uniquekey\n   FROM live.formelement_action;"));
    }

    /**
     * Create an aliased <code>live_core.formelement_action</code> table
     * reference
     */
    public FormelementAction(String alias) {
        this(DSL.name(alias), FORMELEMENT_ACTION);
    }

    /**
     * Create an aliased <code>live_core.formelement_action</code> table
     * reference
     */
    public FormelementAction(Name alias) {
        this(alias, FORMELEMENT_ACTION);
    }

    /**
     * Create a <code>live_core.formelement_action</code> table reference
     */
    public FormelementAction() {
        this(DSL.name("formelement_action"), null);
    }

    public <O extends Record> FormelementAction(Table<O> child, ForeignKey<O, FormelementActionRecord> key) {
        super(child, key, FORMELEMENT_ACTION);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : LiveCore.LIVE_CORE;
    }

    @Override
    public FormelementAction as(String alias) {
        return new FormelementAction(DSL.name(alias), this);
    }

    @Override
    public FormelementAction as(Name alias) {
        return new FormelementAction(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FormelementAction rename(String name) {
        return new FormelementAction(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FormelementAction rename(Name name) {
        return new FormelementAction(name, null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row15<BigDecimal, BigDecimal, Integer, BigDecimal, Long, Long, BigDecimal, Long, Long, Long, Long, Long, Long, String, BigDecimal> fieldsRow() {
        return (Row15) super.fieldsRow();
    }
}
