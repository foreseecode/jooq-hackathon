/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.TaskItemActionRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskItemAction extends TableImpl<TaskItemActionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live.task_item_action</code>
     */
    public static final TaskItemAction TASK_ITEM_ACTION = new TaskItemAction();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TaskItemActionRecord> getRecordType() {
        return TaskItemActionRecord.class;
    }

    /**
     * The column <code>live.task_item_action.idtaskitem</code>.
     */
    public final TableField<TaskItemActionRecord, BigDecimal> IDTASKITEM = createField(DSL.name("idtaskitem"), SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>live.task_item_action.idtask</code>.
     */
    public final TableField<TaskItemActionRecord, Long> IDTASK = createField(DSL.name("idtask"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live.task_item_action.idsession</code>.
     */
    public final TableField<TaskItemActionRecord, BigDecimal> IDSESSION = createField(DSL.name("idsession"), SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>live.task_item_action.timestamp_taskaction</code>.
     */
    public final TableField<TaskItemActionRecord, BigDecimal> TIMESTAMP_TASKACTION = createField(DSL.name("timestamp_taskaction"), SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>live.task_item_action.timestamp</code>.
     */
    public final TableField<TaskItemActionRecord, BigDecimal> TIMESTAMP = createField(DSL.name("timestamp"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live.task_item_action.idsite</code>.
     */
    public final TableField<TaskItemActionRecord, Long> IDSITE = createField(DSL.name("idsite"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live.task_item_action.num_pi</code>.
     */
    public final TableField<TaskItemActionRecord, Long> NUM_PI = createField(DSL.name("num_pi"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live.task_item_action.num_clicks</code>.
     */
    public final TableField<TaskItemActionRecord, Long> NUM_CLICKS = createField(DSL.name("num_clicks"), SQLDataType.BIGINT, this, "");

    private TaskItemAction(Name alias, Table<TaskItemActionRecord> aliased) {
        this(alias, aliased, null);
    }

    private TaskItemAction(Name alias, Table<TaskItemActionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>live.task_item_action</code> table reference
     */
    public TaskItemAction(String alias) {
        this(DSL.name(alias), TASK_ITEM_ACTION);
    }

    /**
     * Create an aliased <code>live.task_item_action</code> table reference
     */
    public TaskItemAction(Name alias) {
        this(alias, TASK_ITEM_ACTION);
    }

    /**
     * Create a <code>live.task_item_action</code> table reference
     */
    public TaskItemAction() {
        this(DSL.name("task_item_action"), null);
    }

    public <O extends Record> TaskItemAction(Table<O> child, ForeignKey<O, TaskItemActionRecord> key) {
        super(child, key, TASK_ITEM_ACTION);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public TaskItemAction as(String alias) {
        return new TaskItemAction(DSL.name(alias), this);
    }

    @Override
    public TaskItemAction as(Name alias) {
        return new TaskItemAction(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TaskItemAction rename(String name) {
        return new TaskItemAction(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TaskItemAction rename(Name name) {
        return new TaskItemAction(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<BigDecimal, Long, BigDecimal, BigDecimal, BigDecimal, Long, Long, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
