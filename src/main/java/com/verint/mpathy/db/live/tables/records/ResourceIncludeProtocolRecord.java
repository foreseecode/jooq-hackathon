/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables.records;


import com.verint.mpathy.db.live.tables.ResourceIncludeProtocol;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * The table contains protocols which supported by the
 * mpathy-asset-store-serivce.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourceIncludeProtocolRecord extends TableRecordImpl<ResourceIncludeProtocolRecord> implements Record2<Short, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>live.resource_include_protocol.idinclude_protocol</code>. Primary
     * key for the protocol entry.
     */
    public void setIdincludeProtocol(Short value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>live.resource_include_protocol.idinclude_protocol</code>. Primary
     * key for the protocol entry.
     */
    public Short getIdincludeProtocol() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>live.resource_include_protocol.protocol</code>. The
     * column contain a url protocol which supported for a resource.
     */
    public void setProtocol(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>live.resource_include_protocol.protocol</code>. The
     * column contain a url protocol which supported for a resource.
     */
    public String getProtocol() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Short, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Short, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Short> field1() {
        return ResourceIncludeProtocol.RESOURCE_INCLUDE_PROTOCOL.IDINCLUDE_PROTOCOL;
    }

    @Override
    public Field<String> field2() {
        return ResourceIncludeProtocol.RESOURCE_INCLUDE_PROTOCOL.PROTOCOL;
    }

    @Override
    public Short component1() {
        return getIdincludeProtocol();
    }

    @Override
    public String component2() {
        return getProtocol();
    }

    @Override
    public Short value1() {
        return getIdincludeProtocol();
    }

    @Override
    public String value2() {
        return getProtocol();
    }

    @Override
    public ResourceIncludeProtocolRecord value1(Short value) {
        setIdincludeProtocol(value);
        return this;
    }

    @Override
    public ResourceIncludeProtocolRecord value2(String value) {
        setProtocol(value);
        return this;
    }

    @Override
    public ResourceIncludeProtocolRecord values(Short value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResourceIncludeProtocolRecord
     */
    public ResourceIncludeProtocolRecord() {
        super(ResourceIncludeProtocol.RESOURCE_INCLUDE_PROTOCOL);
    }

    /**
     * Create a detached, initialised ResourceIncludeProtocolRecord
     */
    public ResourceIncludeProtocolRecord(Short idincludeProtocol, String protocol) {
        super(ResourceIncludeProtocol.RESOURCE_INCLUDE_PROTOCOL);

        setIdincludeProtocol(idincludeProtocol);
        setProtocol(protocol);
    }
}
