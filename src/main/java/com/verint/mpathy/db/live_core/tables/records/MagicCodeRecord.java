/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables.records;


import com.verint.mpathy.db.live_core.tables.MagicCode;

import java.math.BigDecimal;
import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MagicCodeRecord extends TableRecordImpl<MagicCodeRecord> implements Record3<String, BigDecimal, LocalTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live_core.magic_code.code</code>.
     */
    public void setCode(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>live_core.magic_code.code</code>.
     */
    public String getCode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>live_core.magic_code.used_by</code>.
     */
    public void setUsedBy(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_core.magic_code.used_by</code>.
     */
    public BigDecimal getUsedBy() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>live_core.magic_code.used_at</code>.
     */
    public void setUsedAt(LocalTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>live_core.magic_code.used_at</code>.
     */
    public LocalTime getUsedAt() {
        return (LocalTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, BigDecimal, LocalTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, BigDecimal, LocalTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return MagicCode.MAGIC_CODE.CODE;
    }

    @Override
    public Field<BigDecimal> field2() {
        return MagicCode.MAGIC_CODE.USED_BY;
    }

    @Override
    public Field<LocalTime> field3() {
        return MagicCode.MAGIC_CODE.USED_AT;
    }

    @Override
    public String component1() {
        return getCode();
    }

    @Override
    public BigDecimal component2() {
        return getUsedBy();
    }

    @Override
    public LocalTime component3() {
        return getUsedAt();
    }

    @Override
    public String value1() {
        return getCode();
    }

    @Override
    public BigDecimal value2() {
        return getUsedBy();
    }

    @Override
    public LocalTime value3() {
        return getUsedAt();
    }

    @Override
    public MagicCodeRecord value1(String value) {
        setCode(value);
        return this;
    }

    @Override
    public MagicCodeRecord value2(BigDecimal value) {
        setUsedBy(value);
        return this;
    }

    @Override
    public MagicCodeRecord value3(LocalTime value) {
        setUsedAt(value);
        return this;
    }

    @Override
    public MagicCodeRecord values(String value1, BigDecimal value2, LocalTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MagicCodeRecord
     */
    public MagicCodeRecord() {
        super(MagicCode.MAGIC_CODE);
    }

    /**
     * Create a detached, initialised MagicCodeRecord
     */
    public MagicCodeRecord(String code, BigDecimal usedBy, LocalTime usedAt) {
        super(MagicCode.MAGIC_CODE);

        setCode(code);
        setUsedBy(usedBy);
        setUsedAt(usedAt);
    }
}
