/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables;


import com.verint.mpathy.db.live_core.LiveCore;
import com.verint.mpathy.db.live_core.tables.records.PageHasGestureRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PageHasGesture extends TableImpl<PageHasGestureRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live_core.page_has_gesture</code>
     */
    public static final PageHasGesture PAGE_HAS_GESTURE = new PageHasGesture();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PageHasGestureRecord> getRecordType() {
        return PageHasGestureRecord.class;
    }

    /**
     * The column <code>live_core.page_has_gesture.idpage</code>.
     */
    public final TableField<PageHasGestureRecord, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.page_has_gesture.idgesture</code>.
     */
    public final TableField<PageHasGestureRecord, Integer> IDGESTURE = createField(DSL.name("idgesture"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>live_core.page_has_gesture.occur</code>.
     */
    public final TableField<PageHasGestureRecord, Integer> OCCUR = createField(DSL.name("occur"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>live_core.page_has_gesture.begin</code>.
     */
    public final TableField<PageHasGestureRecord, Long> BEGIN = createField(DSL.name("begin"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.page_has_gesture.end</code>.
     */
    public final TableField<PageHasGestureRecord, Long> END = createField(DSL.name("end"), SQLDataType.BIGINT, this, "");

    private PageHasGesture(Name alias, Table<PageHasGestureRecord> aliased) {
        this(alias, aliased, null);
    }

    private PageHasGesture(Name alias, Table<PageHasGestureRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Easy access to underlying table in other schemas."), TableOptions.view("create view \"page_has_gesture\" as  SELECT page_has_gesture.idpage,\n    page_has_gesture.idgesture,\n    page_has_gesture.occur,\n    page_has_gesture.begin,\n    page_has_gesture.\"end\"\n   FROM live.page_has_gesture;"));
    }

    /**
     * Create an aliased <code>live_core.page_has_gesture</code> table reference
     */
    public PageHasGesture(String alias) {
        this(DSL.name(alias), PAGE_HAS_GESTURE);
    }

    /**
     * Create an aliased <code>live_core.page_has_gesture</code> table reference
     */
    public PageHasGesture(Name alias) {
        this(alias, PAGE_HAS_GESTURE);
    }

    /**
     * Create a <code>live_core.page_has_gesture</code> table reference
     */
    public PageHasGesture() {
        this(DSL.name("page_has_gesture"), null);
    }

    public <O extends Record> PageHasGesture(Table<O> child, ForeignKey<O, PageHasGestureRecord> key) {
        super(child, key, PAGE_HAS_GESTURE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : LiveCore.LIVE_CORE;
    }

    @Override
    public PageHasGesture as(String alias) {
        return new PageHasGesture(DSL.name(alias), this);
    }

    @Override
    public PageHasGesture as(Name alias) {
        return new PageHasGesture(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PageHasGesture rename(String name) {
        return new PageHasGesture(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PageHasGesture rename(Name name) {
        return new PageHasGesture(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<BigDecimal, Integer, Integer, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
