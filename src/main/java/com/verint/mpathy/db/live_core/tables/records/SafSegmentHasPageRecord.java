/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables.records;


import com.verint.mpathy.db.live_core.tables.SafSegmentHasPage;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SafSegmentHasPageRecord extends TableRecordImpl<SafSegmentHasPageRecord> implements Record3<BigDecimal, Long, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live_core.saf_segment_has_page.idpage</code>.
     */
    public void setIdpage(BigDecimal value) {
        set(0, value);
    }

    /**
     * Getter for <code>live_core.saf_segment_has_page.idpage</code>.
     */
    public BigDecimal getIdpage() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>live_core.saf_segment_has_page.idsite</code>.
     */
    public void setIdsite(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_core.saf_segment_has_page.idsite</code>.
     */
    public Long getIdsite() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>live_core.saf_segment_has_page.idfilter</code>.
     */
    public void setIdfilter(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>live_core.saf_segment_has_page.idfilter</code>.
     */
    public BigDecimal getIdfilter() {
        return (BigDecimal) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<BigDecimal, Long, BigDecimal> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<BigDecimal, Long, BigDecimal> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<BigDecimal> field1() {
        return SafSegmentHasPage.SAF_SEGMENT_HAS_PAGE.IDPAGE;
    }

    @Override
    public Field<Long> field2() {
        return SafSegmentHasPage.SAF_SEGMENT_HAS_PAGE.IDSITE;
    }

    @Override
    public Field<BigDecimal> field3() {
        return SafSegmentHasPage.SAF_SEGMENT_HAS_PAGE.IDFILTER;
    }

    @Override
    public BigDecimal component1() {
        return getIdpage();
    }

    @Override
    public Long component2() {
        return getIdsite();
    }

    @Override
    public BigDecimal component3() {
        return getIdfilter();
    }

    @Override
    public BigDecimal value1() {
        return getIdpage();
    }

    @Override
    public Long value2() {
        return getIdsite();
    }

    @Override
    public BigDecimal value3() {
        return getIdfilter();
    }

    @Override
    public SafSegmentHasPageRecord value1(BigDecimal value) {
        setIdpage(value);
        return this;
    }

    @Override
    public SafSegmentHasPageRecord value2(Long value) {
        setIdsite(value);
        return this;
    }

    @Override
    public SafSegmentHasPageRecord value3(BigDecimal value) {
        setIdfilter(value);
        return this;
    }

    @Override
    public SafSegmentHasPageRecord values(BigDecimal value1, Long value2, BigDecimal value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SafSegmentHasPageRecord
     */
    public SafSegmentHasPageRecord() {
        super(SafSegmentHasPage.SAF_SEGMENT_HAS_PAGE);
    }

    /**
     * Create a detached, initialised SafSegmentHasPageRecord
     */
    public SafSegmentHasPageRecord(BigDecimal idpage, Long idsite, BigDecimal idfilter) {
        super(SafSegmentHasPage.SAF_SEGMENT_HAS_PAGE);

        setIdpage(idpage);
        setIdsite(idsite);
        setIdfilter(idfilter);
    }
}
