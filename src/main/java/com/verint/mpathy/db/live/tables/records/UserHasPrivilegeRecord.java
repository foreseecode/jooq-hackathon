/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables.records;


import com.verint.mpathy.db.live.tables.UserHasPrivilege;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserHasPrivilegeRecord extends TableRecordImpl<UserHasPrivilegeRecord> implements Record2<BigDecimal, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live.user_has_privilege.iduser</code>. user ident from
     * user table
     */
    public void setIduser(BigDecimal value) {
        set(0, value);
    }

    /**
     * Getter for <code>live.user_has_privilege.iduser</code>. user ident from
     * user table
     */
    public BigDecimal getIduser() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>live.user_has_privilege.idprivilege</code>. privilege
     * ident from privilege table
     */
    public void setIdprivilege(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>live.user_has_privilege.idprivilege</code>. privilege
     * ident from privilege table
     */
    public Long getIdprivilege() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<BigDecimal, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<BigDecimal, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<BigDecimal> field1() {
        return UserHasPrivilege.USER_HAS_PRIVILEGE.IDUSER;
    }

    @Override
    public Field<Long> field2() {
        return UserHasPrivilege.USER_HAS_PRIVILEGE.IDPRIVILEGE;
    }

    @Override
    public BigDecimal component1() {
        return getIduser();
    }

    @Override
    public Long component2() {
        return getIdprivilege();
    }

    @Override
    public BigDecimal value1() {
        return getIduser();
    }

    @Override
    public Long value2() {
        return getIdprivilege();
    }

    @Override
    public UserHasPrivilegeRecord value1(BigDecimal value) {
        setIduser(value);
        return this;
    }

    @Override
    public UserHasPrivilegeRecord value2(Long value) {
        setIdprivilege(value);
        return this;
    }

    @Override
    public UserHasPrivilegeRecord values(BigDecimal value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserHasPrivilegeRecord
     */
    public UserHasPrivilegeRecord() {
        super(UserHasPrivilege.USER_HAS_PRIVILEGE);
    }

    /**
     * Create a detached, initialised UserHasPrivilegeRecord
     */
    public UserHasPrivilegeRecord(BigDecimal iduser, Long idprivilege) {
        super(UserHasPrivilege.USER_HAS_PRIVILEGE);

        setIduser(iduser);
        setIdprivilege(idprivilege);
    }
}
