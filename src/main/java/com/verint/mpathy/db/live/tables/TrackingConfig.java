/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.TrackingConfigRecord;

import java.math.BigDecimal;
import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Holds information about the tracking config revisions that exist for a site.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrackingConfig extends TableImpl<TrackingConfigRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live.tracking_config</code>
     */
    public static final TrackingConfig TRACKING_CONFIG = new TrackingConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TrackingConfigRecord> getRecordType() {
        return TrackingConfigRecord.class;
    }

    /**
     * The column <code>live.tracking_config.idtracking_config</code>. Primary
     * key reference for table tracking_config.
     */
    public final TableField<TrackingConfigRecord, Integer> IDTRACKING_CONFIG = createField(DSL.name("idtracking_config"), SQLDataType.INTEGER.nullable(false).identity(true), this, "Primary key reference for table tracking_config.");

    /**
     * The column <code>live.tracking_config.idsite</code>. Foreign key
     * reference to table site.
     */
    public final TableField<TrackingConfigRecord, Integer> IDSITE = createField(DSL.name("idsite"), SQLDataType.INTEGER.nullable(false), this, "Foreign key reference to table site.");

    /**
     * The column <code>live.tracking_config.revision</code>. Foreign key
     * reference to table revision.
     */
    public final TableField<TrackingConfigRecord, Integer> REVISION = createField(DSL.name("revision"), SQLDataType.INTEGER.nullable(false), this, "Foreign key reference to table revision.");

    /**
     * The column <code>live.tracking_config.created_by</code>. The user who
     * issued the save for this tracking config. Foreign key reference to table
     * user.
     */
    public final TableField<TrackingConfigRecord, BigDecimal> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.NUMERIC.nullable(false), this, "The user who issued the save for this tracking config. Foreign key reference to table user.");

    /**
     * The column <code>live.tracking_config.published_by</code>. The user who
     * issued the publish for this tracking config. Foreign key reference to
     * table user.
     */
    public final TableField<TrackingConfigRecord, BigDecimal> PUBLISHED_BY = createField(DSL.name("published_by"), SQLDataType.NUMERIC, this, "The user who issued the publish for this tracking config. Foreign key reference to table user.");

    /**
     * The column <code>live.tracking_config.created_at</code>. Creation date of
     * the tracking config entry.
     */
    public final TableField<TrackingConfigRecord, LocalTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALTIME(6).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALTIME)), this, "Creation date of the tracking config entry.");

    /**
     * The column <code>live.tracking_config.published_at</code>. Publish date
     * of the tracking config entry.
     */
    public final TableField<TrackingConfigRecord, LocalTime> PUBLISHED_AT = createField(DSL.name("published_at"), SQLDataType.LOCALTIME(6), this, "Publish date of the tracking config entry.");

    /**
     * The column <code>live.tracking_config.save_mode</code>. Gives information
     * about the way this entry was saved. E.g. save, publish, etc.
     */
    public final TableField<TrackingConfigRecord, String> SAVE_MODE = createField(DSL.name("save_mode"), SQLDataType.CLOB, this, "Gives information about the way this entry was saved. E.g. save, publish, etc.");

    private TrackingConfig(Name alias, Table<TrackingConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private TrackingConfig(Name alias, Table<TrackingConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Holds information about the tracking config revisions that exist for a site."), TableOptions.table());
    }

    /**
     * Create an aliased <code>live.tracking_config</code> table reference
     */
    public TrackingConfig(String alias) {
        this(DSL.name(alias), TRACKING_CONFIG);
    }

    /**
     * Create an aliased <code>live.tracking_config</code> table reference
     */
    public TrackingConfig(Name alias) {
        this(alias, TRACKING_CONFIG);
    }

    /**
     * Create a <code>live.tracking_config</code> table reference
     */
    public TrackingConfig() {
        this(DSL.name("tracking_config"), null);
    }

    public <O extends Record> TrackingConfig(Table<O> child, ForeignKey<O, TrackingConfigRecord> key) {
        super(child, key, TRACKING_CONFIG);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public Identity<TrackingConfigRecord, Integer> getIdentity() {
        return (Identity<TrackingConfigRecord, Integer>) super.getIdentity();
    }

    @Override
    public TrackingConfig as(String alias) {
        return new TrackingConfig(DSL.name(alias), this);
    }

    @Override
    public TrackingConfig as(Name alias) {
        return new TrackingConfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TrackingConfig rename(String name) {
        return new TrackingConfig(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TrackingConfig rename(Name name) {
        return new TrackingConfig(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, Integer, BigDecimal, BigDecimal, LocalTime, LocalTime, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
