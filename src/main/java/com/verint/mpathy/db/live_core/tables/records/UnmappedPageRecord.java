/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables.records;


import com.verint.mpathy.db.live_core.tables.UnmappedPage;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UnmappedPageRecord extends TableRecordImpl<UnmappedPageRecord> implements Record3<BigDecimal, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live_core.unmapped_page.idpage</code>.
     */
    public void setIdpage(BigDecimal value) {
        set(0, value);
    }

    /**
     * Getter for <code>live_core.unmapped_page.idpage</code>.
     */
    public BigDecimal getIdpage() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>live_core.unmapped_page.idsite</code>.
     */
    public void setIdsite(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_core.unmapped_page.idsite</code>.
     */
    public Integer getIdsite() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>live_core.unmapped_page.idtracking_config</code>.
     */
    public void setIdtrackingConfig(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>live_core.unmapped_page.idtracking_config</code>.
     */
    public Integer getIdtrackingConfig() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<BigDecimal, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<BigDecimal, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<BigDecimal> field1() {
        return UnmappedPage.UNMAPPED_PAGE.IDPAGE;
    }

    @Override
    public Field<Integer> field2() {
        return UnmappedPage.UNMAPPED_PAGE.IDSITE;
    }

    @Override
    public Field<Integer> field3() {
        return UnmappedPage.UNMAPPED_PAGE.IDTRACKING_CONFIG;
    }

    @Override
    public BigDecimal component1() {
        return getIdpage();
    }

    @Override
    public Integer component2() {
        return getIdsite();
    }

    @Override
    public Integer component3() {
        return getIdtrackingConfig();
    }

    @Override
    public BigDecimal value1() {
        return getIdpage();
    }

    @Override
    public Integer value2() {
        return getIdsite();
    }

    @Override
    public Integer value3() {
        return getIdtrackingConfig();
    }

    @Override
    public UnmappedPageRecord value1(BigDecimal value) {
        setIdpage(value);
        return this;
    }

    @Override
    public UnmappedPageRecord value2(Integer value) {
        setIdsite(value);
        return this;
    }

    @Override
    public UnmappedPageRecord value3(Integer value) {
        setIdtrackingConfig(value);
        return this;
    }

    @Override
    public UnmappedPageRecord values(BigDecimal value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UnmappedPageRecord
     */
    public UnmappedPageRecord() {
        super(UnmappedPage.UNMAPPED_PAGE);
    }

    /**
     * Create a detached, initialised UnmappedPageRecord
     */
    public UnmappedPageRecord(BigDecimal idpage, Integer idsite, Integer idtrackingConfig) {
        super(UnmappedPage.UNMAPPED_PAGE);

        setIdpage(idpage);
        setIdsite(idsite);
        setIdtrackingConfig(idtrackingConfig);
    }
}
