/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables.records;


import com.verint.mpathy.db.live_core.tables.HistoryTrackingRate;

import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HistoryTrackingRateRecord extends TableRecordImpl<HistoryTrackingRateRecord> implements Record8<Long, LocalTime, Integer, String, Double, Double, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live_core.history_tracking_rate.idhtr</code>.
     */
    public void setIdhtr(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>live_core.history_tracking_rate.idhtr</code>.
     */
    public Long getIdhtr() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>live_core.history_tracking_rate.date</code>.
     */
    public void setDate(LocalTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_core.history_tracking_rate.date</code>.
     */
    public LocalTime getDate() {
        return (LocalTime) get(1);
    }

    /**
     * Setter for <code>live_core.history_tracking_rate.idsite</code>.
     */
    public void setIdsite(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>live_core.history_tracking_rate.idsite</code>.
     */
    public Integer getIdsite() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>live_core.history_tracking_rate.device</code>.
     */
    public void setDevice(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>live_core.history_tracking_rate.device</code>.
     */
    public String getDevice() {
        return (String) get(3);
    }

    /**
     * Setter for <code>live_core.history_tracking_rate.from</code>.
     */
    public void setFrom(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>live_core.history_tracking_rate.from</code>.
     */
    public Double getFrom() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>live_core.history_tracking_rate.to</code>.
     */
    public void setTo(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>live_core.history_tracking_rate.to</code>.
     */
    public Double getTo() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>live_core.history_tracking_rate.iduser</code>.
     */
    public void setIduser(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>live_core.history_tracking_rate.iduser</code>.
     */
    public Long getIduser() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>live_core.history_tracking_rate.type</code>.
     */
    public void setType(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>live_core.history_tracking_rate.type</code>.
     */
    public String getType() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, LocalTime, Integer, String, Double, Double, Long, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, LocalTime, Integer, String, Double, Double, Long, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return HistoryTrackingRate.HISTORY_TRACKING_RATE.IDHTR;
    }

    @Override
    public Field<LocalTime> field2() {
        return HistoryTrackingRate.HISTORY_TRACKING_RATE.DATE;
    }

    @Override
    public Field<Integer> field3() {
        return HistoryTrackingRate.HISTORY_TRACKING_RATE.IDSITE;
    }

    @Override
    public Field<String> field4() {
        return HistoryTrackingRate.HISTORY_TRACKING_RATE.DEVICE;
    }

    @Override
    public Field<Double> field5() {
        return HistoryTrackingRate.HISTORY_TRACKING_RATE.FROM;
    }

    @Override
    public Field<Double> field6() {
        return HistoryTrackingRate.HISTORY_TRACKING_RATE.TO;
    }

    @Override
    public Field<Long> field7() {
        return HistoryTrackingRate.HISTORY_TRACKING_RATE.IDUSER;
    }

    @Override
    public Field<String> field8() {
        return HistoryTrackingRate.HISTORY_TRACKING_RATE.TYPE;
    }

    @Override
    public Long component1() {
        return getIdhtr();
    }

    @Override
    public LocalTime component2() {
        return getDate();
    }

    @Override
    public Integer component3() {
        return getIdsite();
    }

    @Override
    public String component4() {
        return getDevice();
    }

    @Override
    public Double component5() {
        return getFrom();
    }

    @Override
    public Double component6() {
        return getTo();
    }

    @Override
    public Long component7() {
        return getIduser();
    }

    @Override
    public String component8() {
        return getType();
    }

    @Override
    public Long value1() {
        return getIdhtr();
    }

    @Override
    public LocalTime value2() {
        return getDate();
    }

    @Override
    public Integer value3() {
        return getIdsite();
    }

    @Override
    public String value4() {
        return getDevice();
    }

    @Override
    public Double value5() {
        return getFrom();
    }

    @Override
    public Double value6() {
        return getTo();
    }

    @Override
    public Long value7() {
        return getIduser();
    }

    @Override
    public String value8() {
        return getType();
    }

    @Override
    public HistoryTrackingRateRecord value1(Long value) {
        setIdhtr(value);
        return this;
    }

    @Override
    public HistoryTrackingRateRecord value2(LocalTime value) {
        setDate(value);
        return this;
    }

    @Override
    public HistoryTrackingRateRecord value3(Integer value) {
        setIdsite(value);
        return this;
    }

    @Override
    public HistoryTrackingRateRecord value4(String value) {
        setDevice(value);
        return this;
    }

    @Override
    public HistoryTrackingRateRecord value5(Double value) {
        setFrom(value);
        return this;
    }

    @Override
    public HistoryTrackingRateRecord value6(Double value) {
        setTo(value);
        return this;
    }

    @Override
    public HistoryTrackingRateRecord value7(Long value) {
        setIduser(value);
        return this;
    }

    @Override
    public HistoryTrackingRateRecord value8(String value) {
        setType(value);
        return this;
    }

    @Override
    public HistoryTrackingRateRecord values(Long value1, LocalTime value2, Integer value3, String value4, Double value5, Double value6, Long value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HistoryTrackingRateRecord
     */
    public HistoryTrackingRateRecord() {
        super(HistoryTrackingRate.HISTORY_TRACKING_RATE);
    }

    /**
     * Create a detached, initialised HistoryTrackingRateRecord
     */
    public HistoryTrackingRateRecord(Long idhtr, LocalTime date, Integer idsite, String device, Double from, Double to, Long iduser, String type) {
        super(HistoryTrackingRate.HISTORY_TRACKING_RATE);

        setIdhtr(idhtr);
        setDate(date);
        setIdsite(idsite);
        setDevice(device);
        setFrom(from);
        setTo(to);
        setIduser(iduser);
        setType(type);
    }
}
