/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.Cp_3338PageimpressionRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Cp_3338Pageimpression extends TableImpl<Cp_3338PageimpressionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live.cp_3338_pageimpression</code>
     */
    public static final Cp_3338Pageimpression CP_3338_PAGEIMPRESSION = new Cp_3338Pageimpression();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Cp_3338PageimpressionRecord> getRecordType() {
        return Cp_3338PageimpressionRecord.class;
    }

    /**
     * The column <code>live.cp_3338_pageimpression.idpage</code>.
     */
    public final TableField<Cp_3338PageimpressionRecord, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>live.cp_3338_pageimpression.idcp</code>.
     */
    public final TableField<Cp_3338PageimpressionRecord, Long> IDCP = createField(DSL.name("idcp"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live.cp_3338_pageimpression.idvalue</code>.
     */
    public final TableField<Cp_3338PageimpressionRecord, BigDecimal> IDVALUE = createField(DSL.name("idvalue"), SQLDataType.NUMERIC, this, "");

    private Cp_3338Pageimpression(Name alias, Table<Cp_3338PageimpressionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Cp_3338Pageimpression(Name alias, Table<Cp_3338PageimpressionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>live.cp_3338_pageimpression</code> table
     * reference
     */
    public Cp_3338Pageimpression(String alias) {
        this(DSL.name(alias), CP_3338_PAGEIMPRESSION);
    }

    /**
     * Create an aliased <code>live.cp_3338_pageimpression</code> table
     * reference
     */
    public Cp_3338Pageimpression(Name alias) {
        this(alias, CP_3338_PAGEIMPRESSION);
    }

    /**
     * Create a <code>live.cp_3338_pageimpression</code> table reference
     */
    public Cp_3338Pageimpression() {
        this(DSL.name("cp_3338_pageimpression"), null);
    }

    public <O extends Record> Cp_3338Pageimpression(Table<O> child, ForeignKey<O, Cp_3338PageimpressionRecord> key) {
        super(child, key, CP_3338_PAGEIMPRESSION);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public Cp_3338Pageimpression as(String alias) {
        return new Cp_3338Pageimpression(DSL.name(alias), this);
    }

    @Override
    public Cp_3338Pageimpression as(Name alias) {
        return new Cp_3338Pageimpression(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Cp_3338Pageimpression rename(String name) {
        return new Cp_3338Pageimpression(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Cp_3338Pageimpression rename(Name name) {
        return new Cp_3338Pageimpression(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<BigDecimal, Long, BigDecimal> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
