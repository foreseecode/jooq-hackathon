/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.ResourceIncludeProtocolRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * The table contains protocols which supported by the
 * mpathy-asset-store-serivce.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourceIncludeProtocol extends TableImpl<ResourceIncludeProtocolRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live.resource_include_protocol</code>
     */
    public static final ResourceIncludeProtocol RESOURCE_INCLUDE_PROTOCOL = new ResourceIncludeProtocol();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResourceIncludeProtocolRecord> getRecordType() {
        return ResourceIncludeProtocolRecord.class;
    }

    /**
     * The column
     * <code>live.resource_include_protocol.idinclude_protocol</code>. Primary
     * key for the protocol entry.
     */
    public final TableField<ResourceIncludeProtocolRecord, Short> IDINCLUDE_PROTOCOL = createField(DSL.name("idinclude_protocol"), SQLDataType.SMALLINT.nullable(false).identity(true), this, "Primary key for the protocol entry.");

    /**
     * The column <code>live.resource_include_protocol.protocol</code>. The
     * column contain a url protocol which supported for a resource.
     */
    public final TableField<ResourceIncludeProtocolRecord, String> PROTOCOL = createField(DSL.name("protocol"), SQLDataType.CLOB, this, "The column contain a url protocol which supported for a resource.");

    private ResourceIncludeProtocol(Name alias, Table<ResourceIncludeProtocolRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResourceIncludeProtocol(Name alias, Table<ResourceIncludeProtocolRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("The table contains protocols which supported by the mpathy-asset-store-serivce."), TableOptions.table());
    }

    /**
     * Create an aliased <code>live.resource_include_protocol</code> table
     * reference
     */
    public ResourceIncludeProtocol(String alias) {
        this(DSL.name(alias), RESOURCE_INCLUDE_PROTOCOL);
    }

    /**
     * Create an aliased <code>live.resource_include_protocol</code> table
     * reference
     */
    public ResourceIncludeProtocol(Name alias) {
        this(alias, RESOURCE_INCLUDE_PROTOCOL);
    }

    /**
     * Create a <code>live.resource_include_protocol</code> table reference
     */
    public ResourceIncludeProtocol() {
        this(DSL.name("resource_include_protocol"), null);
    }

    public <O extends Record> ResourceIncludeProtocol(Table<O> child, ForeignKey<O, ResourceIncludeProtocolRecord> key) {
        super(child, key, RESOURCE_INCLUDE_PROTOCOL);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public Identity<ResourceIncludeProtocolRecord, Short> getIdentity() {
        return (Identity<ResourceIncludeProtocolRecord, Short>) super.getIdentity();
    }

    @Override
    public ResourceIncludeProtocol as(String alias) {
        return new ResourceIncludeProtocol(DSL.name(alias), this);
    }

    @Override
    public ResourceIncludeProtocol as(Name alias) {
        return new ResourceIncludeProtocol(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourceIncludeProtocol rename(String name) {
        return new ResourceIncludeProtocol(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourceIncludeProtocol rename(Name name) {
        return new ResourceIncludeProtocol(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Short, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
