/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables.records;


import com.verint.mpathy.db.live_core.tables.ResourceExcludeKeyword;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourceExcludeKeywordRecord extends TableRecordImpl<ResourceExcludeKeywordRecord> implements Record2<Short, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>live_core.resource_exclude_keyword.idexclude_keyword</code>.
     */
    public void setIdexcludeKeyword(Short value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>live_core.resource_exclude_keyword.idexclude_keyword</code>.
     */
    public Short getIdexcludeKeyword() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>live_core.resource_exclude_keyword.keyword</code>.
     */
    public void setKeyword(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_core.resource_exclude_keyword.keyword</code>.
     */
    public String getKeyword() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Short, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Short, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Short> field1() {
        return ResourceExcludeKeyword.RESOURCE_EXCLUDE_KEYWORD.IDEXCLUDE_KEYWORD;
    }

    @Override
    public Field<String> field2() {
        return ResourceExcludeKeyword.RESOURCE_EXCLUDE_KEYWORD.KEYWORD;
    }

    @Override
    public Short component1() {
        return getIdexcludeKeyword();
    }

    @Override
    public String component2() {
        return getKeyword();
    }

    @Override
    public Short value1() {
        return getIdexcludeKeyword();
    }

    @Override
    public String value2() {
        return getKeyword();
    }

    @Override
    public ResourceExcludeKeywordRecord value1(Short value) {
        setIdexcludeKeyword(value);
        return this;
    }

    @Override
    public ResourceExcludeKeywordRecord value2(String value) {
        setKeyword(value);
        return this;
    }

    @Override
    public ResourceExcludeKeywordRecord values(Short value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResourceExcludeKeywordRecord
     */
    public ResourceExcludeKeywordRecord() {
        super(ResourceExcludeKeyword.RESOURCE_EXCLUDE_KEYWORD);
    }

    /**
     * Create a detached, initialised ResourceExcludeKeywordRecord
     */
    public ResourceExcludeKeywordRecord(Short idexcludeKeyword, String keyword) {
        super(ResourceExcludeKeyword.RESOURCE_EXCLUDE_KEYWORD);

        setIdexcludeKeyword(idexcludeKeyword);
        setKeyword(keyword);
    }
}
