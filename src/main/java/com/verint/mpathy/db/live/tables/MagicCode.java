/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.MagicCodeRecord;

import java.math.BigDecimal;
import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MagicCode extends TableImpl<MagicCodeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live.magic_code</code>
     */
    public static final MagicCode MAGIC_CODE = new MagicCode();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MagicCodeRecord> getRecordType() {
        return MagicCodeRecord.class;
    }

    /**
     * The column <code>live.magic_code.code</code>.
     */
    public final TableField<MagicCodeRecord, String> CODE = createField(DSL.name("code"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live.magic_code.used_by</code>.
     */
    public final TableField<MagicCodeRecord, BigDecimal> USED_BY = createField(DSL.name("used_by"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live.magic_code.used_at</code>.
     */
    public final TableField<MagicCodeRecord, LocalTime> USED_AT = createField(DSL.name("used_at"), SQLDataType.LOCALTIME(6), this, "");

    private MagicCode(Name alias, Table<MagicCodeRecord> aliased) {
        this(alias, aliased, null);
    }

    private MagicCode(Name alias, Table<MagicCodeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>live.magic_code</code> table reference
     */
    public MagicCode(String alias) {
        this(DSL.name(alias), MAGIC_CODE);
    }

    /**
     * Create an aliased <code>live.magic_code</code> table reference
     */
    public MagicCode(Name alias) {
        this(alias, MAGIC_CODE);
    }

    /**
     * Create a <code>live.magic_code</code> table reference
     */
    public MagicCode() {
        this(DSL.name("magic_code"), null);
    }

    public <O extends Record> MagicCode(Table<O> child, ForeignKey<O, MagicCodeRecord> key) {
        super(child, key, MAGIC_CODE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public MagicCode as(String alias) {
        return new MagicCode(DSL.name(alias), this);
    }

    @Override
    public MagicCode as(Name alias) {
        return new MagicCode(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MagicCode rename(String name) {
        return new MagicCode(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MagicCode rename(Name name) {
        return new MagicCode(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, BigDecimal, LocalTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
