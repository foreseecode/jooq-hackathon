/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live;


import com.verint.mpathy.db.DefaultCatalog;
import com.verint.mpathy.db.live.tables.Account;
import com.verint.mpathy.db.live.tables.AdobeAnalyticsFilter;
import com.verint.mpathy.db.live.tables.AdobeAnalyticsFilterSession;
import com.verint.mpathy.db.live.tables.AdobeAnalyticsFilterVisitor;
import com.verint.mpathy.db.live.tables.AdobeAnalyticsSuite;
import com.verint.mpathy.db.live.tables.AdobeAnalyticsSuiteImportsettings;
import com.verint.mpathy.db.live.tables.AggregationPlan;
import com.verint.mpathy.db.live.tables.Bucket;
import com.verint.mpathy.db.live.tables.BucketAlertEmailSetting;
import com.verint.mpathy.db.live.tables.BucketCount;
import com.verint.mpathy.db.live.tables.BucketCountBdtcjn6dtf;
import com.verint.mpathy.db.live.tables.BucketCountCwav87wdqu;
import com.verint.mpathy.db.live.tables.BucketCountMdxdlwkdtm;
import com.verint.mpathy.db.live.tables.BucketCountVuxuvm8wek;
import com.verint.mpathy.db.live.tables.BucketCountXwwlf8vbaw;
import com.verint.mpathy.db.live.tables.BucketCountZdth64uzum;
import com.verint.mpathy.db.live.tables.BucketTemplate;
import com.verint.mpathy.db.live.tables.CassandraCleanlist;
import com.verint.mpathy.db.live.tables.ComscoreFilter;
import com.verint.mpathy.db.live.tables.ComscoreFilterPids;
import com.verint.mpathy.db.live.tables.Cp_10001Pageimpression;
import com.verint.mpathy.db.live.tables.Cp_10010Pageimpression;
import com.verint.mpathy.db.live.tables.Cp_1Pageimpression;
import com.verint.mpathy.db.live.tables.Cp_1Session;
import com.verint.mpathy.db.live.tables.Cp_2Pageimpression;
import com.verint.mpathy.db.live.tables.Cp_3338Pageimpression;
import com.verint.mpathy.db.live.tables.Cp_3338Session;
import com.verint.mpathy.db.live.tables.Cp_3Pageimpression;
import com.verint.mpathy.db.live.tables.Cp_3Session;
import com.verint.mpathy.db.live.tables.Cp_4Pageimpression;
import com.verint.mpathy.db.live.tables.Cp_5Pageimpression;
import com.verint.mpathy.db.live.tables.Cp_5Session;
import com.verint.mpathy.db.live.tables.Customparameter;
import com.verint.mpathy.db.live.tables.CustomparameterDomtree;
import com.verint.mpathy.db.live.tables.CustomparameterLucene;
import com.verint.mpathy.db.live.tables.CustomparameterPatterndetector;
import com.verint.mpathy.db.live.tables.CustomparameterSqlquery;
import com.verint.mpathy.db.live.tables.DataBaseTest;
import com.verint.mpathy.db.live.tables.DebugClient;
import com.verint.mpathy.db.live.tables.DeviceInfoJsonPair;
import com.verint.mpathy.db.live.tables.Document;
import com.verint.mpathy.db.live.tables.Element;
import com.verint.mpathy.db.live.tables.ElementVisible;
import com.verint.mpathy.db.live.tables.Event;
import com.verint.mpathy.db.live.tables.EventClick;
import com.verint.mpathy.db.live.tables.EventFocus;
import com.verint.mpathy.db.live.tables.EventHover;
import com.verint.mpathy.db.live.tables.EventTable;
import com.verint.mpathy.db.live.tables.ExceptionFilter;
import com.verint.mpathy.db.live.tables.Exportqueue;
import com.verint.mpathy.db.live.tables.FormelementAction;
import com.verint.mpathy.db.live.tables.FormelementactionHasTaskitem;
import com.verint.mpathy.db.live.tables.Gesture;
import com.verint.mpathy.db.live.tables.HeadlessAnswer;
import com.verint.mpathy.db.live.tables.HeadlessPollsShowed;
import com.verint.mpathy.db.live.tables.HeadlessResponseRate;
import com.verint.mpathy.db.live.tables.HeadlessanswerHasProperty;
import com.verint.mpathy.db.live.tables.HistoryTrackingAmount;
import com.verint.mpathy.db.live.tables.HistoryTrackingRate;
import com.verint.mpathy.db.live.tables.Is24Filter;
import com.verint.mpathy.db.live.tables.Is24FilterPids;
import com.verint.mpathy.db.live.tables.JsonDatatype;
import com.verint.mpathy.db.live.tables.JsonKey;
import com.verint.mpathy.db.live.tables.JsonValue;
import com.verint.mpathy.db.live.tables.LogPageHasAnswer;
import com.verint.mpathy.db.live.tables.LogSession;
import com.verint.mpathy.db.live.tables.LogSessionState;
import com.verint.mpathy.db.live.tables.MagicCode;
import com.verint.mpathy.db.live.tables.MapClick;
import com.verint.mpathy.db.live.tables.MapClickBotched;
import com.verint.mpathy.db.live.tables.MapClickCleanup;
import com.verint.mpathy.db.live.tables.MapClickKp;
import com.verint.mpathy.db.live.tables.MapClickPathinfo;
import com.verint.mpathy.db.live.tables.MapClickPathinfo_11024;
import com.verint.mpathy.db.live.tables.MapClickPathinfo_11198;
import com.verint.mpathy.db.live.tables.MapClickPathinfo_11689;
import com.verint.mpathy.db.live.tables.MapClickPathnode;
import com.verint.mpathy.db.live.tables.MapClickSettings;
import com.verint.mpathy.db.live.tables.MapClick_3135;
import com.verint.mpathy.db.live.tables.MapFocus;
import com.verint.mpathy.db.live.tables.MapMove;
import com.verint.mpathy.db.live.tables.MapMove_3;
import com.verint.mpathy.db.live.tables.MapScroll;
import com.verint.mpathy.db.live.tables.MapVisible;
import com.verint.mpathy.db.live.tables.Mdata;
import com.verint.mpathy.db.live.tables.Metadata;
import com.verint.mpathy.db.live.tables.MobileDevice;
import com.verint.mpathy.db.live.tables.MobileMetric;
import com.verint.mpathy.db.live.tables.Movement_0t1;
import com.verint.mpathy.db.live.tables.Movement_10t60;
import com.verint.mpathy.db.live.tables.Movement_120;
import com.verint.mpathy.db.live.tables.Movement_1t2;
import com.verint.mpathy.db.live.tables.Movement_2t3;
import com.verint.mpathy.db.live.tables.Movement_3t4;
import com.verint.mpathy.db.live.tables.Movement_4t5;
import com.verint.mpathy.db.live.tables.Movement_5t10;
import com.verint.mpathy.db.live.tables.Movement_60t120;
import com.verint.mpathy.db.live.tables.Movementmap;
import com.verint.mpathy.db.live.tables.Page;
import com.verint.mpathy.db.live.tables.PageFilter;
import com.verint.mpathy.db.live.tables.PageHasAnswer;
import com.verint.mpathy.db.live.tables.PageHasEtlvisitorreplayreadyevent;
import com.verint.mpathy.db.live.tables.PageHasGesture;
import com.verint.mpathy.db.live.tables.PageHasResource;
import com.verint.mpathy.db.live.tables.PageHasRespondent;
import com.verint.mpathy.db.live.tables.PageHasRespondentProd;
import com.verint.mpathy.db.live.tables.PageHasRespondentoldVoc_13071;
import com.verint.mpathy.db.live.tables.PageHasTag;
import com.verint.mpathy.db.live.tables.PageHasVideo;
import com.verint.mpathy.db.live.tables.PageName;
import com.verint.mpathy.db.live.tables.PageNameBlocklist;
import com.verint.mpathy.db.live.tables.PageNameImport;
import com.verint.mpathy.db.live.tables.PageStats;
import com.verint.mpathy.db.live.tables.PagenamesToDelete;
import com.verint.mpathy.db.live.tables.Privilege;
import com.verint.mpathy.db.live.tables.PropertyValues;
import com.verint.mpathy.db.live.tables.Questionnaire;
import com.verint.mpathy.db.live.tables.QuestionnaireAlert;
import com.verint.mpathy.db.live.tables.QuestionnaireCrypt;
import com.verint.mpathy.db.live.tables.QuestionnaireElement;
import com.verint.mpathy.db.live.tables.QuestionnaireHasExport;
import com.verint.mpathy.db.live.tables.QuestionnaireHasFile;
import com.verint.mpathy.db.live.tables.QuestionnaireLayout;
import com.verint.mpathy.db.live.tables.QuestionnaireType;
import com.verint.mpathy.db.live.tables.Raster;
import com.verint.mpathy.db.live.tables.Ratio;
import com.verint.mpathy.db.live.tables.RatioType;
import com.verint.mpathy.db.live.tables.ResourceExcludeBot;
import com.verint.mpathy.db.live.tables.ResourceExcludeHost;
import com.verint.mpathy.db.live.tables.ResourceExcludeKeyword;
import com.verint.mpathy.db.live.tables.ResourceHasParent;
import com.verint.mpathy.db.live.tables.ResourceIncludeProtocol;
import com.verint.mpathy.db.live.tables.ResourceOld;
import com.verint.mpathy.db.live.tables.ResourceReimport;
import com.verint.mpathy.db.live.tables.ResourceRule;
import com.verint.mpathy.db.live.tables.SafHasSegments;
import com.verint.mpathy.db.live.tables.SafSegmentHasPage;
import com.verint.mpathy.db.live.tables.SchemaInfo;
import com.verint.mpathy.db.live.tables.Scrollingmap;
import com.verint.mpathy.db.live.tables.Server;
import com.verint.mpathy.db.live.tables.Session;
import com.verint.mpathy.db.live.tables.SessionHasMetadata;
import com.verint.mpathy.db.live.tables.SessionHasMobileDevice;
import com.verint.mpathy.db.live.tables.SessionHasPagename;
import com.verint.mpathy.db.live.tables.SessionHasResource;
import com.verint.mpathy.db.live.tables.SessionReimport;
import com.verint.mpathy.db.live.tables.SessionSelection;
import com.verint.mpathy.db.live.tables.Sessionstats24h;
import com.verint.mpathy.db.live.tables.Settings;
import com.verint.mpathy.db.live.tables.Site;
import com.verint.mpathy.db.live.tables.SiteApiFiles;
import com.verint.mpathy.db.live.tables.SiteHasVendor;
import com.verint.mpathy.db.live.tables.Sitestats;
import com.verint.mpathy.db.live.tables.StageJsonPair;
import com.verint.mpathy.db.live.tables.StruggleIndicatorDeadClickCount;
import com.verint.mpathy.db.live.tables.StruggleIndicatorDomloadTime;
import com.verint.mpathy.db.live.tables.StruggleIndicatorErrorMessageCount;
import com.verint.mpathy.db.live.tables.StruggleIndicatorErrorPage;
import com.verint.mpathy.db.live.tables.StruggleIndicatorFormFieldAbandonment;
import com.verint.mpathy.db.live.tables.StruggleIndicatorFormFieldModificationCount;
import com.verint.mpathy.db.live.tables.StruggleIndicatorFunnelStepRepetition;
import com.verint.mpathy.db.live.tables.StruggleIndicatorJsErrorCount;
import com.verint.mpathy.db.live.tables.StruggleIndicatorLongInputTime;
import com.verint.mpathy.db.live.tables.StruggleIndicatorRageClickCount;
import com.verint.mpathy.db.live.tables.StruggleIndicatorScrollDirectionChangeCount;
import com.verint.mpathy.db.live.tables.StruggleScorePage;
import com.verint.mpathy.db.live.tables.StruggleScoreSession;
import com.verint.mpathy.db.live.tables.Tag;
import com.verint.mpathy.db.live.tables.Task;
import com.verint.mpathy.db.live.tables.TaskAction;
import com.verint.mpathy.db.live.tables.TaskHasRatio;
import com.verint.mpathy.db.live.tables.TaskItem;
import com.verint.mpathy.db.live.tables.TaskItemAction;
import com.verint.mpathy.db.live.tables.TaskitemHasPage;
import com.verint.mpathy.db.live.tables.TaskitemHasPagename;
import com.verint.mpathy.db.live.tables.TestDv_2020_07_24;
import com.verint.mpathy.db.live.tables.TmpForDebugDeleteSessions_20010141;
import com.verint.mpathy.db.live.tables.TmpForDebugDeleteSessions_20013229;
import com.verint.mpathy.db.live.tables.TmpForDebugDeleteSessions_20014116;
import com.verint.mpathy.db.live.tables.TmpForDebugDeleteSessions_20014677;
import com.verint.mpathy.db.live.tables.TmpForDebugDeleteSessions_2001621;
import com.verint.mpathy.db.live.tables.TmpForDebugDeleteSessions_2001646;
import com.verint.mpathy.db.live.tables.TmpForDebugDeleteSessions_20017851;
import com.verint.mpathy.db.live.tables.TmpForDebugDeleteSessions_20018558;
import com.verint.mpathy.db.live.tables.TmpForDebugDeleteSessions_20018769;
import com.verint.mpathy.db.live.tables.TmpForDebugDeleteSessions_20019106;
import com.verint.mpathy.db.live.tables.TmpForDebugDeleteSessions_200343;
import com.verint.mpathy.db.live.tables.TmpForDebugDeleteSessions_2005866;
import com.verint.mpathy.db.live.tables.TmpForDebugDeleteSessions_2005981;
import com.verint.mpathy.db.live.tables.TmpForDebugDeleteSessions_2006763;
import com.verint.mpathy.db.live.tables.TmpForDebugDeleteSessions_2007834;
import com.verint.mpathy.db.live.tables.TmpForDebugDeleteSessions_2009120;
import com.verint.mpathy.db.live.tables.TmpSelection_266184216;
import com.verint.mpathy.db.live.tables.TmpSelection_63943770;
import com.verint.mpathy.db.live.tables.Tmp_0;
import com.verint.mpathy.db.live.tables.TrackingConfig;
import com.verint.mpathy.db.live.tables.TrackingSetup;
import com.verint.mpathy.db.live.tables.Trafficstats;
import com.verint.mpathy.db.live.tables.Trafficstats31d;
import com.verint.mpathy.db.live.tables.UnmappedPage;
import com.verint.mpathy.db.live.tables.Url;
import com.verint.mpathy.db.live.tables.User;
import com.verint.mpathy.db.live.tables.UserHasPrivilege;
import com.verint.mpathy.db.live.tables.UserHasSaf;
import com.verint.mpathy.db.live.tables.UserHasSite;
import com.verint.mpathy.db.live.tables.UserViewedDashboard;
import com.verint.mpathy.db.live.tables.Useragent;
import com.verint.mpathy.db.live.tables.Useragents2;
import com.verint.mpathy.db.live.tables.Useragents3;
import com.verint.mpathy.db.live.tables.Vendor;
import com.verint.mpathy.db.live.tables.Video;
import com.verint.mpathy.db.live.tables.VideoPageStats;
import com.verint.mpathy.db.live.tables.Visitor;
import com.verint.mpathy.db.live.tables._SessionSelection;
import com.verint.mpathy.db.live.tables._TmpUseragentsDv2020_08_06;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Live extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live</code>
     */
    public static final Live LIVE = new Live();

    /**
     * The table <code>live._session_selection</code>.
     */
    public final _SessionSelection _SESSION_SELECTION = _SessionSelection._SESSION_SELECTION;

    /**
     * The table <code>live._TMP-useragents-dv2020-08-06</code>.
     */
    public final _TmpUseragentsDv2020_08_06 _TMP_USERAGENTS_DV2020_08_06 = _TmpUseragentsDv2020_08_06._TMP_USERAGENTS_DV2020_08_06;

    /**
     * The table <code>live.account</code>.
     */
    public final Account ACCOUNT = Account.ACCOUNT;

    /**
     * The table <code>live.adobe_analytics_filter</code>.
     */
    public final AdobeAnalyticsFilter ADOBE_ANALYTICS_FILTER = AdobeAnalyticsFilter.ADOBE_ANALYTICS_FILTER;

    /**
     * The table <code>live.adobe_analytics_filter_session</code>.
     */
    public final AdobeAnalyticsFilterSession ADOBE_ANALYTICS_FILTER_SESSION = AdobeAnalyticsFilterSession.ADOBE_ANALYTICS_FILTER_SESSION;

    /**
     * The table <code>live.adobe_analytics_filter_visitor</code>.
     */
    public final AdobeAnalyticsFilterVisitor ADOBE_ANALYTICS_FILTER_VISITOR = AdobeAnalyticsFilterVisitor.ADOBE_ANALYTICS_FILTER_VISITOR;

    /**
     * The table <code>live.adobe_analytics_suite</code>.
     */
    public final AdobeAnalyticsSuite ADOBE_ANALYTICS_SUITE = AdobeAnalyticsSuite.ADOBE_ANALYTICS_SUITE;

    /**
     * The table <code>live.adobe_analytics_suite_importsettings</code>.
     */
    public final AdobeAnalyticsSuiteImportsettings ADOBE_ANALYTICS_SUITE_IMPORTSETTINGS = AdobeAnalyticsSuiteImportsettings.ADOBE_ANALYTICS_SUITE_IMPORTSETTINGS;

    /**
     * The table <code>live.aggregation_plan</code>.
     */
    public final AggregationPlan AGGREGATION_PLAN = AggregationPlan.AGGREGATION_PLAN;

    /**
     * The table <code>live.bucket</code>.
     */
    public final Bucket BUCKET = Bucket.BUCKET;

    /**
     * The table <code>live.bucket_alert_email_setting</code>.
     */
    public final BucketAlertEmailSetting BUCKET_ALERT_EMAIL_SETTING = BucketAlertEmailSetting.BUCKET_ALERT_EMAIL_SETTING;

    /**
     * The table <code>live.bucket_count</code>.
     */
    public final BucketCount BUCKET_COUNT = BucketCount.BUCKET_COUNT;

    /**
     * The table <code>live.bucket_count_bDTcJn6dTf</code>.
     */
    public final BucketCountBdtcjn6dtf BUCKET_COUNT_BDTCJN6DTF = BucketCountBdtcjn6dtf.BUCKET_COUNT_BDTCJN6DTF;

    /**
     * The table <code>live.bucket_count_CwaV87wDQu</code>.
     */
    public final BucketCountCwav87wdqu BUCKET_COUNT_CWAV87WDQU = BucketCountCwav87wdqu.BUCKET_COUNT_CWAV87WDQU;

    /**
     * The table <code>live.bucket_count_mDxdLWkdtm</code>.
     */
    public final BucketCountMdxdlwkdtm BUCKET_COUNT_MDXDLWKDTM = BucketCountMdxdlwkdtm.BUCKET_COUNT_MDXDLWKDTM;

    /**
     * The table <code>live.bucket_count_vUxuVm8wek</code>.
     */
    public final BucketCountVuxuvm8wek BUCKET_COUNT_VUXUVM8WEK = BucketCountVuxuvm8wek.BUCKET_COUNT_VUXUVM8WEK;

    /**
     * The table <code>live.bucket_count_xWwLF8VBaw</code>.
     */
    public final BucketCountXwwlf8vbaw BUCKET_COUNT_XWWLF8VBAW = BucketCountXwwlf8vbaw.BUCKET_COUNT_XWWLF8VBAW;

    /**
     * The table <code>live.bucket_count_ZDTH64uZUM</code>.
     */
    public final BucketCountZdth64uzum BUCKET_COUNT_ZDTH64UZUM = BucketCountZdth64uzum.BUCKET_COUNT_ZDTH64UZUM;

    /**
     * The table <code>live.bucket_template</code>.
     */
    public final BucketTemplate BUCKET_TEMPLATE = BucketTemplate.BUCKET_TEMPLATE;

    /**
     * The table <code>live.cassandra_cleanlist</code>.
     */
    public final CassandraCleanlist CASSANDRA_CLEANLIST = CassandraCleanlist.CASSANDRA_CLEANLIST;

    /**
     * The table <code>live.comscore_filter</code>.
     */
    public final ComscoreFilter COMSCORE_FILTER = ComscoreFilter.COMSCORE_FILTER;

    /**
     * The table <code>live.comscore_filter_pids</code>.
     */
    public final ComscoreFilterPids COMSCORE_FILTER_PIDS = ComscoreFilterPids.COMSCORE_FILTER_PIDS;

    /**
     * The table <code>live.cp_10001_pageimpression</code>.
     */
    public final Cp_10001Pageimpression CP_10001_PAGEIMPRESSION = Cp_10001Pageimpression.CP_10001_PAGEIMPRESSION;

    /**
     * The table <code>live.cp_10010_pageimpression</code>.
     */
    public final Cp_10010Pageimpression CP_10010_PAGEIMPRESSION = Cp_10010Pageimpression.CP_10010_PAGEIMPRESSION;

    /**
     * The table <code>live.cp_1_pageimpression</code>.
     */
    public final Cp_1Pageimpression CP_1_PAGEIMPRESSION = Cp_1Pageimpression.CP_1_PAGEIMPRESSION;

    /**
     * The table <code>live.cp_1_session</code>.
     */
    public final Cp_1Session CP_1_SESSION = Cp_1Session.CP_1_SESSION;

    /**
     * The table <code>live.cp_2_pageimpression</code>.
     */
    public final Cp_2Pageimpression CP_2_PAGEIMPRESSION = Cp_2Pageimpression.CP_2_PAGEIMPRESSION;

    /**
     * The table <code>live.cp_3338_pageimpression</code>.
     */
    public final Cp_3338Pageimpression CP_3338_PAGEIMPRESSION = Cp_3338Pageimpression.CP_3338_PAGEIMPRESSION;

    /**
     * The table <code>live.cp_3338_session</code>.
     */
    public final Cp_3338Session CP_3338_SESSION = Cp_3338Session.CP_3338_SESSION;

    /**
     * The table <code>live.cp_3_pageimpression</code>.
     */
    public final Cp_3Pageimpression CP_3_PAGEIMPRESSION = Cp_3Pageimpression.CP_3_PAGEIMPRESSION;

    /**
     * The table <code>live.cp_3_session</code>.
     */
    public final Cp_3Session CP_3_SESSION = Cp_3Session.CP_3_SESSION;

    /**
     * The table <code>live.cp_4_pageimpression</code>.
     */
    public final Cp_4Pageimpression CP_4_PAGEIMPRESSION = Cp_4Pageimpression.CP_4_PAGEIMPRESSION;

    /**
     * The table <code>live.cp_5_pageimpression</code>.
     */
    public final Cp_5Pageimpression CP_5_PAGEIMPRESSION = Cp_5Pageimpression.CP_5_PAGEIMPRESSION;

    /**
     * The table <code>live.cp_5_session</code>.
     */
    public final Cp_5Session CP_5_SESSION = Cp_5Session.CP_5_SESSION;

    /**
     * The table <code>live.customparameter</code>.
     */
    public final Customparameter CUSTOMPARAMETER = Customparameter.CUSTOMPARAMETER;

    /**
     * The table <code>live.customparameter_domtree</code>.
     */
    public final CustomparameterDomtree CUSTOMPARAMETER_DOMTREE = CustomparameterDomtree.CUSTOMPARAMETER_DOMTREE;

    /**
     * The table <code>live.customparameter_lucene</code>.
     */
    public final CustomparameterLucene CUSTOMPARAMETER_LUCENE = CustomparameterLucene.CUSTOMPARAMETER_LUCENE;

    /**
     * The table <code>live.customparameter_patterndetector</code>.
     */
    public final CustomparameterPatterndetector CUSTOMPARAMETER_PATTERNDETECTOR = CustomparameterPatterndetector.CUSTOMPARAMETER_PATTERNDETECTOR;

    /**
     * The table <code>live.customparameter_sqlquery</code>.
     */
    public final CustomparameterSqlquery CUSTOMPARAMETER_SQLQUERY = CustomparameterSqlquery.CUSTOMPARAMETER_SQLQUERY;

    /**
     * The table <code>live.data_base_test</code>.
     */
    public final DataBaseTest DATA_BASE_TEST = DataBaseTest.DATA_BASE_TEST;

    /**
     * The table <code>live.debug_client</code>.
     */
    public final DebugClient DEBUG_CLIENT = DebugClient.DEBUG_CLIENT;

    /**
     * This table contains all json references for the "video_page_stats" table
     * and his "device_info" column.
     */
    public final DeviceInfoJsonPair DEVICE_INFO_JSON_PAIR = DeviceInfoJsonPair.DEVICE_INFO_JSON_PAIR;

    /**
     * Table to increment the references to cassandra documents.
     */
    public final Document DOCUMENT = Document.DOCUMENT;

    /**
     * The table <code>live.element</code>.
     */
    public final Element ELEMENT = Element.ELEMENT;

    /**
     * The table <code>live.element_visible</code>.
     */
    public final ElementVisible ELEMENT_VISIBLE = ElementVisible.ELEMENT_VISIBLE;

    /**
     * The table <code>live.event</code>.
     */
    public final Event EVENT = Event.EVENT;

    /**
     * The table <code>live.event_click</code>.
     */
    public final EventClick EVENT_CLICK = EventClick.EVENT_CLICK;

    /**
     * The table <code>live.event_focus</code>.
     */
    public final EventFocus EVENT_FOCUS = EventFocus.EVENT_FOCUS;

    /**
     * The table <code>live.event_hover</code>.
     */
    public final EventHover EVENT_HOVER = EventHover.EVENT_HOVER;

    /**
     * The table <code>live.event_table</code>.
     */
    public final EventTable EVENT_TABLE = EventTable.EVENT_TABLE;

    /**
     * The table <code>live.exception_filter</code>.
     */
    public final ExceptionFilter EXCEPTION_FILTER = ExceptionFilter.EXCEPTION_FILTER;

    /**
     * The table <code>live.exportqueue</code>.
     */
    public final Exportqueue EXPORTQUEUE = Exportqueue.EXPORTQUEUE;

    /**
     * The table <code>live.formelement_action</code>.
     */
    public final FormelementAction FORMELEMENT_ACTION = FormelementAction.FORMELEMENT_ACTION;

    /**
     * The table <code>live.formelementaction_has_taskitem</code>.
     */
    public final FormelementactionHasTaskitem FORMELEMENTACTION_HAS_TASKITEM = FormelementactionHasTaskitem.FORMELEMENTACTION_HAS_TASKITEM;

    /**
     * Table with all known gesture of mobile devices.
     */
    public final Gesture GESTURE = Gesture.GESTURE;

    /**
     * Collect all row data of the polls without tracking.
     */
    public final HeadlessAnswer HEADLESS_ANSWER = HeadlessAnswer.HEADLESS_ANSWER;

    /**
     * Collect the number of questionnaire that has been shown for a visitor.
     */
    public final HeadlessPollsShowed HEADLESS_POLLS_SHOWED = HeadlessPollsShowed.HEADLESS_POLLS_SHOWED;

    /**
     * Collect the number of questionnaire that has been shown for a site.
     */
    public final HeadlessResponseRate HEADLESS_RESPONSE_RATE = HeadlessResponseRate.HEADLESS_RESPONSE_RATE;

    /**
     * reference table that links properties with headless answers (properties
     * for polls without tracking)
     */
    public final HeadlessanswerHasProperty HEADLESSANSWER_HAS_PROPERTY = HeadlessanswerHasProperty.HEADLESSANSWER_HAS_PROPERTY;

    /**
     * The table <code>live.history_tracking_amount</code>.
     */
    public final HistoryTrackingAmount HISTORY_TRACKING_AMOUNT = HistoryTrackingAmount.HISTORY_TRACKING_AMOUNT;

    /**
     * The table <code>live.history_tracking_rate</code>.
     */
    public final HistoryTrackingRate HISTORY_TRACKING_RATE = HistoryTrackingRate.HISTORY_TRACKING_RATE;

    /**
     * The table <code>live.is24_filter</code>.
     */
    public final Is24Filter IS24_FILTER = Is24Filter.IS24_FILTER;

    /**
     * The table <code>live.is24_filter_pids</code>.
     */
    public final Is24FilterPids IS24_FILTER_PIDS = Is24FilterPids.IS24_FILTER_PIDS;

    /**
     * This table contains all supported json datatypes for the "json_value"
     * table.
     */
    public final JsonDatatype JSON_DATATYPE = JsonDatatype.JSON_DATATYPE;

    /**
     * This table contains all available json key name of "json_value" table.
     */
    public final JsonKey JSON_KEY = JsonKey.JSON_KEY;

    /**
     * This table contains all json values for the "stage_json_pair" table.
     */
    public final JsonValue JSON_VALUE = JsonValue.JSON_VALUE;

    /**
     * log table for page has answer merges
     */
    public final LogPageHasAnswer LOG_PAGE_HAS_ANSWER = LogPageHasAnswer.LOG_PAGE_HAS_ANSWER;

    /**
     * The table <code>live.log_session</code>.
     */
    public final LogSession LOG_SESSION = LogSession.LOG_SESSION;

    /**
     * A table for logging state transitions of sessions.
     */
    public final LogSessionState LOG_SESSION_STATE = LogSessionState.LOG_SESSION_STATE;

    /**
     * The table <code>live.magic_code</code>.
     */
    public final MagicCode MAGIC_CODE = MagicCode.MAGIC_CODE;

    /**
     * The table <code>live.map_click</code>.
     */
    public final MapClick MAP_CLICK = MapClick.MAP_CLICK;

    /**
     * The table <code>live.map_click_3135</code>.
     */
    public final MapClick_3135 MAP_CLICK_3135 = MapClick_3135.MAP_CLICK_3135;

    /**
     * The table <code>live.map_click_botched</code>.
     */
    public final MapClickBotched MAP_CLICK_BOTCHED = MapClickBotched.MAP_CLICK_BOTCHED;

    /**
     * The table <code>live.map_click_cleanup</code>.
     */
    public final MapClickCleanup MAP_CLICK_CLEANUP = MapClickCleanup.MAP_CLICK_CLEANUP;

    /**
     * The table <code>live.map_click_kp</code>.
     */
    public final MapClickKp MAP_CLICK_KP = MapClickKp.MAP_CLICK_KP;

    /**
     * The table <code>live.map_click_pathinfo</code>.
     */
    public final MapClickPathinfo MAP_CLICK_PATHINFO = MapClickPathinfo.MAP_CLICK_PATHINFO;

    /**
     * The table <code>live.map_click_pathinfo_11024</code>.
     */
    public final MapClickPathinfo_11024 MAP_CLICK_PATHINFO_11024 = MapClickPathinfo_11024.MAP_CLICK_PATHINFO_11024;

    /**
     * The table <code>live.map_click_pathinfo_11198</code>.
     */
    public final MapClickPathinfo_11198 MAP_CLICK_PATHINFO_11198 = MapClickPathinfo_11198.MAP_CLICK_PATHINFO_11198;

    /**
     * The table <code>live.map_click_pathinfo_11689</code>.
     */
    public final MapClickPathinfo_11689 MAP_CLICK_PATHINFO_11689 = MapClickPathinfo_11689.MAP_CLICK_PATHINFO_11689;

    /**
     * The table <code>live.map_click_pathnode</code>.
     */
    public final MapClickPathnode MAP_CLICK_PATHNODE = MapClickPathnode.MAP_CLICK_PATHNODE;

    /**
     * The table <code>live.map_click_settings</code>.
     */
    public final MapClickSettings MAP_CLICK_SETTINGS = MapClickSettings.MAP_CLICK_SETTINGS;

    /**
     * The table <code>live.map_focus</code>.
     */
    public final MapFocus MAP_FOCUS = MapFocus.MAP_FOCUS;

    /**
     * The table <code>live.map_move</code>.
     */
    public final MapMove MAP_MOVE = MapMove.MAP_MOVE;

    /**
     * Moves - every third move has been skipped during import.
     */
    public final MapMove_3 MAP_MOVE_3 = MapMove_3.MAP_MOVE_3;

    /**
     * The table <code>live.map_scroll</code>.
     */
    public final MapScroll MAP_SCROLL = MapScroll.MAP_SCROLL;

    /**
     * The table <code>live.map_visible</code>.
     */
    public final MapVisible MAP_VISIBLE = MapVisible.MAP_VISIBLE;

    /**
     * The table <code>live.mdata</code>.
     */
    public final Mdata MDATA = Mdata.MDATA;

    /**
     * The table <code>live.metadata</code>.
     */
    public final Metadata METADATA = Metadata.METADATA;

    /**
     * The table contains all information about static information of a mobile
     * device.
     */
    public final MobileDevice MOBILE_DEVICE = MobileDevice.MOBILE_DEVICE;

    /**
     * The table contains all information about dynamic information of a mobile
     * device.
     */
    public final MobileMetric MOBILE_METRIC = MobileMetric.MOBILE_METRIC;

    /**
     * The table <code>live.movement_0t1</code>.
     */
    public final Movement_0t1 MOVEMENT_0T1 = Movement_0t1.MOVEMENT_0T1;

    /**
     * The table <code>live.movement_10t60</code>.
     */
    public final Movement_10t60 MOVEMENT_10T60 = Movement_10t60.MOVEMENT_10T60;

    /**
     * The table <code>live.movement_120</code>.
     */
    public final Movement_120 MOVEMENT_120 = Movement_120.MOVEMENT_120;

    /**
     * The table <code>live.movement_1t2</code>.
     */
    public final Movement_1t2 MOVEMENT_1T2 = Movement_1t2.MOVEMENT_1T2;

    /**
     * The table <code>live.movement_2t3</code>.
     */
    public final Movement_2t3 MOVEMENT_2T3 = Movement_2t3.MOVEMENT_2T3;

    /**
     * The table <code>live.movement_3t4</code>.
     */
    public final Movement_3t4 MOVEMENT_3T4 = Movement_3t4.MOVEMENT_3T4;

    /**
     * The table <code>live.movement_4t5</code>.
     */
    public final Movement_4t5 MOVEMENT_4T5 = Movement_4t5.MOVEMENT_4T5;

    /**
     * The table <code>live.movement_5t10</code>.
     */
    public final Movement_5t10 MOVEMENT_5T10 = Movement_5t10.MOVEMENT_5T10;

    /**
     * The table <code>live.movement_60t120</code>.
     */
    public final Movement_60t120 MOVEMENT_60T120 = Movement_60t120.MOVEMENT_60T120;

    /**
     * The table <code>live.movementmap</code>.
     */
    public final Movementmap MOVEMENTMAP = Movementmap.MOVEMENTMAP;

    /**
     * The table <code>live.page</code>.
     */
    public final Page PAGE = Page.PAGE;

    /**
     * The table <code>live.page_filter</code>.
     */
    public final PageFilter PAGE_FILTER = PageFilter.PAGE_FILTER;

    /**
     * The table <code>live.page_has_answer</code>.
     */
    public final PageHasAnswer PAGE_HAS_ANSWER = PageHasAnswer.PAGE_HAS_ANSWER;

    /**
     * The table contains all specific information about videos for a page.
     */
    public final PageHasEtlvisitorreplayreadyevent PAGE_HAS_ETLVISITORREPLAYREADYEVENT = PageHasEtlvisitorreplayreadyevent.PAGE_HAS_ETLVISITORREPLAYREADYEVENT;

    /**
     * Reference table (m:n connections) between "page" and "gesture" with a
     * occurrences counter.
     */
    public final PageHasGesture PAGE_HAS_GESTURE = PageHasGesture.PAGE_HAS_GESTURE;

    /**
     * Reference table between "page" and "resource". Contains information for
     * resource usage
     */
    public final PageHasResource PAGE_HAS_RESOURCE = PageHasResource.PAGE_HAS_RESOURCE;

    /**
     * The table <code>live.page_has_respondent</code>.
     */
    public final PageHasRespondent PAGE_HAS_RESPONDENT = PageHasRespondent.PAGE_HAS_RESPONDENT;

    /**
     * The table <code>live.page_has_respondent_prod</code>.
     */
    public final PageHasRespondentProd PAGE_HAS_RESPONDENT_PROD = PageHasRespondentProd.PAGE_HAS_RESPONDENT_PROD;

    /**
     * The table <code>live.page_has_respondentold_VOC-13071</code>.
     */
    public final PageHasRespondentoldVoc_13071 PAGE_HAS_RESPONDENTOLD_VOC_13071 = PageHasRespondentoldVoc_13071.PAGE_HAS_RESPONDENTOLD_VOC_13071;

    /**
     * The table <code>live.page_has_tag</code>.
     */
    public final PageHasTag PAGE_HAS_TAG = PageHasTag.PAGE_HAS_TAG;

    /**
     * The table contains all specific information about videos for a page.
     */
    public final PageHasVideo PAGE_HAS_VIDEO = PageHasVideo.PAGE_HAS_VIDEO;

    /**
     * The table <code>live.page_name</code>.
     */
    public final PageName PAGE_NAME = PageName.PAGE_NAME;

    /**
     * This table contains the visible text for a page.
     */
    public final PageNameBlocklist PAGE_NAME_BLOCKLIST = PageNameBlocklist.PAGE_NAME_BLOCKLIST;

    /**
     * The table <code>live.page_name_import</code>.
     */
    public final PageNameImport PAGE_NAME_IMPORT = PageNameImport.PAGE_NAME_IMPORT;

    /**
     * The table <code>live.page_stats</code>.
     */
    public final PageStats PAGE_STATS = PageStats.PAGE_STATS;

    /**
     * The table <code>live.pagenames_to_delete</code>.
     */
    public final PagenamesToDelete PAGENAMES_TO_DELETE = PagenamesToDelete.PAGENAMES_TO_DELETE;

    /**
     * The table <code>live.privilege</code>.
     */
    public final Privilege PRIVILEGE = Privilege.PRIVILEGE;

    /**
     * The table <code>live.property_values</code>.
     */
    public final PropertyValues PROPERTY_VALUES = PropertyValues.PROPERTY_VALUES;

    /**
     * The table <code>live.questionnaire</code>.
     */
    public final Questionnaire QUESTIONNAIRE = Questionnaire.QUESTIONNAIRE;

    /**
     * The table <code>live.questionnaire_alert</code>.
     */
    public final QuestionnaireAlert QUESTIONNAIRE_ALERT = QuestionnaireAlert.QUESTIONNAIRE_ALERT;

    /**
     * Reference table between questionnaire (exasol) and crypt_keys
     * (cassandra).
     */
    public final QuestionnaireCrypt QUESTIONNAIRE_CRYPT = QuestionnaireCrypt.QUESTIONNAIRE_CRYPT;

    /**
     * The table <code>live.questionnaire_element</code>.
     */
    public final QuestionnaireElement QUESTIONNAIRE_ELEMENT = QuestionnaireElement.QUESTIONNAIRE_ELEMENT;

    /**
     * The table <code>live.questionnaire_has_export</code>.
     */
    public final QuestionnaireHasExport QUESTIONNAIRE_HAS_EXPORT = QuestionnaireHasExport.QUESTIONNAIRE_HAS_EXPORT;

    /**
     * Reference table between a questionnaire element (1) and his files (n).
     * For each file a document is referenced (content inside cassandra).
     */
    public final QuestionnaireHasFile QUESTIONNAIRE_HAS_FILE = QuestionnaireHasFile.QUESTIONNAIRE_HAS_FILE;

    /**
     * Table to store the possible layouts for a site.
     */
    public final QuestionnaireLayout QUESTIONNAIRE_LAYOUT = QuestionnaireLayout.QUESTIONNAIRE_LAYOUT;

    /**
     * The table <code>live.questionnaire_type</code>.
     */
    public final QuestionnaireType QUESTIONNAIRE_TYPE = QuestionnaireType.QUESTIONNAIRE_TYPE;

    /**
     * The table <code>live.raster</code>.
     */
    public final Raster RASTER = Raster.RASTER;

    /**
     * The table <code>live.ratio</code>.
     */
    public final Ratio RATIO = Ratio.RATIO;

    /**
     * The table <code>live.ratio_type</code>.
     */
    public final RatioType RATIO_TYPE = RatioType.RATIO_TYPE;

    /**
     * The table contains regular expression parts to identify bots by his
     * useragent.
     */
    public final ResourceExcludeBot RESOURCE_EXCLUDE_BOT = ResourceExcludeBot.RESOURCE_EXCLUDE_BOT;

    /**
     * The table contains host/domains which must not be processed  by the
     * mpathy-asset-store-serivce.
     */
    public final ResourceExcludeHost RESOURCE_EXCLUDE_HOST = ResourceExcludeHost.RESOURCE_EXCLUDE_HOST;

    /**
     * The table contains keywords which must not be processed by the
     * mpathy-asset-store-serivce.
     */
    public final ResourceExcludeKeyword RESOURCE_EXCLUDE_KEYWORD = ResourceExcludeKeyword.RESOURCE_EXCLUDE_KEYWORD;

    /**
     * Reference table between "resource" and "resource" parent.
     */
    public final ResourceHasParent RESOURCE_HAS_PARENT = ResourceHasParent.RESOURCE_HAS_PARENT;

    /**
     * The table contains protocols which supported by the
     * mpathy-asset-store-serivce.
     */
    public final ResourceIncludeProtocol RESOURCE_INCLUDE_PROTOCOL = ResourceIncludeProtocol.RESOURCE_INCLUDE_PROTOCOL;

    /**
     * Contains all currently stored CSS files.
     */
    public final ResourceOld RESOURCE_OLD = ResourceOld.RESOURCE_OLD;

    /**
     * The table <code>live.resource_reimport</code>.
     */
    public final ResourceReimport RESOURCE_REIMPORT = ResourceReimport.RESOURCE_REIMPORT;

    /**
     * Contains all CSS files that have to be downloaded.
     */
    public final ResourceRule RESOURCE_RULE = ResourceRule.RESOURCE_RULE;

    /**
     * The table <code>live.saf_has_segments</code>.
     */
    public final SafHasSegments SAF_HAS_SEGMENTS = SafHasSegments.SAF_HAS_SEGMENTS;

    /**
     * The table <code>live.saf_segment_has_page</code>.
     */
    public final SafSegmentHasPage SAF_SEGMENT_HAS_PAGE = SafSegmentHasPage.SAF_SEGMENT_HAS_PAGE;

    /**
     * The table <code>live.schema_info</code>.
     */
    public final SchemaInfo SCHEMA_INFO = SchemaInfo.SCHEMA_INFO;

    /**
     * The table <code>live.scrollingmap</code>.
     */
    public final Scrollingmap SCROLLINGMAP = Scrollingmap.SCROLLINGMAP;

    /**
     * The table <code>live.server</code>.
     */
    public final Server SERVER = Server.SERVER;

    /**
     * The table <code>live.session</code>.
     */
    public final Session SESSION = Session.SESSION;

    /**
     * The table <code>live.session_has_metadata</code>.
     */
    public final SessionHasMetadata SESSION_HAS_METADATA = SessionHasMetadata.SESSION_HAS_METADATA;

    /**
     * The table contains the reference between a session and his mobile device
     * information.
     */
    public final SessionHasMobileDevice SESSION_HAS_MOBILE_DEVICE = SessionHasMobileDevice.SESSION_HAS_MOBILE_DEVICE;

    /**
     * The table <code>live.session_has_pagename</code>.
     */
    public final SessionHasPagename SESSION_HAS_PAGENAME = SessionHasPagename.SESSION_HAS_PAGENAME;

    /**
     * Reference table between "session" and "resource". Contains information
     * for resource usage
     */
    public final SessionHasResource SESSION_HAS_RESOURCE = SessionHasResource.SESSION_HAS_RESOURCE;

    /**
     * The table <code>live.session_reimport</code>.
     */
    public final SessionReimport SESSION_REIMPORT = SessionReimport.SESSION_REIMPORT;

    /**
     * The table <code>live.session_selection</code>.
     */
    public final SessionSelection SESSION_SELECTION = SessionSelection.SESSION_SELECTION;

    /**
     * The table <code>live.sessionstats24h</code>.
     */
    public final Sessionstats24h SESSIONSTATS24H = Sessionstats24h.SESSIONSTATS24H;

    /**
     * General settings table to define key/value pairs at user, site or
     * user/site level.
     */
    public final Settings SETTINGS = Settings.SETTINGS;

    /**
     * The table <code>live.site</code>.
     */
    public final Site SITE = Site.SITE;

    /**
     * The table <code>live.site_api_files</code>.
     */
    public final SiteApiFiles SITE_API_FILES = SiteApiFiles.SITE_API_FILES;

    /**
     * The table <code>live.site_has_vendor</code>.
     */
    public final SiteHasVendor SITE_HAS_VENDOR = SiteHasVendor.SITE_HAS_VENDOR;

    /**
     * The table <code>live.sitestats</code>.
     */
    public final Sitestats SITESTATS = Sitestats.SITESTATS;

    /**
     * This table contains all json references for the "video_page_stats" table
     * on stage level.
     */
    public final StageJsonPair STAGE_JSON_PAIR = StageJsonPair.STAGE_JSON_PAIR;

    /**
     * Indicator definition: An element is clicked and does not cause any
     * reaction within the time window.
     */
    public final StruggleIndicatorDeadClickCount STRUGGLE_INDICATOR_DEAD_CLICK_COUNT = StruggleIndicatorDeadClickCount.STRUGGLE_INDICATOR_DEAD_CLICK_COUNT;

    /**
     * Indicator definition: Domload Time is calculated via the browser's
     * performance API and sent with the new domLoaded event (ID: 52). If the
     * browser is for some reason incompatible with API, duration will be NULL.
     */
    public final StruggleIndicatorDomloadTime STRUGGLE_INDICATOR_DOMLOAD_TIME = StruggleIndicatorDomloadTime.STRUGGLE_INDICATOR_DOMLOAD_TIME;

    /**
     * Indicator definition: The amount of error properties set for a page view
     * succeeded the threshold defined in the struggle settings.
     */
    public final StruggleIndicatorErrorMessageCount STRUGGLE_INDICATOR_ERROR_MESSAGE_COUNT = StruggleIndicatorErrorMessageCount.STRUGGLE_INDICATOR_ERROR_MESSAGE_COUNT;

    /**
     * Indicator definition: The page view is defined as an error page in the
     * struggle settings.
     */
    public final StruggleIndicatorErrorPage STRUGGLE_INDICATOR_ERROR_PAGE = StruggleIndicatorErrorPage.STRUGGLE_INDICATOR_ERROR_PAGE;

    /**
     * Indicator definition: A user has entered at least the minimum amount of
     * characters defined within the settings into a funnel form field, but did
     * not submit the form.
     */
    public final StruggleIndicatorFormFieldAbandonment STRUGGLE_INDICATOR_FORM_FIELD_ABANDONMENT = StruggleIndicatorFormFieldAbandonment.STRUGGLE_INDICATOR_FORM_FIELD_ABANDONMENT;

    /**
     * Indicator definition: Repeated interactions (focus) and edits (i.e.
     * content changes, min. 1 char or status changes) in the same form field
     * during a page view.
     */
    public final StruggleIndicatorFormFieldModificationCount STRUGGLE_INDICATOR_FORM_FIELD_MODIFICATION_COUNT = StruggleIndicatorFormFieldModificationCount.STRUGGLE_INDICATOR_FORM_FIELD_MODIFICATION_COUNT;

    /**
     * Indicator definition: Event is triggered when a user visits a page that
     * is part of a funnel more often than defined in the struggle settings.
     */
    public final StruggleIndicatorFunnelStepRepetition STRUGGLE_INDICATOR_FUNNEL_STEP_REPETITION = StruggleIndicatorFunnelStepRepetition.STRUGGLE_INDICATOR_FUNNEL_STEP_REPETITION;

    /**
     * Indicator definition: The accumulated amount of JavaScript errors on a
     * page view.
     */
    public final StruggleIndicatorJsErrorCount STRUGGLE_INDICATOR_JS_ERROR_COUNT = StruggleIndicatorJsErrorCount.STRUGGLE_INDICATOR_JS_ERROR_COUNT;

    /**
     * Indicator definition: Average time of the time between the character
     * inputs from a customer into a field.
     */
    public final StruggleIndicatorLongInputTime STRUGGLE_INDICATOR_LONG_INPUT_TIME = StruggleIndicatorLongInputTime.STRUGGLE_INDICATOR_LONG_INPUT_TIME;

    /**
     * Indicator definition: High frequency of clicks within time window on the
     * in a specified radius (e.g. 25px) around this first click
     */
    public final StruggleIndicatorRageClickCount STRUGGLE_INDICATOR_RAGE_CLICK_COUNT = StruggleIndicatorRageClickCount.STRUGGLE_INDICATOR_RAGE_CLICK_COUNT;

    /**
     * Indicator definition: The customer is experiencing struggle as he shows
     * high scroll activity in the form of many direction changes.
     */
    public final StruggleIndicatorScrollDirectionChangeCount STRUGGLE_INDICATOR_SCROLL_DIRECTION_CHANGE_COUNT = StruggleIndicatorScrollDirectionChangeCount.STRUGGLE_INDICATOR_SCROLL_DIRECTION_CHANGE_COUNT;

    /**
     * Holds the calculated struggle score for a specific page ID and its
     * references to relevant tables.
     */
    public final StruggleScorePage STRUGGLE_SCORE_PAGE = StruggleScorePage.STRUGGLE_SCORE_PAGE;

    /**
     * Holds the calculated struggle score for a specific session ID and its
     * references to relevant tables.
     */
    public final StruggleScoreSession STRUGGLE_SCORE_SESSION = StruggleScoreSession.STRUGGLE_SCORE_SESSION;

    /**
     * The table <code>live.tag</code>.
     */
    public final Tag TAG = Tag.TAG;

    /**
     * The table <code>live.task</code>.
     */
    public final Task TASK = Task.TASK;

    /**
     * The table <code>live.task_action</code>.
     */
    public final TaskAction TASK_ACTION = TaskAction.TASK_ACTION;

    /**
     * The table <code>live.task_has_ratio</code>.
     */
    public final TaskHasRatio TASK_HAS_RATIO = TaskHasRatio.TASK_HAS_RATIO;

    /**
     * The table <code>live.task_item</code>.
     */
    public final TaskItem TASK_ITEM = TaskItem.TASK_ITEM;

    /**
     * The table <code>live.task_item_action</code>.
     */
    public final TaskItemAction TASK_ITEM_ACTION = TaskItemAction.TASK_ITEM_ACTION;

    /**
     * The table <code>live.taskitem_has_page</code>.
     */
    public final TaskitemHasPage TASKITEM_HAS_PAGE = TaskitemHasPage.TASKITEM_HAS_PAGE;

    /**
     * Reference table between "task_item" and "page_name" to define the form
     * step condition.
     */
    public final TaskitemHasPagename TASKITEM_HAS_PAGENAME = TaskitemHasPagename.TASKITEM_HAS_PAGENAME;

    /**
     * The table <code>live.TEST_DV_2020_07_24</code>.
     */
    public final TestDv_2020_07_24 TEST_DV_2020_07_24 = TestDv_2020_07_24.TEST_DV_2020_07_24;

    /**
     * The table <code>live.tmp_0</code>.
     */
    public final Tmp_0 TMP_0 = Tmp_0.TMP_0;

    /**
     * The table <code>live.tmp_for_debug_delete_sessions_20010141</code>.
     */
    public final TmpForDebugDeleteSessions_20010141 TMP_FOR_DEBUG_DELETE_SESSIONS_20010141 = TmpForDebugDeleteSessions_20010141.TMP_FOR_DEBUG_DELETE_SESSIONS_20010141;

    /**
     * The table <code>live.tmp_for_debug_delete_sessions_20013229</code>.
     */
    public final TmpForDebugDeleteSessions_20013229 TMP_FOR_DEBUG_DELETE_SESSIONS_20013229 = TmpForDebugDeleteSessions_20013229.TMP_FOR_DEBUG_DELETE_SESSIONS_20013229;

    /**
     * The table <code>live.tmp_for_debug_delete_sessions_20014116</code>.
     */
    public final TmpForDebugDeleteSessions_20014116 TMP_FOR_DEBUG_DELETE_SESSIONS_20014116 = TmpForDebugDeleteSessions_20014116.TMP_FOR_DEBUG_DELETE_SESSIONS_20014116;

    /**
     * The table <code>live.tmp_for_debug_delete_sessions_20014677</code>.
     */
    public final TmpForDebugDeleteSessions_20014677 TMP_FOR_DEBUG_DELETE_SESSIONS_20014677 = TmpForDebugDeleteSessions_20014677.TMP_FOR_DEBUG_DELETE_SESSIONS_20014677;

    /**
     * The table <code>live.tmp_for_debug_delete_sessions_2001621</code>.
     */
    public final TmpForDebugDeleteSessions_2001621 TMP_FOR_DEBUG_DELETE_SESSIONS_2001621 = TmpForDebugDeleteSessions_2001621.TMP_FOR_DEBUG_DELETE_SESSIONS_2001621;

    /**
     * The table <code>live.tmp_for_debug_delete_sessions_2001646</code>.
     */
    public final TmpForDebugDeleteSessions_2001646 TMP_FOR_DEBUG_DELETE_SESSIONS_2001646 = TmpForDebugDeleteSessions_2001646.TMP_FOR_DEBUG_DELETE_SESSIONS_2001646;

    /**
     * The table <code>live.tmp_for_debug_delete_sessions_20017851</code>.
     */
    public final TmpForDebugDeleteSessions_20017851 TMP_FOR_DEBUG_DELETE_SESSIONS_20017851 = TmpForDebugDeleteSessions_20017851.TMP_FOR_DEBUG_DELETE_SESSIONS_20017851;

    /**
     * The table <code>live.tmp_for_debug_delete_sessions_20018558</code>.
     */
    public final TmpForDebugDeleteSessions_20018558 TMP_FOR_DEBUG_DELETE_SESSIONS_20018558 = TmpForDebugDeleteSessions_20018558.TMP_FOR_DEBUG_DELETE_SESSIONS_20018558;

    /**
     * The table <code>live.tmp_for_debug_delete_sessions_20018769</code>.
     */
    public final TmpForDebugDeleteSessions_20018769 TMP_FOR_DEBUG_DELETE_SESSIONS_20018769 = TmpForDebugDeleteSessions_20018769.TMP_FOR_DEBUG_DELETE_SESSIONS_20018769;

    /**
     * The table <code>live.tmp_for_debug_delete_sessions_20019106</code>.
     */
    public final TmpForDebugDeleteSessions_20019106 TMP_FOR_DEBUG_DELETE_SESSIONS_20019106 = TmpForDebugDeleteSessions_20019106.TMP_FOR_DEBUG_DELETE_SESSIONS_20019106;

    /**
     * The table <code>live.tmp_for_debug_delete_sessions_200343</code>.
     */
    public final TmpForDebugDeleteSessions_200343 TMP_FOR_DEBUG_DELETE_SESSIONS_200343 = TmpForDebugDeleteSessions_200343.TMP_FOR_DEBUG_DELETE_SESSIONS_200343;

    /**
     * The table <code>live.tmp_for_debug_delete_sessions_2005866</code>.
     */
    public final TmpForDebugDeleteSessions_2005866 TMP_FOR_DEBUG_DELETE_SESSIONS_2005866 = TmpForDebugDeleteSessions_2005866.TMP_FOR_DEBUG_DELETE_SESSIONS_2005866;

    /**
     * The table <code>live.tmp_for_debug_delete_sessions_2005981</code>.
     */
    public final TmpForDebugDeleteSessions_2005981 TMP_FOR_DEBUG_DELETE_SESSIONS_2005981 = TmpForDebugDeleteSessions_2005981.TMP_FOR_DEBUG_DELETE_SESSIONS_2005981;

    /**
     * The table <code>live.tmp_for_debug_delete_sessions_2006763</code>.
     */
    public final TmpForDebugDeleteSessions_2006763 TMP_FOR_DEBUG_DELETE_SESSIONS_2006763 = TmpForDebugDeleteSessions_2006763.TMP_FOR_DEBUG_DELETE_SESSIONS_2006763;

    /**
     * The table <code>live.tmp_for_debug_delete_sessions_2007834</code>.
     */
    public final TmpForDebugDeleteSessions_2007834 TMP_FOR_DEBUG_DELETE_SESSIONS_2007834 = TmpForDebugDeleteSessions_2007834.TMP_FOR_DEBUG_DELETE_SESSIONS_2007834;

    /**
     * The table <code>live.tmp_for_debug_delete_sessions_2009120</code>.
     */
    public final TmpForDebugDeleteSessions_2009120 TMP_FOR_DEBUG_DELETE_SESSIONS_2009120 = TmpForDebugDeleteSessions_2009120.TMP_FOR_DEBUG_DELETE_SESSIONS_2009120;

    /**
     * The table <code>live.tmp_selection_266184216</code>.
     */
    public final TmpSelection_266184216 TMP_SELECTION_266184216 = TmpSelection_266184216.TMP_SELECTION_266184216;

    /**
     * The table <code>live.tmp_selection_63943770</code>.
     */
    public final TmpSelection_63943770 TMP_SELECTION_63943770 = TmpSelection_63943770.TMP_SELECTION_63943770;

    /**
     * Holds information about the tracking config revisions that exist for a
     * site.
     */
    public final TrackingConfig TRACKING_CONFIG = TrackingConfig.TRACKING_CONFIG;

    /**
     * The table <code>live.tracking_setup</code>.
     */
    public final TrackingSetup TRACKING_SETUP = TrackingSetup.TRACKING_SETUP;

    /**
     * The table <code>live.trafficstats</code>.
     */
    public final Trafficstats TRAFFICSTATS = Trafficstats.TRAFFICSTATS;

    /**
     * The table <code>live.trafficstats31d</code>.
     */
    public final Trafficstats31d TRAFFICSTATS31D = Trafficstats31d.TRAFFICSTATS31D;

    /**
     * Holds info about pages for a site that are not mapped to a tracking
     * config page name yet.
     */
    public final UnmappedPage UNMAPPED_PAGE = UnmappedPage.UNMAPPED_PAGE;

    /**
     * The table <code>live.url</code>.
     */
    public final Url URL = Url.URL;

    /**
     * The table <code>live.user</code>.
     */
    public final User USER = User.USER;

    /**
     * The table <code>live.user_has_privilege</code>.
     */
    public final UserHasPrivilege USER_HAS_PRIVILEGE = UserHasPrivilege.USER_HAS_PRIVILEGE;

    /**
     * The table <code>live.user_has_saf</code>.
     */
    public final UserHasSaf USER_HAS_SAF = UserHasSaf.USER_HAS_SAF;

    /**
     * The table <code>live.user_has_site</code>.
     */
    public final UserHasSite USER_HAS_SITE = UserHasSite.USER_HAS_SITE;

    /**
     * The table <code>live.user_viewed_dashboard</code>.
     */
    public final UserViewedDashboard USER_VIEWED_DASHBOARD = UserViewedDashboard.USER_VIEWED_DASHBOARD;

    /**
     * The table <code>live.useragent</code>.
     */
    public final Useragent USERAGENT = Useragent.USERAGENT;

    /**
     * The table <code>live.useragents2</code>.
     */
    public final Useragents2 USERAGENTS2 = Useragents2.USERAGENTS2;

    /**
     * The table <code>live.useragents3</code>.
     */
    public final Useragents3 USERAGENTS3 = Useragents3.USERAGENTS3;

    /**
     * The table <code>live.vendor</code>.
     */
    public final Vendor VENDOR = Vendor.VENDOR;

    /**
     * video export list and job queue
     */
    public final Video VIDEO = Video.VIDEO;

    /**
     * This table holds debugging/logging information for recordings generated
     * by the native mobile SDK.
     */
    public final VideoPageStats VIDEO_PAGE_STATS = VideoPageStats.VIDEO_PAGE_STATS;

    /**
     * The table <code>live.visitor</code>.
     */
    public final Visitor VISITOR = Visitor.VISITOR;

    /**
     * No further instances allowed
     */
    private Live() {
        super("live", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            _SessionSelection._SESSION_SELECTION,
            _TmpUseragentsDv2020_08_06._TMP_USERAGENTS_DV2020_08_06,
            Account.ACCOUNT,
            AdobeAnalyticsFilter.ADOBE_ANALYTICS_FILTER,
            AdobeAnalyticsFilterSession.ADOBE_ANALYTICS_FILTER_SESSION,
            AdobeAnalyticsFilterVisitor.ADOBE_ANALYTICS_FILTER_VISITOR,
            AdobeAnalyticsSuite.ADOBE_ANALYTICS_SUITE,
            AdobeAnalyticsSuiteImportsettings.ADOBE_ANALYTICS_SUITE_IMPORTSETTINGS,
            AggregationPlan.AGGREGATION_PLAN,
            Bucket.BUCKET,
            BucketAlertEmailSetting.BUCKET_ALERT_EMAIL_SETTING,
            BucketCount.BUCKET_COUNT,
            BucketCountBdtcjn6dtf.BUCKET_COUNT_BDTCJN6DTF,
            BucketCountCwav87wdqu.BUCKET_COUNT_CWAV87WDQU,
            BucketCountMdxdlwkdtm.BUCKET_COUNT_MDXDLWKDTM,
            BucketCountVuxuvm8wek.BUCKET_COUNT_VUXUVM8WEK,
            BucketCountXwwlf8vbaw.BUCKET_COUNT_XWWLF8VBAW,
            BucketCountZdth64uzum.BUCKET_COUNT_ZDTH64UZUM,
            BucketTemplate.BUCKET_TEMPLATE,
            CassandraCleanlist.CASSANDRA_CLEANLIST,
            ComscoreFilter.COMSCORE_FILTER,
            ComscoreFilterPids.COMSCORE_FILTER_PIDS,
            Cp_10001Pageimpression.CP_10001_PAGEIMPRESSION,
            Cp_10010Pageimpression.CP_10010_PAGEIMPRESSION,
            Cp_1Pageimpression.CP_1_PAGEIMPRESSION,
            Cp_1Session.CP_1_SESSION,
            Cp_2Pageimpression.CP_2_PAGEIMPRESSION,
            Cp_3338Pageimpression.CP_3338_PAGEIMPRESSION,
            Cp_3338Session.CP_3338_SESSION,
            Cp_3Pageimpression.CP_3_PAGEIMPRESSION,
            Cp_3Session.CP_3_SESSION,
            Cp_4Pageimpression.CP_4_PAGEIMPRESSION,
            Cp_5Pageimpression.CP_5_PAGEIMPRESSION,
            Cp_5Session.CP_5_SESSION,
            Customparameter.CUSTOMPARAMETER,
            CustomparameterDomtree.CUSTOMPARAMETER_DOMTREE,
            CustomparameterLucene.CUSTOMPARAMETER_LUCENE,
            CustomparameterPatterndetector.CUSTOMPARAMETER_PATTERNDETECTOR,
            CustomparameterSqlquery.CUSTOMPARAMETER_SQLQUERY,
            DataBaseTest.DATA_BASE_TEST,
            DebugClient.DEBUG_CLIENT,
            DeviceInfoJsonPair.DEVICE_INFO_JSON_PAIR,
            Document.DOCUMENT,
            Element.ELEMENT,
            ElementVisible.ELEMENT_VISIBLE,
            Event.EVENT,
            EventClick.EVENT_CLICK,
            EventFocus.EVENT_FOCUS,
            EventHover.EVENT_HOVER,
            EventTable.EVENT_TABLE,
            ExceptionFilter.EXCEPTION_FILTER,
            Exportqueue.EXPORTQUEUE,
            FormelementAction.FORMELEMENT_ACTION,
            FormelementactionHasTaskitem.FORMELEMENTACTION_HAS_TASKITEM,
            Gesture.GESTURE,
            HeadlessAnswer.HEADLESS_ANSWER,
            HeadlessPollsShowed.HEADLESS_POLLS_SHOWED,
            HeadlessResponseRate.HEADLESS_RESPONSE_RATE,
            HeadlessanswerHasProperty.HEADLESSANSWER_HAS_PROPERTY,
            HistoryTrackingAmount.HISTORY_TRACKING_AMOUNT,
            HistoryTrackingRate.HISTORY_TRACKING_RATE,
            Is24Filter.IS24_FILTER,
            Is24FilterPids.IS24_FILTER_PIDS,
            JsonDatatype.JSON_DATATYPE,
            JsonKey.JSON_KEY,
            JsonValue.JSON_VALUE,
            LogPageHasAnswer.LOG_PAGE_HAS_ANSWER,
            LogSession.LOG_SESSION,
            LogSessionState.LOG_SESSION_STATE,
            MagicCode.MAGIC_CODE,
            MapClick.MAP_CLICK,
            MapClick_3135.MAP_CLICK_3135,
            MapClickBotched.MAP_CLICK_BOTCHED,
            MapClickCleanup.MAP_CLICK_CLEANUP,
            MapClickKp.MAP_CLICK_KP,
            MapClickPathinfo.MAP_CLICK_PATHINFO,
            MapClickPathinfo_11024.MAP_CLICK_PATHINFO_11024,
            MapClickPathinfo_11198.MAP_CLICK_PATHINFO_11198,
            MapClickPathinfo_11689.MAP_CLICK_PATHINFO_11689,
            MapClickPathnode.MAP_CLICK_PATHNODE,
            MapClickSettings.MAP_CLICK_SETTINGS,
            MapFocus.MAP_FOCUS,
            MapMove.MAP_MOVE,
            MapMove_3.MAP_MOVE_3,
            MapScroll.MAP_SCROLL,
            MapVisible.MAP_VISIBLE,
            Mdata.MDATA,
            Metadata.METADATA,
            MobileDevice.MOBILE_DEVICE,
            MobileMetric.MOBILE_METRIC,
            Movement_0t1.MOVEMENT_0T1,
            Movement_10t60.MOVEMENT_10T60,
            Movement_120.MOVEMENT_120,
            Movement_1t2.MOVEMENT_1T2,
            Movement_2t3.MOVEMENT_2T3,
            Movement_3t4.MOVEMENT_3T4,
            Movement_4t5.MOVEMENT_4T5,
            Movement_5t10.MOVEMENT_5T10,
            Movement_60t120.MOVEMENT_60T120,
            Movementmap.MOVEMENTMAP,
            Page.PAGE,
            PageFilter.PAGE_FILTER,
            PageHasAnswer.PAGE_HAS_ANSWER,
            PageHasEtlvisitorreplayreadyevent.PAGE_HAS_ETLVISITORREPLAYREADYEVENT,
            PageHasGesture.PAGE_HAS_GESTURE,
            PageHasResource.PAGE_HAS_RESOURCE,
            PageHasRespondent.PAGE_HAS_RESPONDENT,
            PageHasRespondentProd.PAGE_HAS_RESPONDENT_PROD,
            PageHasRespondentoldVoc_13071.PAGE_HAS_RESPONDENTOLD_VOC_13071,
            PageHasTag.PAGE_HAS_TAG,
            PageHasVideo.PAGE_HAS_VIDEO,
            PageName.PAGE_NAME,
            PageNameBlocklist.PAGE_NAME_BLOCKLIST,
            PageNameImport.PAGE_NAME_IMPORT,
            PageStats.PAGE_STATS,
            PagenamesToDelete.PAGENAMES_TO_DELETE,
            Privilege.PRIVILEGE,
            PropertyValues.PROPERTY_VALUES,
            Questionnaire.QUESTIONNAIRE,
            QuestionnaireAlert.QUESTIONNAIRE_ALERT,
            QuestionnaireCrypt.QUESTIONNAIRE_CRYPT,
            QuestionnaireElement.QUESTIONNAIRE_ELEMENT,
            QuestionnaireHasExport.QUESTIONNAIRE_HAS_EXPORT,
            QuestionnaireHasFile.QUESTIONNAIRE_HAS_FILE,
            QuestionnaireLayout.QUESTIONNAIRE_LAYOUT,
            QuestionnaireType.QUESTIONNAIRE_TYPE,
            Raster.RASTER,
            Ratio.RATIO,
            RatioType.RATIO_TYPE,
            ResourceExcludeBot.RESOURCE_EXCLUDE_BOT,
            ResourceExcludeHost.RESOURCE_EXCLUDE_HOST,
            ResourceExcludeKeyword.RESOURCE_EXCLUDE_KEYWORD,
            ResourceHasParent.RESOURCE_HAS_PARENT,
            ResourceIncludeProtocol.RESOURCE_INCLUDE_PROTOCOL,
            ResourceOld.RESOURCE_OLD,
            ResourceReimport.RESOURCE_REIMPORT,
            ResourceRule.RESOURCE_RULE,
            SafHasSegments.SAF_HAS_SEGMENTS,
            SafSegmentHasPage.SAF_SEGMENT_HAS_PAGE,
            SchemaInfo.SCHEMA_INFO,
            Scrollingmap.SCROLLINGMAP,
            Server.SERVER,
            Session.SESSION,
            SessionHasMetadata.SESSION_HAS_METADATA,
            SessionHasMobileDevice.SESSION_HAS_MOBILE_DEVICE,
            SessionHasPagename.SESSION_HAS_PAGENAME,
            SessionHasResource.SESSION_HAS_RESOURCE,
            SessionReimport.SESSION_REIMPORT,
            SessionSelection.SESSION_SELECTION,
            Sessionstats24h.SESSIONSTATS24H,
            Settings.SETTINGS,
            Site.SITE,
            SiteApiFiles.SITE_API_FILES,
            SiteHasVendor.SITE_HAS_VENDOR,
            Sitestats.SITESTATS,
            StageJsonPair.STAGE_JSON_PAIR,
            StruggleIndicatorDeadClickCount.STRUGGLE_INDICATOR_DEAD_CLICK_COUNT,
            StruggleIndicatorDomloadTime.STRUGGLE_INDICATOR_DOMLOAD_TIME,
            StruggleIndicatorErrorMessageCount.STRUGGLE_INDICATOR_ERROR_MESSAGE_COUNT,
            StruggleIndicatorErrorPage.STRUGGLE_INDICATOR_ERROR_PAGE,
            StruggleIndicatorFormFieldAbandonment.STRUGGLE_INDICATOR_FORM_FIELD_ABANDONMENT,
            StruggleIndicatorFormFieldModificationCount.STRUGGLE_INDICATOR_FORM_FIELD_MODIFICATION_COUNT,
            StruggleIndicatorFunnelStepRepetition.STRUGGLE_INDICATOR_FUNNEL_STEP_REPETITION,
            StruggleIndicatorJsErrorCount.STRUGGLE_INDICATOR_JS_ERROR_COUNT,
            StruggleIndicatorLongInputTime.STRUGGLE_INDICATOR_LONG_INPUT_TIME,
            StruggleIndicatorRageClickCount.STRUGGLE_INDICATOR_RAGE_CLICK_COUNT,
            StruggleIndicatorScrollDirectionChangeCount.STRUGGLE_INDICATOR_SCROLL_DIRECTION_CHANGE_COUNT,
            StruggleScorePage.STRUGGLE_SCORE_PAGE,
            StruggleScoreSession.STRUGGLE_SCORE_SESSION,
            Tag.TAG,
            Task.TASK,
            TaskAction.TASK_ACTION,
            TaskHasRatio.TASK_HAS_RATIO,
            TaskItem.TASK_ITEM,
            TaskItemAction.TASK_ITEM_ACTION,
            TaskitemHasPage.TASKITEM_HAS_PAGE,
            TaskitemHasPagename.TASKITEM_HAS_PAGENAME,
            TestDv_2020_07_24.TEST_DV_2020_07_24,
            Tmp_0.TMP_0,
            TmpForDebugDeleteSessions_20010141.TMP_FOR_DEBUG_DELETE_SESSIONS_20010141,
            TmpForDebugDeleteSessions_20013229.TMP_FOR_DEBUG_DELETE_SESSIONS_20013229,
            TmpForDebugDeleteSessions_20014116.TMP_FOR_DEBUG_DELETE_SESSIONS_20014116,
            TmpForDebugDeleteSessions_20014677.TMP_FOR_DEBUG_DELETE_SESSIONS_20014677,
            TmpForDebugDeleteSessions_2001621.TMP_FOR_DEBUG_DELETE_SESSIONS_2001621,
            TmpForDebugDeleteSessions_2001646.TMP_FOR_DEBUG_DELETE_SESSIONS_2001646,
            TmpForDebugDeleteSessions_20017851.TMP_FOR_DEBUG_DELETE_SESSIONS_20017851,
            TmpForDebugDeleteSessions_20018558.TMP_FOR_DEBUG_DELETE_SESSIONS_20018558,
            TmpForDebugDeleteSessions_20018769.TMP_FOR_DEBUG_DELETE_SESSIONS_20018769,
            TmpForDebugDeleteSessions_20019106.TMP_FOR_DEBUG_DELETE_SESSIONS_20019106,
            TmpForDebugDeleteSessions_200343.TMP_FOR_DEBUG_DELETE_SESSIONS_200343,
            TmpForDebugDeleteSessions_2005866.TMP_FOR_DEBUG_DELETE_SESSIONS_2005866,
            TmpForDebugDeleteSessions_2005981.TMP_FOR_DEBUG_DELETE_SESSIONS_2005981,
            TmpForDebugDeleteSessions_2006763.TMP_FOR_DEBUG_DELETE_SESSIONS_2006763,
            TmpForDebugDeleteSessions_2007834.TMP_FOR_DEBUG_DELETE_SESSIONS_2007834,
            TmpForDebugDeleteSessions_2009120.TMP_FOR_DEBUG_DELETE_SESSIONS_2009120,
            TmpSelection_266184216.TMP_SELECTION_266184216,
            TmpSelection_63943770.TMP_SELECTION_63943770,
            TrackingConfig.TRACKING_CONFIG,
            TrackingSetup.TRACKING_SETUP,
            Trafficstats.TRAFFICSTATS,
            Trafficstats31d.TRAFFICSTATS31D,
            UnmappedPage.UNMAPPED_PAGE,
            Url.URL,
            User.USER,
            UserHasPrivilege.USER_HAS_PRIVILEGE,
            UserHasSaf.USER_HAS_SAF,
            UserHasSite.USER_HAS_SITE,
            UserViewedDashboard.USER_VIEWED_DASHBOARD,
            Useragent.USERAGENT,
            Useragents2.USERAGENTS2,
            Useragents3.USERAGENTS3,
            Vendor.VENDOR,
            Video.VIDEO,
            VideoPageStats.VIDEO_PAGE_STATS,
            Visitor.VISITOR
        );
    }
}
