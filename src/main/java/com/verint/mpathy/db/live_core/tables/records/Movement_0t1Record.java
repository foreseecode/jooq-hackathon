/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables.records;


import com.verint.mpathy.db.live_core.tables.Movement_0t1;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Movement_0t1Record extends TableRecordImpl<Movement_0t1Record> implements Record3<Integer, BigDecimal, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live_core.movement_0t1.idsite</code>.
     */
    public void setIdsite(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>live_core.movement_0t1.idsite</code>.
     */
    public Integer getIdsite() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>live_core.movement_0t1.idpage</code>.
     */
    public void setIdpage(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_core.movement_0t1.idpage</code>.
     */
    public BigDecimal getIdpage() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>live_core.movement_0t1.move</code>.
     */
    public void setMove(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>live_core.movement_0t1.move</code>.
     */
    public String getMove() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, BigDecimal, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, BigDecimal, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Movement_0t1.MOVEMENT_0T1.IDSITE;
    }

    @Override
    public Field<BigDecimal> field2() {
        return Movement_0t1.MOVEMENT_0T1.IDPAGE;
    }

    @Override
    public Field<String> field3() {
        return Movement_0t1.MOVEMENT_0T1.MOVE;
    }

    @Override
    public Integer component1() {
        return getIdsite();
    }

    @Override
    public BigDecimal component2() {
        return getIdpage();
    }

    @Override
    public String component3() {
        return getMove();
    }

    @Override
    public Integer value1() {
        return getIdsite();
    }

    @Override
    public BigDecimal value2() {
        return getIdpage();
    }

    @Override
    public String value3() {
        return getMove();
    }

    @Override
    public Movement_0t1Record value1(Integer value) {
        setIdsite(value);
        return this;
    }

    @Override
    public Movement_0t1Record value2(BigDecimal value) {
        setIdpage(value);
        return this;
    }

    @Override
    public Movement_0t1Record value3(String value) {
        setMove(value);
        return this;
    }

    @Override
    public Movement_0t1Record values(Integer value1, BigDecimal value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Movement_0t1Record
     */
    public Movement_0t1Record() {
        super(Movement_0t1.MOVEMENT_0T1);
    }

    /**
     * Create a detached, initialised Movement_0t1Record
     */
    public Movement_0t1Record(Integer idsite, BigDecimal idpage, String move) {
        super(Movement_0t1.MOVEMENT_0T1);

        setIdsite(idsite);
        setIdpage(idpage);
        setMove(move);
    }
}
