/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables;


import com.verint.mpathy.db.live_core.LiveCore;
import com.verint.mpathy.db.live_core.tables.records.TmpSelection_63943770Record;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row1;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TmpSelection_63943770 extends TableImpl<TmpSelection_63943770Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live_core.tmp_selection_63943770</code>
     */
    public static final TmpSelection_63943770 TMP_SELECTION_63943770 = new TmpSelection_63943770();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TmpSelection_63943770Record> getRecordType() {
        return TmpSelection_63943770Record.class;
    }

    /**
     * The column <code>live_core.tmp_selection_63943770.idsession</code>.
     */
    public final TableField<TmpSelection_63943770Record, BigDecimal> IDSESSION = createField(DSL.name("idsession"), SQLDataType.NUMERIC, this, "");

    private TmpSelection_63943770(Name alias, Table<TmpSelection_63943770Record> aliased) {
        this(alias, aliased, null);
    }

    private TmpSelection_63943770(Name alias, Table<TmpSelection_63943770Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Easy access to underlying table in other schemas."), TableOptions.view("create view \"tmp_selection_63943770\" as  SELECT tmp_selection_63943770.idsession\n   FROM live.tmp_selection_63943770;"));
    }

    /**
     * Create an aliased <code>live_core.tmp_selection_63943770</code> table
     * reference
     */
    public TmpSelection_63943770(String alias) {
        this(DSL.name(alias), TMP_SELECTION_63943770);
    }

    /**
     * Create an aliased <code>live_core.tmp_selection_63943770</code> table
     * reference
     */
    public TmpSelection_63943770(Name alias) {
        this(alias, TMP_SELECTION_63943770);
    }

    /**
     * Create a <code>live_core.tmp_selection_63943770</code> table reference
     */
    public TmpSelection_63943770() {
        this(DSL.name("tmp_selection_63943770"), null);
    }

    public <O extends Record> TmpSelection_63943770(Table<O> child, ForeignKey<O, TmpSelection_63943770Record> key) {
        super(child, key, TMP_SELECTION_63943770);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : LiveCore.LIVE_CORE;
    }

    @Override
    public TmpSelection_63943770 as(String alias) {
        return new TmpSelection_63943770(DSL.name(alias), this);
    }

    @Override
    public TmpSelection_63943770 as(Name alias) {
        return new TmpSelection_63943770(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TmpSelection_63943770 rename(String name) {
        return new TmpSelection_63943770(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TmpSelection_63943770 rename(Name name) {
        return new TmpSelection_63943770(name, null);
    }

    // -------------------------------------------------------------------------
    // Row1 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row1<BigDecimal> fieldsRow() {
        return (Row1) super.fieldsRow();
    }
}
