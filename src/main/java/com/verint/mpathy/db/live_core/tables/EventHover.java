/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables;


import com.verint.mpathy.db.live_core.LiveCore;
import com.verint.mpathy.db.live_core.tables.records.EventHoverRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventHover extends TableImpl<EventHoverRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live_core.event_hover</code>
     */
    public static final EventHover EVENT_HOVER = new EventHover();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EventHoverRecord> getRecordType() {
        return EventHoverRecord.class;
    }

    /**
     * The column <code>live_core.event_hover.idpage</code>.
     */
    public final TableField<EventHoverRecord, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.event_hover.idelement</code>.
     */
    public final TableField<EventHoverRecord, BigDecimal> IDELEMENT = createField(DSL.name("idelement"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.event_hover.timestamp</code>.
     */
    public final TableField<EventHoverRecord, BigDecimal> TIMESTAMP = createField(DSL.name("timestamp"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.event_hover.idsession</code>.
     */
    public final TableField<EventHoverRecord, BigDecimal> IDSESSION = createField(DSL.name("idsession"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.event_hover.idsite</code>.
     */
    public final TableField<EventHoverRecord, Integer> IDSITE = createField(DSL.name("idsite"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>live_core.event_hover.idurl</code>.
     */
    public final TableField<EventHoverRecord, Long> IDURL = createField(DSL.name("idurl"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.event_hover.idpage_name</code>.
     */
    public final TableField<EventHoverRecord, Long> IDPAGE_NAME = createField(DSL.name("idpage_name"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.event_hover.idtime_successor</code>.
     */
    public final TableField<EventHoverRecord, BigDecimal> IDTIME_SUCCESSOR = createField(DSL.name("idtime_successor"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.event_hover.idpage_successor</code>.
     */
    public final TableField<EventHoverRecord, BigDecimal> IDPAGE_SUCCESSOR = createField(DSL.name("idpage_successor"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.event_hover.idelement_successor</code>.
     */
    public final TableField<EventHoverRecord, BigDecimal> IDELEMENT_SUCCESSOR = createField(DSL.name("idelement_successor"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.event_hover.timestamp_successor</code>.
     */
    public final TableField<EventHoverRecord, BigDecimal> TIMESTAMP_SUCCESSOR = createField(DSL.name("timestamp_successor"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.event_hover.sequence</code>.
     */
    public final TableField<EventHoverRecord, Long> SEQUENCE = createField(DSL.name("sequence"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.event_hover.time_to_contact</code>.
     */
    public final TableField<EventHoverRecord, Long> TIME_TO_CONTACT = createField(DSL.name("time_to_contact"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.event_hover.hovertime</code>.
     */
    public final TableField<EventHoverRecord, Long> HOVERTIME = createField(DSL.name("hovertime"), SQLDataType.BIGINT, this, "");

    private EventHover(Name alias, Table<EventHoverRecord> aliased) {
        this(alias, aliased, null);
    }

    private EventHover(Name alias, Table<EventHoverRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Easy access to underlying table in other schemas."), TableOptions.view("create view \"event_hover\" as  SELECT event_hover.idpage,\n    event_hover.idelement,\n    event_hover.\"timestamp\",\n    event_hover.idsession,\n    event_hover.idsite,\n    event_hover.idurl,\n    event_hover.idpage_name,\n    event_hover.idtime_successor,\n    event_hover.idpage_successor,\n    event_hover.idelement_successor,\n    event_hover.timestamp_successor,\n    event_hover.sequence,\n    event_hover.time_to_contact,\n    event_hover.hovertime\n   FROM live.event_hover;"));
    }

    /**
     * Create an aliased <code>live_core.event_hover</code> table reference
     */
    public EventHover(String alias) {
        this(DSL.name(alias), EVENT_HOVER);
    }

    /**
     * Create an aliased <code>live_core.event_hover</code> table reference
     */
    public EventHover(Name alias) {
        this(alias, EVENT_HOVER);
    }

    /**
     * Create a <code>live_core.event_hover</code> table reference
     */
    public EventHover() {
        this(DSL.name("event_hover"), null);
    }

    public <O extends Record> EventHover(Table<O> child, ForeignKey<O, EventHoverRecord> key) {
        super(child, key, EVENT_HOVER);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : LiveCore.LIVE_CORE;
    }

    @Override
    public EventHover as(String alias) {
        return new EventHover(DSL.name(alias), this);
    }

    @Override
    public EventHover as(Name alias) {
        return new EventHover(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EventHover rename(String name) {
        return new EventHover(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EventHover rename(Name name) {
        return new EventHover(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<BigDecimal, BigDecimal, BigDecimal, BigDecimal, Integer, Long, Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Long, Long, Long> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
