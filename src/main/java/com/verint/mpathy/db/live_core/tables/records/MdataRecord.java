/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables.records;


import com.verint.mpathy.db.live_core.tables.Mdata;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MdataRecord extends TableRecordImpl<MdataRecord> implements Record4<Long, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live_core.mdata.idmdata</code>.
     */
    public void setIdmdata(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>live_core.mdata.idmdata</code>.
     */
    public Long getIdmdata() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>live_core.mdata.scaffold</code>.
     */
    public void setScaffold(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_core.mdata.scaffold</code>.
     */
    public String getScaffold() {
        return (String) get(1);
    }

    /**
     * Setter for <code>live_core.mdata.encoding</code>.
     */
    public void setEncoding(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>live_core.mdata.encoding</code>.
     */
    public String getEncoding() {
        return (String) get(2);
    }

    /**
     * Setter for <code>live_core.mdata.doctype</code>.
     */
    public void setDoctype(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>live_core.mdata.doctype</code>.
     */
    public String getDoctype() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Mdata.MDATA.IDMDATA;
    }

    @Override
    public Field<String> field2() {
        return Mdata.MDATA.SCAFFOLD;
    }

    @Override
    public Field<String> field3() {
        return Mdata.MDATA.ENCODING;
    }

    @Override
    public Field<String> field4() {
        return Mdata.MDATA.DOCTYPE;
    }

    @Override
    public Long component1() {
        return getIdmdata();
    }

    @Override
    public String component2() {
        return getScaffold();
    }

    @Override
    public String component3() {
        return getEncoding();
    }

    @Override
    public String component4() {
        return getDoctype();
    }

    @Override
    public Long value1() {
        return getIdmdata();
    }

    @Override
    public String value2() {
        return getScaffold();
    }

    @Override
    public String value3() {
        return getEncoding();
    }

    @Override
    public String value4() {
        return getDoctype();
    }

    @Override
    public MdataRecord value1(Long value) {
        setIdmdata(value);
        return this;
    }

    @Override
    public MdataRecord value2(String value) {
        setScaffold(value);
        return this;
    }

    @Override
    public MdataRecord value3(String value) {
        setEncoding(value);
        return this;
    }

    @Override
    public MdataRecord value4(String value) {
        setDoctype(value);
        return this;
    }

    @Override
    public MdataRecord values(Long value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MdataRecord
     */
    public MdataRecord() {
        super(Mdata.MDATA);
    }

    /**
     * Create a detached, initialised MdataRecord
     */
    public MdataRecord(Long idmdata, String scaffold, String encoding, String doctype) {
        super(Mdata.MDATA);

        setIdmdata(idmdata);
        setScaffold(scaffold);
        setEncoding(encoding);
        setDoctype(doctype);
    }
}
