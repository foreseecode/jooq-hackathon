/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables.records;


import com.verint.mpathy.db.live.tables.Raster;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RasterRecord extends TableRecordImpl<RasterRecord> implements Record3<Long, Long, Object> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live.raster.x</code>.
     */
    public void setX(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>live.raster.x</code>.
     */
    public Long getX() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>live.raster.y</code>.
     */
    public void setY(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>live.raster.y</code>.
     */
    public Long getY() {
        return (Long) get(1);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setPolygon(Object value) {
        set(2, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getPolygon() {
        return get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Object> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Object> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Raster.RASTER.X;
    }

    @Override
    public Field<Long> field2() {
        return Raster.RASTER.Y;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Field<Object> field3() {
        return Raster.RASTER.POLYGON;
    }

    @Override
    public Long component1() {
        return getX();
    }

    @Override
    public Long component2() {
        return getY();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Object component3() {
        return getPolygon();
    }

    @Override
    public Long value1() {
        return getX();
    }

    @Override
    public Long value2() {
        return getY();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Object value3() {
        return getPolygon();
    }

    @Override
    public RasterRecord value1(Long value) {
        setX(value);
        return this;
    }

    @Override
    public RasterRecord value2(Long value) {
        setY(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public RasterRecord value3(Object value) {
        setPolygon(value);
        return this;
    }

    @Override
    public RasterRecord values(Long value1, Long value2, Object value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RasterRecord
     */
    public RasterRecord() {
        super(Raster.RASTER);
    }

    /**
     * Create a detached, initialised RasterRecord
     */
    public RasterRecord(Long x, Long y, Object polygon) {
        super(Raster.RASTER);

        setX(x);
        setY(y);
        setPolygon(polygon);
    }
}
