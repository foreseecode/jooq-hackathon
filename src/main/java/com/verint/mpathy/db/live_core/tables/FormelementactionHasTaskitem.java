/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables;


import com.verint.mpathy.db.live_core.LiveCore;
import com.verint.mpathy.db.live_core.tables.records.FormelementactionHasTaskitemRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FormelementactionHasTaskitem extends TableImpl<FormelementactionHasTaskitemRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>live_core.formelementaction_has_taskitem</code>
     */
    public static final FormelementactionHasTaskitem FORMELEMENTACTION_HAS_TASKITEM = new FormelementactionHasTaskitem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FormelementactionHasTaskitemRecord> getRecordType() {
        return FormelementactionHasTaskitemRecord.class;
    }

    /**
     * The column
     * <code>live_core.formelementaction_has_taskitem.idtaskitem</code>.
     */
    public final TableField<FormelementactionHasTaskitemRecord, BigDecimal> IDTASKITEM = createField(DSL.name("idtaskitem"), SQLDataType.NUMERIC, this, "");

    /**
     * The column
     * <code>live_core.formelementaction_has_taskitem.idelement</code>.
     */
    public final TableField<FormelementactionHasTaskitemRecord, BigDecimal> IDELEMENT = createField(DSL.name("idelement"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.formelementaction_has_taskitem.idpage</code>.
     */
    public final TableField<FormelementactionHasTaskitemRecord, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC, this, "");

    /**
     * The column
     * <code>live_core.formelementaction_has_taskitem.idsession</code>.
     */
    public final TableField<FormelementactionHasTaskitemRecord, BigDecimal> IDSESSION = createField(DSL.name("idsession"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.formelementaction_has_taskitem.idtask</code>.
     */
    public final TableField<FormelementactionHasTaskitemRecord, Long> IDTASK = createField(DSL.name("idtask"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>live_core.formelementaction_has_taskitem.canceled</code>.
     */
    public final TableField<FormelementactionHasTaskitemRecord, Short> CANCELED = createField(DSL.name("canceled"), SQLDataType.SMALLINT, this, "");

    private FormelementactionHasTaskitem(Name alias, Table<FormelementactionHasTaskitemRecord> aliased) {
        this(alias, aliased, null);
    }

    private FormelementactionHasTaskitem(Name alias, Table<FormelementactionHasTaskitemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Easy access to underlying table in other schemas."), TableOptions.view("create view \"formelementaction_has_taskitem\" as  SELECT formelementaction_has_taskitem.idtaskitem,\n    formelementaction_has_taskitem.idelement,\n    formelementaction_has_taskitem.idpage,\n    formelementaction_has_taskitem.idsession,\n    formelementaction_has_taskitem.idtask,\n    formelementaction_has_taskitem.canceled\n   FROM live.formelementaction_has_taskitem;"));
    }

    /**
     * Create an aliased <code>live_core.formelementaction_has_taskitem</code>
     * table reference
     */
    public FormelementactionHasTaskitem(String alias) {
        this(DSL.name(alias), FORMELEMENTACTION_HAS_TASKITEM);
    }

    /**
     * Create an aliased <code>live_core.formelementaction_has_taskitem</code>
     * table reference
     */
    public FormelementactionHasTaskitem(Name alias) {
        this(alias, FORMELEMENTACTION_HAS_TASKITEM);
    }

    /**
     * Create a <code>live_core.formelementaction_has_taskitem</code> table
     * reference
     */
    public FormelementactionHasTaskitem() {
        this(DSL.name("formelementaction_has_taskitem"), null);
    }

    public <O extends Record> FormelementactionHasTaskitem(Table<O> child, ForeignKey<O, FormelementactionHasTaskitemRecord> key) {
        super(child, key, FORMELEMENTACTION_HAS_TASKITEM);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : LiveCore.LIVE_CORE;
    }

    @Override
    public FormelementactionHasTaskitem as(String alias) {
        return new FormelementactionHasTaskitem(DSL.name(alias), this);
    }

    @Override
    public FormelementactionHasTaskitem as(Name alias) {
        return new FormelementactionHasTaskitem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FormelementactionHasTaskitem rename(String name) {
        return new FormelementactionHasTaskitem(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FormelementactionHasTaskitem rename(Name name) {
        return new FormelementactionHasTaskitem(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<BigDecimal, BigDecimal, BigDecimal, BigDecimal, Long, Short> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
