/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables.records;


import com.verint.mpathy.db.live.tables.ResourceOld;

import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.TableRecordImpl;


/**
 * Contains all currently stored CSS files.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourceOldRecord extends TableRecordImpl<ResourceOldRecord> implements Record9<Long, String, String, String, Short, String, LocalTime, LocalTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live.resource_old.idres</code>. Primary Key to
     * "resource"-Table.
     */
    public void setIdres(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>live.resource_old.idres</code>. Primary Key to
     * "resource"-Table.
     */
    public Long getIdres() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>live.resource_old.original_url</code>. optional URL the
     * resource was downloaded from.
     */
    public void setOriginalUrl(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>live.resource_old.original_url</code>. optional URL the
     * resource was downloaded from.
     */
    public String getOriginalUrl() {
        return (String) get(1);
    }

    /**
     * Setter for <code>live.resource_old.hash</code>. A unique hash based on
     * the content.
     */
    public void setHash(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>live.resource_old.hash</code>. A unique hash based on
     * the content.
     */
    public String getHash() {
        return (String) get(2);
    }

    /**
     * Setter for <code>live.resource_old.path</code>. optional path to
     * resource.
     */
    public void setPath(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>live.resource_old.path</code>. optional path to
     * resource.
     */
    public String getPath() {
        return (String) get(3);
    }

    /**
     * Setter for <code>live.resource_old.status</code>. new resources are
     * initialised with status=0. Refer to documentation for status model.
     */
    public void setStatus(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>live.resource_old.status</code>. new resources are
     * initialised with status=0. Refer to documentation for status model.
     */
    public Short getStatus() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>live.resource_old.mime_type</code>. Content-type (header
     * of CSS-URL request), empty if header is missing.
     */
    public void setMimeType(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>live.resource_old.mime_type</code>. Content-type (header
     * of CSS-URL request), empty if header is missing.
     */
    public String getMimeType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>live.resource_old.created</code>. The creation time of
     * the resource.
     */
    public void setCreated(LocalTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>live.resource_old.created</code>. The creation time of
     * the resource.
     */
    public LocalTime getCreated() {
        return (LocalTime) get(6);
    }

    /**
     * Setter for <code>live.resource_old.date</code>. Date of the last download
     * attempt.
     */
    public void setDate(LocalTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>live.resource_old.date</code>. Date of the last download
     * attempt.
     */
    public LocalTime getDate() {
        return (LocalTime) get(7);
    }

    /**
     * Setter for <code>live.resource_old.download_url</code>. Full qualified
     * url to download the resource from the source server.
     */
    public void setDownloadUrl(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>live.resource_old.download_url</code>. Full qualified
     * url to download the resource from the source server.
     */
    public String getDownloadUrl() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, String, String, Short, String, LocalTime, LocalTime, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, String, String, String, Short, String, LocalTime, LocalTime, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ResourceOld.RESOURCE_OLD.IDRES;
    }

    @Override
    public Field<String> field2() {
        return ResourceOld.RESOURCE_OLD.ORIGINAL_URL;
    }

    @Override
    public Field<String> field3() {
        return ResourceOld.RESOURCE_OLD.HASH;
    }

    @Override
    public Field<String> field4() {
        return ResourceOld.RESOURCE_OLD.PATH;
    }

    @Override
    public Field<Short> field5() {
        return ResourceOld.RESOURCE_OLD.STATUS;
    }

    @Override
    public Field<String> field6() {
        return ResourceOld.RESOURCE_OLD.MIME_TYPE;
    }

    @Override
    public Field<LocalTime> field7() {
        return ResourceOld.RESOURCE_OLD.CREATED;
    }

    @Override
    public Field<LocalTime> field8() {
        return ResourceOld.RESOURCE_OLD.DATE;
    }

    @Override
    public Field<String> field9() {
        return ResourceOld.RESOURCE_OLD.DOWNLOAD_URL;
    }

    @Override
    public Long component1() {
        return getIdres();
    }

    @Override
    public String component2() {
        return getOriginalUrl();
    }

    @Override
    public String component3() {
        return getHash();
    }

    @Override
    public String component4() {
        return getPath();
    }

    @Override
    public Short component5() {
        return getStatus();
    }

    @Override
    public String component6() {
        return getMimeType();
    }

    @Override
    public LocalTime component7() {
        return getCreated();
    }

    @Override
    public LocalTime component8() {
        return getDate();
    }

    @Override
    public String component9() {
        return getDownloadUrl();
    }

    @Override
    public Long value1() {
        return getIdres();
    }

    @Override
    public String value2() {
        return getOriginalUrl();
    }

    @Override
    public String value3() {
        return getHash();
    }

    @Override
    public String value4() {
        return getPath();
    }

    @Override
    public Short value5() {
        return getStatus();
    }

    @Override
    public String value6() {
        return getMimeType();
    }

    @Override
    public LocalTime value7() {
        return getCreated();
    }

    @Override
    public LocalTime value8() {
        return getDate();
    }

    @Override
    public String value9() {
        return getDownloadUrl();
    }

    @Override
    public ResourceOldRecord value1(Long value) {
        setIdres(value);
        return this;
    }

    @Override
    public ResourceOldRecord value2(String value) {
        setOriginalUrl(value);
        return this;
    }

    @Override
    public ResourceOldRecord value3(String value) {
        setHash(value);
        return this;
    }

    @Override
    public ResourceOldRecord value4(String value) {
        setPath(value);
        return this;
    }

    @Override
    public ResourceOldRecord value5(Short value) {
        setStatus(value);
        return this;
    }

    @Override
    public ResourceOldRecord value6(String value) {
        setMimeType(value);
        return this;
    }

    @Override
    public ResourceOldRecord value7(LocalTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public ResourceOldRecord value8(LocalTime value) {
        setDate(value);
        return this;
    }

    @Override
    public ResourceOldRecord value9(String value) {
        setDownloadUrl(value);
        return this;
    }

    @Override
    public ResourceOldRecord values(Long value1, String value2, String value3, String value4, Short value5, String value6, LocalTime value7, LocalTime value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResourceOldRecord
     */
    public ResourceOldRecord() {
        super(ResourceOld.RESOURCE_OLD);
    }

    /**
     * Create a detached, initialised ResourceOldRecord
     */
    public ResourceOldRecord(Long idres, String originalUrl, String hash, String path, Short status, String mimeType, LocalTime created, LocalTime date, String downloadUrl) {
        super(ResourceOld.RESOURCE_OLD);

        setIdres(idres);
        setOriginalUrl(originalUrl);
        setHash(hash);
        setPath(path);
        setStatus(status);
        setMimeType(mimeType);
        setCreated(created);
        setDate(date);
        setDownloadUrl(downloadUrl);
    }
}
