/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_data.tables.records;


import com.verint.mpathy.db.live_data.tables.PageHasAnswer;

import java.math.BigDecimal;
import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PageHasAnswerRecord extends TableRecordImpl<PageHasAnswerRecord> implements Record13<BigDecimal, Long, Long, String, LocalTime, Short, BigDecimal, Long, Long, Integer, Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live_data.page_has_answer.idpage</code>.
     */
    public void setIdpage(BigDecimal value) {
        set(0, value);
    }

    /**
     * Getter for <code>live_data.page_has_answer.idpage</code>.
     */
    public BigDecimal getIdpage() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>live_data.page_has_answer.idquestion</code>.
     */
    public void setIdquestion(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_data.page_has_answer.idquestion</code>.
     */
    public Long getIdquestion() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>live_data.page_has_answer.idanswer</code>.
     */
    public void setIdanswer(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>live_data.page_has_answer.idanswer</code>.
     */
    public Long getIdanswer() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>live_data.page_has_answer.text</code>.
     */
    public void setText(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>live_data.page_has_answer.text</code>.
     */
    public String getText() {
        return (String) get(3);
    }

    /**
     * Setter for <code>live_data.page_has_answer.timestamp</code>.
     */
    public void setTimestamp(LocalTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>live_data.page_has_answer.timestamp</code>.
     */
    public LocalTime getTimestamp() {
        return (LocalTime) get(4);
    }

    /**
     * Setter for <code>live_data.page_has_answer.aborted</code>.
     */
    public void setAborted(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>live_data.page_has_answer.aborted</code>.
     */
    public Short getAborted() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>live_data.page_has_answer.group_key</code>. Group the
     * questionnaire answers and based on the pseudo ident
     * "headless_answer"."idpage".
     */
    public void setGroupKey(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>live_data.page_has_answer.group_key</code>. Group the
     * questionnaire answers and based on the pseudo ident
     * "headless_answer"."idpage".
     */
    public BigDecimal getGroupKey() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>live_data.page_has_answer.iduseragent</code>. Useragent
     * ident with a reference to "useragent".
     */
    public void setIduseragent(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>live_data.page_has_answer.iduseragent</code>. Useragent
     * ident with a reference to "useragent".
     */
    public Long getIduseragent() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>live_data.page_has_answer.idpage_name</code>. Pagename
     * ident with a reference to "page_name".
     */
    public void setIdpageName(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>live_data.page_has_answer.idpage_name</code>. Pagename
     * ident with a reference to "page_name".
     */
    public Long getIdpageName() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>live_data.page_has_answer.duration</code>. The time how
     * long the user need to fill or select a answer of the questionnaire
     * element.
     */
    public void setDuration(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>live_data.page_has_answer.duration</code>. The time how
     * long the user need to fill or select a answer of the questionnaire
     * element.
     */
    public Integer getDuration() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>live_data.page_has_answer.idquestionnaire</code>.
     * Reference ident to the questionnaire configuration table.
     */
    public void setIdquestionnaire(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>live_data.page_has_answer.idquestionnaire</code>.
     * Reference ident to the questionnaire configuration table.
     */
    public Long getIdquestionnaire() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>live_data.page_has_answer.random_group</code>. The
     * random_group of the answer.
     */
    public void setRandomGroup(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>live_data.page_has_answer.random_group</code>. The
     * random_group of the answer.
     */
    public String getRandomGroup() {
        return (String) get(11);
    }

    /**
     * Setter for <code>live_data.page_has_answer.idresponse</code>. The
     * response id of the answer.
     */
    public void setIdresponse(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>live_data.page_has_answer.idresponse</code>. The
     * response id of the answer.
     */
    public String getIdresponse() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<BigDecimal, Long, Long, String, LocalTime, Short, BigDecimal, Long, Long, Integer, Long, String, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<BigDecimal, Long, Long, String, LocalTime, Short, BigDecimal, Long, Long, Integer, Long, String, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<BigDecimal> field1() {
        return PageHasAnswer.PAGE_HAS_ANSWER.IDPAGE;
    }

    @Override
    public Field<Long> field2() {
        return PageHasAnswer.PAGE_HAS_ANSWER.IDQUESTION;
    }

    @Override
    public Field<Long> field3() {
        return PageHasAnswer.PAGE_HAS_ANSWER.IDANSWER;
    }

    @Override
    public Field<String> field4() {
        return PageHasAnswer.PAGE_HAS_ANSWER.TEXT;
    }

    @Override
    public Field<LocalTime> field5() {
        return PageHasAnswer.PAGE_HAS_ANSWER.TIMESTAMP;
    }

    @Override
    public Field<Short> field6() {
        return PageHasAnswer.PAGE_HAS_ANSWER.ABORTED;
    }

    @Override
    public Field<BigDecimal> field7() {
        return PageHasAnswer.PAGE_HAS_ANSWER.GROUP_KEY;
    }

    @Override
    public Field<Long> field8() {
        return PageHasAnswer.PAGE_HAS_ANSWER.IDUSERAGENT;
    }

    @Override
    public Field<Long> field9() {
        return PageHasAnswer.PAGE_HAS_ANSWER.IDPAGE_NAME;
    }

    @Override
    public Field<Integer> field10() {
        return PageHasAnswer.PAGE_HAS_ANSWER.DURATION;
    }

    @Override
    public Field<Long> field11() {
        return PageHasAnswer.PAGE_HAS_ANSWER.IDQUESTIONNAIRE;
    }

    @Override
    public Field<String> field12() {
        return PageHasAnswer.PAGE_HAS_ANSWER.RANDOM_GROUP;
    }

    @Override
    public Field<String> field13() {
        return PageHasAnswer.PAGE_HAS_ANSWER.IDRESPONSE;
    }

    @Override
    public BigDecimal component1() {
        return getIdpage();
    }

    @Override
    public Long component2() {
        return getIdquestion();
    }

    @Override
    public Long component3() {
        return getIdanswer();
    }

    @Override
    public String component4() {
        return getText();
    }

    @Override
    public LocalTime component5() {
        return getTimestamp();
    }

    @Override
    public Short component6() {
        return getAborted();
    }

    @Override
    public BigDecimal component7() {
        return getGroupKey();
    }

    @Override
    public Long component8() {
        return getIduseragent();
    }

    @Override
    public Long component9() {
        return getIdpageName();
    }

    @Override
    public Integer component10() {
        return getDuration();
    }

    @Override
    public Long component11() {
        return getIdquestionnaire();
    }

    @Override
    public String component12() {
        return getRandomGroup();
    }

    @Override
    public String component13() {
        return getIdresponse();
    }

    @Override
    public BigDecimal value1() {
        return getIdpage();
    }

    @Override
    public Long value2() {
        return getIdquestion();
    }

    @Override
    public Long value3() {
        return getIdanswer();
    }

    @Override
    public String value4() {
        return getText();
    }

    @Override
    public LocalTime value5() {
        return getTimestamp();
    }

    @Override
    public Short value6() {
        return getAborted();
    }

    @Override
    public BigDecimal value7() {
        return getGroupKey();
    }

    @Override
    public Long value8() {
        return getIduseragent();
    }

    @Override
    public Long value9() {
        return getIdpageName();
    }

    @Override
    public Integer value10() {
        return getDuration();
    }

    @Override
    public Long value11() {
        return getIdquestionnaire();
    }

    @Override
    public String value12() {
        return getRandomGroup();
    }

    @Override
    public String value13() {
        return getIdresponse();
    }

    @Override
    public PageHasAnswerRecord value1(BigDecimal value) {
        setIdpage(value);
        return this;
    }

    @Override
    public PageHasAnswerRecord value2(Long value) {
        setIdquestion(value);
        return this;
    }

    @Override
    public PageHasAnswerRecord value3(Long value) {
        setIdanswer(value);
        return this;
    }

    @Override
    public PageHasAnswerRecord value4(String value) {
        setText(value);
        return this;
    }

    @Override
    public PageHasAnswerRecord value5(LocalTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public PageHasAnswerRecord value6(Short value) {
        setAborted(value);
        return this;
    }

    @Override
    public PageHasAnswerRecord value7(BigDecimal value) {
        setGroupKey(value);
        return this;
    }

    @Override
    public PageHasAnswerRecord value8(Long value) {
        setIduseragent(value);
        return this;
    }

    @Override
    public PageHasAnswerRecord value9(Long value) {
        setIdpageName(value);
        return this;
    }

    @Override
    public PageHasAnswerRecord value10(Integer value) {
        setDuration(value);
        return this;
    }

    @Override
    public PageHasAnswerRecord value11(Long value) {
        setIdquestionnaire(value);
        return this;
    }

    @Override
    public PageHasAnswerRecord value12(String value) {
        setRandomGroup(value);
        return this;
    }

    @Override
    public PageHasAnswerRecord value13(String value) {
        setIdresponse(value);
        return this;
    }

    @Override
    public PageHasAnswerRecord values(BigDecimal value1, Long value2, Long value3, String value4, LocalTime value5, Short value6, BigDecimal value7, Long value8, Long value9, Integer value10, Long value11, String value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PageHasAnswerRecord
     */
    public PageHasAnswerRecord() {
        super(PageHasAnswer.PAGE_HAS_ANSWER);
    }

    /**
     * Create a detached, initialised PageHasAnswerRecord
     */
    public PageHasAnswerRecord(BigDecimal idpage, Long idquestion, Long idanswer, String text, LocalTime timestamp, Short aborted, BigDecimal groupKey, Long iduseragent, Long idpageName, Integer duration, Long idquestionnaire, String randomGroup, String idresponse) {
        super(PageHasAnswer.PAGE_HAS_ANSWER);

        setIdpage(idpage);
        setIdquestion(idquestion);
        setIdanswer(idanswer);
        setText(text);
        setTimestamp(timestamp);
        setAborted(aborted);
        setGroupKey(groupKey);
        setIduseragent(iduseragent);
        setIdpageName(idpageName);
        setDuration(duration);
        setIdquestionnaire(idquestionnaire);
        setRandomGroup(randomGroup);
        setIdresponse(idresponse);
    }
}
