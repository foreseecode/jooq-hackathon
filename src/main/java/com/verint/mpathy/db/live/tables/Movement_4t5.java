/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.Movement_4t5Record;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Movement_4t5 extends TableImpl<Movement_4t5Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live.movement_4t5</code>
     */
    public static final Movement_4t5 MOVEMENT_4T5 = new Movement_4t5();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Movement_4t5Record> getRecordType() {
        return Movement_4t5Record.class;
    }

    /**
     * The column <code>live.movement_4t5.idsite</code>. Technical foreign key
     * to the "site" table and a foreign key to "site".
     */
    public final TableField<Movement_4t5Record, Integer> IDSITE = createField(DSL.name("idsite"), SQLDataType.INTEGER.nullable(false), this, "Technical foreign key to the \"site\" table and a foreign key to \"site\".");

    /**
     * The column <code>live.movement_4t5.idpage</code>. Technical foreign key
     * to the "page" table and a foreign key to "page".
     */
    public final TableField<Movement_4t5Record, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC.nullable(false), this, "Technical foreign key to the \"page\" table and a foreign key to \"page\".");

    /**
     * The column <code>live.movement_4t5.move</code>. Accumulated moves from
     * "map_move between 4 and 5 seconds.
     */
    public final TableField<Movement_4t5Record, String> MOVE = createField(DSL.name("move"), SQLDataType.CLOB, this, "Accumulated moves from \"map_move between 4 and 5 seconds.");

    private Movement_4t5(Name alias, Table<Movement_4t5Record> aliased) {
        this(alias, aliased, null);
    }

    private Movement_4t5(Name alias, Table<Movement_4t5Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>live.movement_4t5</code> table reference
     */
    public Movement_4t5(String alias) {
        this(DSL.name(alias), MOVEMENT_4T5);
    }

    /**
     * Create an aliased <code>live.movement_4t5</code> table reference
     */
    public Movement_4t5(Name alias) {
        this(alias, MOVEMENT_4T5);
    }

    /**
     * Create a <code>live.movement_4t5</code> table reference
     */
    public Movement_4t5() {
        this(DSL.name("movement_4t5"), null);
    }

    public <O extends Record> Movement_4t5(Table<O> child, ForeignKey<O, Movement_4t5Record> key) {
        super(child, key, MOVEMENT_4T5);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public Movement_4t5 as(String alias) {
        return new Movement_4t5(DSL.name(alias), this);
    }

    @Override
    public Movement_4t5 as(Name alias) {
        return new Movement_4t5(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Movement_4t5 rename(String name) {
        return new Movement_4t5(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Movement_4t5 rename(Name name) {
        return new Movement_4t5(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, BigDecimal, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
