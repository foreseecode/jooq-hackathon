/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.StruggleIndicatorScrollDirectionChangeCountRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Indicator definition: The customer is experiencing struggle as he shows high
 * scroll activity in the form of many direction changes.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StruggleIndicatorScrollDirectionChangeCount extends TableImpl<StruggleIndicatorScrollDirectionChangeCountRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>live.struggle_indicator_scroll_direction_change_count</code>
     */
    public static final StruggleIndicatorScrollDirectionChangeCount STRUGGLE_INDICATOR_SCROLL_DIRECTION_CHANGE_COUNT = new StruggleIndicatorScrollDirectionChangeCount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StruggleIndicatorScrollDirectionChangeCountRecord> getRecordType() {
        return StruggleIndicatorScrollDirectionChangeCountRecord.class;
    }

    /**
     * The column
     * <code>live.struggle_indicator_scroll_direction_change_count.idstruggle_indicator_scroll_direction_change_count</code>.
     * The primary key for identifying rows of this table.
     */
    public final TableField<StruggleIndicatorScrollDirectionChangeCountRecord, Long> IDSTRUGGLE_INDICATOR_SCROLL_DIRECTION_CHANGE_COUNT = createField(DSL.name("idstruggle_indicator_scroll_direction_change_count"), SQLDataType.BIGINT.nullable(false).identity(true), this, "The primary key for identifying rows of this table.");

    /**
     * The column
     * <code>live.struggle_indicator_scroll_direction_change_count.idpage</code>.
     * The FK for reference to the ID column of the "page" table.
     */
    public final TableField<StruggleIndicatorScrollDirectionChangeCountRecord, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC, this, "The FK for reference to the ID column of the \"page\" table.");

    /**
     * The column
     * <code>live.struggle_indicator_scroll_direction_change_count.value</code>.
     * The amount of times, a scroll direction change happened in the page
     * associated with "idpage" within a specific time window.
     */
    public final TableField<StruggleIndicatorScrollDirectionChangeCountRecord, Long> VALUE = createField(DSL.name("value"), SQLDataType.BIGINT, this, "The amount of times, a scroll direction change happened in the page associated with \"idpage\" within a specific time window.");

    /**
     * The column
     * <code>live.struggle_indicator_scroll_direction_change_count.relative_time</code>.
     */
    public final TableField<StruggleIndicatorScrollDirectionChangeCountRecord, Long> RELATIVE_TIME = createField(DSL.name("relative_time"), SQLDataType.BIGINT, this, "");

    private StruggleIndicatorScrollDirectionChangeCount(Name alias, Table<StruggleIndicatorScrollDirectionChangeCountRecord> aliased) {
        this(alias, aliased, null);
    }

    private StruggleIndicatorScrollDirectionChangeCount(Name alias, Table<StruggleIndicatorScrollDirectionChangeCountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Indicator definition: The customer is experiencing struggle as he shows high scroll activity in the form of many direction changes."), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>live.struggle_indicator_scroll_direction_change_count</code> table
     * reference
     */
    public StruggleIndicatorScrollDirectionChangeCount(String alias) {
        this(DSL.name(alias), STRUGGLE_INDICATOR_SCROLL_DIRECTION_CHANGE_COUNT);
    }

    /**
     * Create an aliased
     * <code>live.struggle_indicator_scroll_direction_change_count</code> table
     * reference
     */
    public StruggleIndicatorScrollDirectionChangeCount(Name alias) {
        this(alias, STRUGGLE_INDICATOR_SCROLL_DIRECTION_CHANGE_COUNT);
    }

    /**
     * Create a
     * <code>live.struggle_indicator_scroll_direction_change_count</code> table
     * reference
     */
    public StruggleIndicatorScrollDirectionChangeCount() {
        this(DSL.name("struggle_indicator_scroll_direction_change_count"), null);
    }

    public <O extends Record> StruggleIndicatorScrollDirectionChangeCount(Table<O> child, ForeignKey<O, StruggleIndicatorScrollDirectionChangeCountRecord> key) {
        super(child, key, STRUGGLE_INDICATOR_SCROLL_DIRECTION_CHANGE_COUNT);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public Identity<StruggleIndicatorScrollDirectionChangeCountRecord, Long> getIdentity() {
        return (Identity<StruggleIndicatorScrollDirectionChangeCountRecord, Long>) super.getIdentity();
    }

    @Override
    public StruggleIndicatorScrollDirectionChangeCount as(String alias) {
        return new StruggleIndicatorScrollDirectionChangeCount(DSL.name(alias), this);
    }

    @Override
    public StruggleIndicatorScrollDirectionChangeCount as(Name alias) {
        return new StruggleIndicatorScrollDirectionChangeCount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StruggleIndicatorScrollDirectionChangeCount rename(String name) {
        return new StruggleIndicatorScrollDirectionChangeCount(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StruggleIndicatorScrollDirectionChangeCount rename(Name name) {
        return new StruggleIndicatorScrollDirectionChangeCount(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, BigDecimal, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
