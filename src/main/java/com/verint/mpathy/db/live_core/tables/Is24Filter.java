/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables;


import com.verint.mpathy.db.live_core.LiveCore;
import com.verint.mpathy.db.live_core.tables.records.Is24FilterRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Is24Filter extends TableImpl<Is24FilterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live_core.is24_filter</code>
     */
    public static final Is24Filter IS24_FILTER = new Is24Filter();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Is24FilterRecord> getRecordType() {
        return Is24FilterRecord.class;
    }

    /**
     * The column <code>live_core.is24_filter.idfilter</code>.
     */
    public final TableField<Is24FilterRecord, BigDecimal> IDFILTER = createField(DSL.name("idfilter"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.is24_filter.name</code>.
     */
    public final TableField<Is24FilterRecord, String> NAME = createField(DSL.name("name"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live_core.is24_filter.scope</code>.
     */
    public final TableField<Is24FilterRecord, String> SCOPE = createField(DSL.name("scope"), SQLDataType.CLOB, this, "");

    private Is24Filter(Name alias, Table<Is24FilterRecord> aliased) {
        this(alias, aliased, null);
    }

    private Is24Filter(Name alias, Table<Is24FilterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Easy access to underlying table in other schemas."), TableOptions.view("create view \"is24_filter\" as  SELECT is24_filter.idfilter,\n    is24_filter.name,\n    is24_filter.scope\n   FROM live.is24_filter;"));
    }

    /**
     * Create an aliased <code>live_core.is24_filter</code> table reference
     */
    public Is24Filter(String alias) {
        this(DSL.name(alias), IS24_FILTER);
    }

    /**
     * Create an aliased <code>live_core.is24_filter</code> table reference
     */
    public Is24Filter(Name alias) {
        this(alias, IS24_FILTER);
    }

    /**
     * Create a <code>live_core.is24_filter</code> table reference
     */
    public Is24Filter() {
        this(DSL.name("is24_filter"), null);
    }

    public <O extends Record> Is24Filter(Table<O> child, ForeignKey<O, Is24FilterRecord> key) {
        super(child, key, IS24_FILTER);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : LiveCore.LIVE_CORE;
    }

    @Override
    public Is24Filter as(String alias) {
        return new Is24Filter(DSL.name(alias), this);
    }

    @Override
    public Is24Filter as(Name alias) {
        return new Is24Filter(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Is24Filter rename(String name) {
        return new Is24Filter(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Is24Filter rename(Name name) {
        return new Is24Filter(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<BigDecimal, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
