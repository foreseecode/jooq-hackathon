/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables.records;


import com.verint.mpathy.db.live.tables.QuestionnaireAlert;

import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuestionnaireAlertRecord extends TableRecordImpl<QuestionnaireAlertRecord> implements Record11<Long, Long, Long, Long, Boolean, Integer, String, String, String, String, LocalTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live.questionnaire_alert.idquestionnaire_alert</code>.
     */
    public void setIdquestionnaireAlert(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>live.questionnaire_alert.idquestionnaire_alert</code>.
     */
    public Long getIdquestionnaireAlert() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>live.questionnaire_alert.idquestionnaire</code>.
     * Reference ident to the questionnaire.
     */
    public void setIdquestionnaire(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>live.questionnaire_alert.idquestionnaire</code>.
     * Reference ident to the questionnaire.
     */
    public Long getIdquestionnaire() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>live.questionnaire_alert.idquestion</code>.
     */
    public void setIdquestion(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>live.questionnaire_alert.idquestion</code>.
     */
    public Long getIdquestion() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>live.questionnaire_alert.idanswer</code>.
     */
    public void setIdanswer(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>live.questionnaire_alert.idanswer</code>.
     */
    public Long getIdanswer() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>live.questionnaire_alert.textinput</code>. Is the text
     * input necessary or required?
     */
    public void setTextinput(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>live.questionnaire_alert.textinput</code>. Is the text
     * input necessary or required?
     */
    public Boolean getTextinput() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>live.questionnaire_alert.cronminutes</code>. How often
     * should be checked? every x minutes
     */
    public void setCronminutes(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>live.questionnaire_alert.cronminutes</code>. How often
     * should be checked? every x minutes
     */
    public Integer getCronminutes() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>live.questionnaire_alert.template</code>.
     */
    public void setTemplate(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>live.questionnaire_alert.template</code>.
     */
    public String getTemplate() {
        return (String) get(6);
    }

    /**
     * Setter for <code>live.questionnaire_alert.subject</code>.
     */
    public void setSubject(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>live.questionnaire_alert.subject</code>.
     */
    public String getSubject() {
        return (String) get(7);
    }

    /**
     * Setter for <code>live.questionnaire_alert.email_list</code>.
     */
    public void setEmailList(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>live.questionnaire_alert.email_list</code>.
     */
    public String getEmailList() {
        return (String) get(8);
    }

    /**
     * Setter for <code>live.questionnaire_alert.email_bcc_list</code>.
     */
    public void setEmailBccList(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>live.questionnaire_alert.email_bcc_list</code>.
     */
    public String getEmailBccList() {
        return (String) get(9);
    }

    /**
     * Setter for <code>live.questionnaire_alert.last_timestamp</code>.
     */
    public void setLastTimestamp(LocalTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>live.questionnaire_alert.last_timestamp</code>.
     */
    public LocalTime getLastTimestamp() {
        return (LocalTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Long, Long, Long, Boolean, Integer, String, String, String, String, LocalTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, Long, Long, Long, Boolean, Integer, String, String, String, String, LocalTime> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return QuestionnaireAlert.QUESTIONNAIRE_ALERT.IDQUESTIONNAIRE_ALERT;
    }

    @Override
    public Field<Long> field2() {
        return QuestionnaireAlert.QUESTIONNAIRE_ALERT.IDQUESTIONNAIRE;
    }

    @Override
    public Field<Long> field3() {
        return QuestionnaireAlert.QUESTIONNAIRE_ALERT.IDQUESTION;
    }

    @Override
    public Field<Long> field4() {
        return QuestionnaireAlert.QUESTIONNAIRE_ALERT.IDANSWER;
    }

    @Override
    public Field<Boolean> field5() {
        return QuestionnaireAlert.QUESTIONNAIRE_ALERT.TEXTINPUT;
    }

    @Override
    public Field<Integer> field6() {
        return QuestionnaireAlert.QUESTIONNAIRE_ALERT.CRONMINUTES;
    }

    @Override
    public Field<String> field7() {
        return QuestionnaireAlert.QUESTIONNAIRE_ALERT.TEMPLATE;
    }

    @Override
    public Field<String> field8() {
        return QuestionnaireAlert.QUESTIONNAIRE_ALERT.SUBJECT;
    }

    @Override
    public Field<String> field9() {
        return QuestionnaireAlert.QUESTIONNAIRE_ALERT.EMAIL_LIST;
    }

    @Override
    public Field<String> field10() {
        return QuestionnaireAlert.QUESTIONNAIRE_ALERT.EMAIL_BCC_LIST;
    }

    @Override
    public Field<LocalTime> field11() {
        return QuestionnaireAlert.QUESTIONNAIRE_ALERT.LAST_TIMESTAMP;
    }

    @Override
    public Long component1() {
        return getIdquestionnaireAlert();
    }

    @Override
    public Long component2() {
        return getIdquestionnaire();
    }

    @Override
    public Long component3() {
        return getIdquestion();
    }

    @Override
    public Long component4() {
        return getIdanswer();
    }

    @Override
    public Boolean component5() {
        return getTextinput();
    }

    @Override
    public Integer component6() {
        return getCronminutes();
    }

    @Override
    public String component7() {
        return getTemplate();
    }

    @Override
    public String component8() {
        return getSubject();
    }

    @Override
    public String component9() {
        return getEmailList();
    }

    @Override
    public String component10() {
        return getEmailBccList();
    }

    @Override
    public LocalTime component11() {
        return getLastTimestamp();
    }

    @Override
    public Long value1() {
        return getIdquestionnaireAlert();
    }

    @Override
    public Long value2() {
        return getIdquestionnaire();
    }

    @Override
    public Long value3() {
        return getIdquestion();
    }

    @Override
    public Long value4() {
        return getIdanswer();
    }

    @Override
    public Boolean value5() {
        return getTextinput();
    }

    @Override
    public Integer value6() {
        return getCronminutes();
    }

    @Override
    public String value7() {
        return getTemplate();
    }

    @Override
    public String value8() {
        return getSubject();
    }

    @Override
    public String value9() {
        return getEmailList();
    }

    @Override
    public String value10() {
        return getEmailBccList();
    }

    @Override
    public LocalTime value11() {
        return getLastTimestamp();
    }

    @Override
    public QuestionnaireAlertRecord value1(Long value) {
        setIdquestionnaireAlert(value);
        return this;
    }

    @Override
    public QuestionnaireAlertRecord value2(Long value) {
        setIdquestionnaire(value);
        return this;
    }

    @Override
    public QuestionnaireAlertRecord value3(Long value) {
        setIdquestion(value);
        return this;
    }

    @Override
    public QuestionnaireAlertRecord value4(Long value) {
        setIdanswer(value);
        return this;
    }

    @Override
    public QuestionnaireAlertRecord value5(Boolean value) {
        setTextinput(value);
        return this;
    }

    @Override
    public QuestionnaireAlertRecord value6(Integer value) {
        setCronminutes(value);
        return this;
    }

    @Override
    public QuestionnaireAlertRecord value7(String value) {
        setTemplate(value);
        return this;
    }

    @Override
    public QuestionnaireAlertRecord value8(String value) {
        setSubject(value);
        return this;
    }

    @Override
    public QuestionnaireAlertRecord value9(String value) {
        setEmailList(value);
        return this;
    }

    @Override
    public QuestionnaireAlertRecord value10(String value) {
        setEmailBccList(value);
        return this;
    }

    @Override
    public QuestionnaireAlertRecord value11(LocalTime value) {
        setLastTimestamp(value);
        return this;
    }

    @Override
    public QuestionnaireAlertRecord values(Long value1, Long value2, Long value3, Long value4, Boolean value5, Integer value6, String value7, String value8, String value9, String value10, LocalTime value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuestionnaireAlertRecord
     */
    public QuestionnaireAlertRecord() {
        super(QuestionnaireAlert.QUESTIONNAIRE_ALERT);
    }

    /**
     * Create a detached, initialised QuestionnaireAlertRecord
     */
    public QuestionnaireAlertRecord(Long idquestionnaireAlert, Long idquestionnaire, Long idquestion, Long idanswer, Boolean textinput, Integer cronminutes, String template, String subject, String emailList, String emailBccList, LocalTime lastTimestamp) {
        super(QuestionnaireAlert.QUESTIONNAIRE_ALERT);

        setIdquestionnaireAlert(idquestionnaireAlert);
        setIdquestionnaire(idquestionnaire);
        setIdquestion(idquestion);
        setIdanswer(idanswer);
        setTextinput(textinput);
        setCronminutes(cronminutes);
        setTemplate(template);
        setSubject(subject);
        setEmailList(emailList);
        setEmailBccList(emailBccList);
        setLastTimestamp(lastTimestamp);
    }
}
