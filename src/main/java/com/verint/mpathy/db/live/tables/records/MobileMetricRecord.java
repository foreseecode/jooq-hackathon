/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables.records;


import com.verint.mpathy.db.live.tables.MobileMetric;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * The table contains all information about dynamic information of a mobile
 * device.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MobileMetricRecord extends TableRecordImpl<MobileMetricRecord> implements Record4<Long, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live.mobile_metric.idmobile_metric</code>. Primary key.
     */
    public void setIdmobileMetric(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>live.mobile_metric.idmobile_metric</code>. Primary key.
     */
    public Long getIdmobileMetric() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>live.mobile_metric.width</code>. Contains the display
     * width of mobile device.
     */
    public void setWidth(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>live.mobile_metric.width</code>. Contains the display
     * width of mobile device.
     */
    public Integer getWidth() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>live.mobile_metric.height</code>. Contains the display
     * height of mobile device.
     */
    public void setHeight(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>live.mobile_metric.height</code>. Contains the display
     * height of mobile device.
     */
    public Integer getHeight() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>live.mobile_metric.heap_size</code>. Contains the memory
     * heap size with of mobile device.
     */
    public void setHeapSize(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>live.mobile_metric.heap_size</code>. Contains the memory
     * heap size with of mobile device.
     */
    public Integer getHeapSize() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Integer, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Integer, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return MobileMetric.MOBILE_METRIC.IDMOBILE_METRIC;
    }

    @Override
    public Field<Integer> field2() {
        return MobileMetric.MOBILE_METRIC.WIDTH;
    }

    @Override
    public Field<Integer> field3() {
        return MobileMetric.MOBILE_METRIC.HEIGHT;
    }

    @Override
    public Field<Integer> field4() {
        return MobileMetric.MOBILE_METRIC.HEAP_SIZE;
    }

    @Override
    public Long component1() {
        return getIdmobileMetric();
    }

    @Override
    public Integer component2() {
        return getWidth();
    }

    @Override
    public Integer component3() {
        return getHeight();
    }

    @Override
    public Integer component4() {
        return getHeapSize();
    }

    @Override
    public Long value1() {
        return getIdmobileMetric();
    }

    @Override
    public Integer value2() {
        return getWidth();
    }

    @Override
    public Integer value3() {
        return getHeight();
    }

    @Override
    public Integer value4() {
        return getHeapSize();
    }

    @Override
    public MobileMetricRecord value1(Long value) {
        setIdmobileMetric(value);
        return this;
    }

    @Override
    public MobileMetricRecord value2(Integer value) {
        setWidth(value);
        return this;
    }

    @Override
    public MobileMetricRecord value3(Integer value) {
        setHeight(value);
        return this;
    }

    @Override
    public MobileMetricRecord value4(Integer value) {
        setHeapSize(value);
        return this;
    }

    @Override
    public MobileMetricRecord values(Long value1, Integer value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MobileMetricRecord
     */
    public MobileMetricRecord() {
        super(MobileMetric.MOBILE_METRIC);
    }

    /**
     * Create a detached, initialised MobileMetricRecord
     */
    public MobileMetricRecord(Long idmobileMetric, Integer width, Integer height, Integer heapSize) {
        super(MobileMetric.MOBILE_METRIC);

        setIdmobileMetric(idmobileMetric);
        setWidth(width);
        setHeight(height);
        setHeapSize(heapSize);
    }
}
