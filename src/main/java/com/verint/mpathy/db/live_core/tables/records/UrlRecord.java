/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables.records;


import com.verint.mpathy.db.live_core.tables.Url;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UrlRecord extends TableRecordImpl<UrlRecord> implements Record4<Long, Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live_core.url.idurl</code>.
     */
    public void setIdurl(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>live_core.url.idurl</code>.
     */
    public Long getIdurl() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>live_core.url.idsite</code>.
     */
    public void setIdsite(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_core.url.idsite</code>.
     */
    public Integer getIdsite() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>live_core.url.url</code>.
     */
    public void setUrl(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>live_core.url.url</code>.
     */
    public String getUrl() {
        return (String) get(2);
    }

    /**
     * Setter for <code>live_core.url.hashvalue</code>.
     */
    public void setHashvalue(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>live_core.url.hashvalue</code>.
     */
    public String getHashvalue() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Integer, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Url.URL.IDURL;
    }

    @Override
    public Field<Integer> field2() {
        return Url.URL.IDSITE;
    }

    @Override
    public Field<String> field3() {
        return Url.URL.URL_;
    }

    @Override
    public Field<String> field4() {
        return Url.URL.HASHVALUE;
    }

    @Override
    public Long component1() {
        return getIdurl();
    }

    @Override
    public Integer component2() {
        return getIdsite();
    }

    @Override
    public String component3() {
        return getUrl();
    }

    @Override
    public String component4() {
        return getHashvalue();
    }

    @Override
    public Long value1() {
        return getIdurl();
    }

    @Override
    public Integer value2() {
        return getIdsite();
    }

    @Override
    public String value3() {
        return getUrl();
    }

    @Override
    public String value4() {
        return getHashvalue();
    }

    @Override
    public UrlRecord value1(Long value) {
        setIdurl(value);
        return this;
    }

    @Override
    public UrlRecord value2(Integer value) {
        setIdsite(value);
        return this;
    }

    @Override
    public UrlRecord value3(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public UrlRecord value4(String value) {
        setHashvalue(value);
        return this;
    }

    @Override
    public UrlRecord values(Long value1, Integer value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UrlRecord
     */
    public UrlRecord() {
        super(Url.URL);
    }

    /**
     * Create a detached, initialised UrlRecord
     */
    public UrlRecord(Long idurl, Integer idsite, String url, String hashvalue) {
        super(Url.URL);

        setIdurl(idurl);
        setIdsite(idsite);
        setUrl(url);
        setHashvalue(hashvalue);
    }
}
