/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables.records;


import com.verint.mpathy.db.live.tables.StruggleIndicatorFormFieldAbandonment;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * Indicator definition: A user has entered at least the minimum amount of
 * characters defined within the settings into a funnel form field, but did not
 * submit the form.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StruggleIndicatorFormFieldAbandonmentRecord extends TableRecordImpl<StruggleIndicatorFormFieldAbandonmentRecord> implements Record4<Long, BigDecimal, Short, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>live.struggle_indicator_form_field_abandonment.idstruggle_indicator_form_field_abandonment</code>.
     * The primary key for identifying rows of this table.
     */
    public void setIdstruggleIndicatorFormFieldAbandonment(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>live.struggle_indicator_form_field_abandonment.idstruggle_indicator_form_field_abandonment</code>.
     * The primary key for identifying rows of this table.
     */
    public Long getIdstruggleIndicatorFormFieldAbandonment() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>live.struggle_indicator_form_field_abandonment.idpage</code>. The
     * FK for reference to the ID column of the "page" table.
     */
    public void setIdpage(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>live.struggle_indicator_form_field_abandonment.idpage</code>. The
     * FK for reference to the ID column of the "page" table.
     */
    public BigDecimal getIdpage() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for
     * <code>live.struggle_indicator_form_field_abandonment.value</code>. True,
     * i.e. 1, if a user has entered the minimum required number of characters
     * defined within the struggle settings into a funnel form field and if has
     * not submitted the form afterwards.
     */
    public void setValue(Short value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>live.struggle_indicator_form_field_abandonment.value</code>. True,
     * i.e. 1, if a user has entered the minimum required number of characters
     * defined within the struggle settings into a funnel form field and if has
     * not submitted the form afterwards.
     */
    public Short getValue() {
        return (Short) get(2);
    }

    /**
     * Setter for
     * <code>live.struggle_indicator_form_field_abandonment.idtaskitem</code>.
     * The FK for reference to the ID column of the "task_item" table.
     */
    public void setIdtaskitem(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>live.struggle_indicator_form_field_abandonment.idtaskitem</code>.
     * The FK for reference to the ID column of the "task_item" table.
     */
    public BigDecimal getIdtaskitem() {
        return (BigDecimal) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, BigDecimal, Short, BigDecimal> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, BigDecimal, Short, BigDecimal> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return StruggleIndicatorFormFieldAbandonment.STRUGGLE_INDICATOR_FORM_FIELD_ABANDONMENT.IDSTRUGGLE_INDICATOR_FORM_FIELD_ABANDONMENT;
    }

    @Override
    public Field<BigDecimal> field2() {
        return StruggleIndicatorFormFieldAbandonment.STRUGGLE_INDICATOR_FORM_FIELD_ABANDONMENT.IDPAGE;
    }

    @Override
    public Field<Short> field3() {
        return StruggleIndicatorFormFieldAbandonment.STRUGGLE_INDICATOR_FORM_FIELD_ABANDONMENT.VALUE;
    }

    @Override
    public Field<BigDecimal> field4() {
        return StruggleIndicatorFormFieldAbandonment.STRUGGLE_INDICATOR_FORM_FIELD_ABANDONMENT.IDTASKITEM;
    }

    @Override
    public Long component1() {
        return getIdstruggleIndicatorFormFieldAbandonment();
    }

    @Override
    public BigDecimal component2() {
        return getIdpage();
    }

    @Override
    public Short component3() {
        return getValue();
    }

    @Override
    public BigDecimal component4() {
        return getIdtaskitem();
    }

    @Override
    public Long value1() {
        return getIdstruggleIndicatorFormFieldAbandonment();
    }

    @Override
    public BigDecimal value2() {
        return getIdpage();
    }

    @Override
    public Short value3() {
        return getValue();
    }

    @Override
    public BigDecimal value4() {
        return getIdtaskitem();
    }

    @Override
    public StruggleIndicatorFormFieldAbandonmentRecord value1(Long value) {
        setIdstruggleIndicatorFormFieldAbandonment(value);
        return this;
    }

    @Override
    public StruggleIndicatorFormFieldAbandonmentRecord value2(BigDecimal value) {
        setIdpage(value);
        return this;
    }

    @Override
    public StruggleIndicatorFormFieldAbandonmentRecord value3(Short value) {
        setValue(value);
        return this;
    }

    @Override
    public StruggleIndicatorFormFieldAbandonmentRecord value4(BigDecimal value) {
        setIdtaskitem(value);
        return this;
    }

    @Override
    public StruggleIndicatorFormFieldAbandonmentRecord values(Long value1, BigDecimal value2, Short value3, BigDecimal value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StruggleIndicatorFormFieldAbandonmentRecord
     */
    public StruggleIndicatorFormFieldAbandonmentRecord() {
        super(StruggleIndicatorFormFieldAbandonment.STRUGGLE_INDICATOR_FORM_FIELD_ABANDONMENT);
    }

    /**
     * Create a detached, initialised
     * StruggleIndicatorFormFieldAbandonmentRecord
     */
    public StruggleIndicatorFormFieldAbandonmentRecord(Long idstruggleIndicatorFormFieldAbandonment, BigDecimal idpage, Short value, BigDecimal idtaskitem) {
        super(StruggleIndicatorFormFieldAbandonment.STRUGGLE_INDICATOR_FORM_FIELD_ABANDONMENT);

        setIdstruggleIndicatorFormFieldAbandonment(idstruggleIndicatorFormFieldAbandonment);
        setIdpage(idpage);
        setValue(value);
        setIdtaskitem(idtaskitem);
    }
}
