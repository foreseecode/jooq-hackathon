/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables.records;


import com.verint.mpathy.db.live.tables.UserViewedDashboard;

import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserViewedDashboardRecord extends TableRecordImpl<UserViewedDashboardRecord> implements Record2<Long, LocalTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live.user_viewed_dashboard.iduser</code>.
     */
    public void setIduser(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>live.user_viewed_dashboard.iduser</code>.
     */
    public Long getIduser() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>live.user_viewed_dashboard.timestamp</code>.
     */
    public void setTimestamp(LocalTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>live.user_viewed_dashboard.timestamp</code>.
     */
    public LocalTime getTimestamp() {
        return (LocalTime) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, LocalTime> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, LocalTime> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserViewedDashboard.USER_VIEWED_DASHBOARD.IDUSER;
    }

    @Override
    public Field<LocalTime> field2() {
        return UserViewedDashboard.USER_VIEWED_DASHBOARD.TIMESTAMP;
    }

    @Override
    public Long component1() {
        return getIduser();
    }

    @Override
    public LocalTime component2() {
        return getTimestamp();
    }

    @Override
    public Long value1() {
        return getIduser();
    }

    @Override
    public LocalTime value2() {
        return getTimestamp();
    }

    @Override
    public UserViewedDashboardRecord value1(Long value) {
        setIduser(value);
        return this;
    }

    @Override
    public UserViewedDashboardRecord value2(LocalTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public UserViewedDashboardRecord values(Long value1, LocalTime value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserViewedDashboardRecord
     */
    public UserViewedDashboardRecord() {
        super(UserViewedDashboard.USER_VIEWED_DASHBOARD);
    }

    /**
     * Create a detached, initialised UserViewedDashboardRecord
     */
    public UserViewedDashboardRecord(Long iduser, LocalTime timestamp) {
        super(UserViewedDashboard.USER_VIEWED_DASHBOARD);

        setIduser(iduser);
        setTimestamp(timestamp);
    }
}
