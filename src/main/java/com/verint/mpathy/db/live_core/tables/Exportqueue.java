/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables;


import com.verint.mpathy.db.live_core.LiveCore;
import com.verint.mpathy.db.live_core.tables.records.ExportqueueRecord;

import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Exportqueue extends TableImpl<ExportqueueRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live_core.exportqueue</code>
     */
    public static final Exportqueue EXPORTQUEUE = new Exportqueue();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ExportqueueRecord> getRecordType() {
        return ExportqueueRecord.class;
    }

    /**
     * The column <code>live_core.exportqueue.idexport</code>.
     */
    public final TableField<ExportqueueRecord, Long> IDEXPORT = createField(DSL.name("idexport"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.exportqueue.idsite</code>.
     */
    public final TableField<ExportqueueRecord, Integer> IDSITE = createField(DSL.name("idsite"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>live_core.exportqueue.iduser</code>.
     */
    public final TableField<ExportqueueRecord, Long> IDUSER = createField(DSL.name("iduser"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.exportqueue.name_export</code>.
     */
    public final TableField<ExportqueueRecord, String> NAME_EXPORT = createField(DSL.name("name_export"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live_core.exportqueue.queue_state</code>.
     */
    public final TableField<ExportqueueRecord, Short> QUEUE_STATE = createField(DSL.name("queue_state"), SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>live_core.exportqueue.is_deleted</code>.
     */
    public final TableField<ExportqueueRecord, Boolean> IS_DELETED = createField(DSL.name("is_deleted"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>live_core.exportqueue.created_at</code>.
     */
    public final TableField<ExportqueueRecord, LocalTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALTIME(6), this, "");

    /**
     * The column <code>live_core.exportqueue.finished_at</code>.
     */
    public final TableField<ExportqueueRecord, LocalTime> FINISHED_AT = createField(DSL.name("finished_at"), SQLDataType.LOCALTIME(6), this, "");

    /**
     * The column <code>live_core.exportqueue.last_download_at</code>.
     */
    public final TableField<ExportqueueRecord, LocalTime> LAST_DOWNLOAD_AT = createField(DSL.name("last_download_at"), SQLDataType.LOCALTIME(6), this, "");

    /**
     * The column <code>live_core.exportqueue.expires_at</code>.
     */
    public final TableField<ExportqueueRecord, LocalTime> EXPIRES_AT = createField(DSL.name("expires_at"), SQLDataType.LOCALTIME(6), this, "");

    /**
     * The column <code>live_core.exportqueue.action</code>.
     */
    public final TableField<ExportqueueRecord, String> ACTION = createField(DSL.name("action"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live_core.exportqueue.details</code>.
     */
    public final TableField<ExportqueueRecord, String> DETAILS = createField(DSL.name("details"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live_core.exportqueue.category</code>.
     */
    public final TableField<ExportqueueRecord, String> CATEGORY = createField(DSL.name("category"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live_core.exportqueue.link</code>.
     */
    public final TableField<ExportqueueRecord, String> LINK = createField(DSL.name("link"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live_core.exportqueue.retries</code>.
     */
    public final TableField<ExportqueueRecord, Short> RETRIES = createField(DSL.name("retries"), SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>live_core.exportqueue.error_message</code>.
     */
    public final TableField<ExportqueueRecord, String> ERROR_MESSAGE = createField(DSL.name("error_message"), SQLDataType.CLOB, this, "");

    private Exportqueue(Name alias, Table<ExportqueueRecord> aliased) {
        this(alias, aliased, null);
    }

    private Exportqueue(Name alias, Table<ExportqueueRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Easy access to underlying table in other schemas."), TableOptions.view("create view \"exportqueue\" as  SELECT exportqueue.idexport,\n    exportqueue.idsite,\n    exportqueue.iduser,\n    exportqueue.name_export,\n    exportqueue.queue_state,\n    exportqueue.is_deleted,\n    exportqueue.created_at,\n    exportqueue.finished_at,\n    exportqueue.last_download_at,\n    exportqueue.expires_at,\n    exportqueue.action,\n    exportqueue.details,\n    exportqueue.category,\n    exportqueue.link,\n    exportqueue.retries,\n    exportqueue.error_message\n   FROM live.exportqueue;"));
    }

    /**
     * Create an aliased <code>live_core.exportqueue</code> table reference
     */
    public Exportqueue(String alias) {
        this(DSL.name(alias), EXPORTQUEUE);
    }

    /**
     * Create an aliased <code>live_core.exportqueue</code> table reference
     */
    public Exportqueue(Name alias) {
        this(alias, EXPORTQUEUE);
    }

    /**
     * Create a <code>live_core.exportqueue</code> table reference
     */
    public Exportqueue() {
        this(DSL.name("exportqueue"), null);
    }

    public <O extends Record> Exportqueue(Table<O> child, ForeignKey<O, ExportqueueRecord> key) {
        super(child, key, EXPORTQUEUE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : LiveCore.LIVE_CORE;
    }

    @Override
    public Exportqueue as(String alias) {
        return new Exportqueue(DSL.name(alias), this);
    }

    @Override
    public Exportqueue as(Name alias) {
        return new Exportqueue(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Exportqueue rename(String name) {
        return new Exportqueue(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Exportqueue rename(Name name) {
        return new Exportqueue(name, null);
    }

    // -------------------------------------------------------------------------
    // Row16 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row16<Long, Integer, Long, String, Short, Boolean, LocalTime, LocalTime, LocalTime, LocalTime, String, String, String, String, Short, String> fieldsRow() {
        return (Row16) super.fieldsRow();
    }
}
