/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables.records;


import com.verint.mpathy.db.live_core.tables.CassandraCleanlist;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CassandraCleanlistRecord extends TableRecordImpl<CassandraCleanlistRecord> implements Record2<BigDecimal, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live_core.cassandra_cleanlist.idsession</code>.
     */
    public void setIdsession(BigDecimal value) {
        set(0, value);
    }

    /**
     * Getter for <code>live_core.cassandra_cleanlist.idsession</code>.
     */
    public BigDecimal getIdsession() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>live_core.cassandra_cleanlist.idsite</code>.
     */
    public void setIdsite(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_core.cassandra_cleanlist.idsite</code>.
     */
    public Integer getIdsite() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<BigDecimal, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<BigDecimal, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<BigDecimal> field1() {
        return CassandraCleanlist.CASSANDRA_CLEANLIST.IDSESSION;
    }

    @Override
    public Field<Integer> field2() {
        return CassandraCleanlist.CASSANDRA_CLEANLIST.IDSITE;
    }

    @Override
    public BigDecimal component1() {
        return getIdsession();
    }

    @Override
    public Integer component2() {
        return getIdsite();
    }

    @Override
    public BigDecimal value1() {
        return getIdsession();
    }

    @Override
    public Integer value2() {
        return getIdsite();
    }

    @Override
    public CassandraCleanlistRecord value1(BigDecimal value) {
        setIdsession(value);
        return this;
    }

    @Override
    public CassandraCleanlistRecord value2(Integer value) {
        setIdsite(value);
        return this;
    }

    @Override
    public CassandraCleanlistRecord values(BigDecimal value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CassandraCleanlistRecord
     */
    public CassandraCleanlistRecord() {
        super(CassandraCleanlist.CASSANDRA_CLEANLIST);
    }

    /**
     * Create a detached, initialised CassandraCleanlistRecord
     */
    public CassandraCleanlistRecord(BigDecimal idsession, Integer idsite) {
        super(CassandraCleanlist.CASSANDRA_CLEANLIST);

        setIdsession(idsession);
        setIdsite(idsite);
    }
}
