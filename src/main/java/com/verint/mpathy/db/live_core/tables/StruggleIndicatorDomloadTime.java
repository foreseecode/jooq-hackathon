/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables;


import com.verint.mpathy.db.live_core.LiveCore;
import com.verint.mpathy.db.live_core.tables.records.StruggleIndicatorDomloadTimeRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StruggleIndicatorDomloadTime extends TableImpl<StruggleIndicatorDomloadTimeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>live_core.struggle_indicator_domload_time</code>
     */
    public static final StruggleIndicatorDomloadTime STRUGGLE_INDICATOR_DOMLOAD_TIME = new StruggleIndicatorDomloadTime();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StruggleIndicatorDomloadTimeRecord> getRecordType() {
        return StruggleIndicatorDomloadTimeRecord.class;
    }

    /**
     * The column
     * <code>live_core.struggle_indicator_domload_time.idstruggle_indicator_domload_time</code>.
     */
    public final TableField<StruggleIndicatorDomloadTimeRecord, Long> IDSTRUGGLE_INDICATOR_DOMLOAD_TIME = createField(DSL.name("idstruggle_indicator_domload_time"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.struggle_indicator_domload_time.idpage</code>.
     */
    public final TableField<StruggleIndicatorDomloadTimeRecord, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.struggle_indicator_domload_time.value</code>.
     */
    public final TableField<StruggleIndicatorDomloadTimeRecord, Long> VALUE = createField(DSL.name("value"), SQLDataType.BIGINT, this, "");

    private StruggleIndicatorDomloadTime(Name alias, Table<StruggleIndicatorDomloadTimeRecord> aliased) {
        this(alias, aliased, null);
    }

    private StruggleIndicatorDomloadTime(Name alias, Table<StruggleIndicatorDomloadTimeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Easy access to underlying table in other schemas."), TableOptions.view("create view \"struggle_indicator_domload_time\" as  SELECT struggle_indicator_domload_time.idstruggle_indicator_domload_time,\n    struggle_indicator_domload_time.idpage,\n    struggle_indicator_domload_time.value\n   FROM live.struggle_indicator_domload_time;"));
    }

    /**
     * Create an aliased <code>live_core.struggle_indicator_domload_time</code>
     * table reference
     */
    public StruggleIndicatorDomloadTime(String alias) {
        this(DSL.name(alias), STRUGGLE_INDICATOR_DOMLOAD_TIME);
    }

    /**
     * Create an aliased <code>live_core.struggle_indicator_domload_time</code>
     * table reference
     */
    public StruggleIndicatorDomloadTime(Name alias) {
        this(alias, STRUGGLE_INDICATOR_DOMLOAD_TIME);
    }

    /**
     * Create a <code>live_core.struggle_indicator_domload_time</code> table
     * reference
     */
    public StruggleIndicatorDomloadTime() {
        this(DSL.name("struggle_indicator_domload_time"), null);
    }

    public <O extends Record> StruggleIndicatorDomloadTime(Table<O> child, ForeignKey<O, StruggleIndicatorDomloadTimeRecord> key) {
        super(child, key, STRUGGLE_INDICATOR_DOMLOAD_TIME);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : LiveCore.LIVE_CORE;
    }

    @Override
    public StruggleIndicatorDomloadTime as(String alias) {
        return new StruggleIndicatorDomloadTime(DSL.name(alias), this);
    }

    @Override
    public StruggleIndicatorDomloadTime as(Name alias) {
        return new StruggleIndicatorDomloadTime(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StruggleIndicatorDomloadTime rename(String name) {
        return new StruggleIndicatorDomloadTime(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StruggleIndicatorDomloadTime rename(Name name) {
        return new StruggleIndicatorDomloadTime(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, BigDecimal, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
