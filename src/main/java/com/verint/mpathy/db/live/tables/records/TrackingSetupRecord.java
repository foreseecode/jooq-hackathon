/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables.records;


import com.verint.mpathy.db.live.tables.TrackingSetup;

import java.time.LocalTime;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrackingSetupRecord extends TableRecordImpl<TrackingSetupRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live.tracking_setup.idsite</code>.
     */
    public void setIdsite(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>live.tracking_setup.idsite</code>.
     */
    public Integer getIdsite() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>live.tracking_setup.active</code>.
     */
    public void setActive(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>live.tracking_setup.active</code>.
     */
    public Long getActive() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>live.tracking_setup.active_desktop</code>.
     */
    public void setActiveDesktop(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>live.tracking_setup.active_desktop</code>.
     */
    public Long getActiveDesktop() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>live.tracking_setup.active_phone</code>.
     */
    public void setActivePhone(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>live.tracking_setup.active_phone</code>.
     */
    public Long getActivePhone() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>live.tracking_setup.active_tablet</code>.
     */
    public void setActiveTablet(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>live.tracking_setup.active_tablet</code>.
     */
    public Long getActiveTablet() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>live.tracking_setup.sesslimit</code>.
     */
    public void setSesslimit(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>live.tracking_setup.sesslimit</code>.
     */
    public Long getSesslimit() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>live.tracking_setup.blockip</code>.
     */
    public void setBlockip(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>live.tracking_setup.blockip</code>.
     */
    public String getBlockip() {
        return (String) get(6);
    }

    /**
     * Setter for <code>live.tracking_setup.sesspercentage</code>.
     */
    public void setSesspercentage(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>live.tracking_setup.sesspercentage</code>.
     */
    public Double getSesspercentage() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>live.tracking_setup.sesspercentage_dev</code>.
     */
    public void setSesspercentageDev(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>live.tracking_setup.sesspercentage_dev</code>.
     */
    public Double getSesspercentageDev() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>live.tracking_setup.subdomainwildcard</code>.
     */
    public void setSubdomainwildcard(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>live.tracking_setup.subdomainwildcard</code>.
     */
    public Long getSubdomainwildcard() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>live.tracking_setup.ignoreurlfilter</code>.
     */
    public void setIgnoreurlfilter(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>live.tracking_setup.ignoreurlfilter</code>.
     */
    public Long getIgnoreurlfilter() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>live.tracking_setup.providerstate</code>.
     */
    public void setProviderstate(Short value) {
        set(11, value);
    }

    /**
     * Getter for <code>live.tracking_setup.providerstate</code>.
     */
    public Short getProviderstate() {
        return (Short) get(11);
    }

    /**
     * Setter for <code>live.tracking_setup.recstrategy</code>.
     */
    public void setRecstrategy(Short value) {
        set(12, value);
    }

    /**
     * Getter for <code>live.tracking_setup.recstrategy</code>.
     */
    public Short getRecstrategy() {
        return (Short) get(12);
    }

    /**
     * Setter for <code>live.tracking_setup.trackingstart_url</code>.
     */
    public void setTrackingstartUrl(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>live.tracking_setup.trackingstart_url</code>.
     */
    public String getTrackingstartUrl() {
        return (String) get(13);
    }

    /**
     * Setter for <code>live.tracking_setup.trackingstart_date</code>.
     */
    public void setTrackingstartDate(LocalTime value) {
        set(14, value);
    }

    /**
     * Getter for <code>live.tracking_setup.trackingstart_date</code>.
     */
    public LocalTime getTrackingstartDate() {
        return (LocalTime) get(14);
    }

    /**
     * Setter for <code>live.tracking_setup.trackingstop_date</code>.
     */
    public void setTrackingstopDate(LocalTime value) {
        set(15, value);
    }

    /**
     * Getter for <code>live.tracking_setup.trackingstop_date</code>.
     */
    public LocalTime getTrackingstopDate() {
        return (LocalTime) get(15);
    }

    /**
     * Setter for <code>live.tracking_setup.custom_code</code>.
     */
    public void setCustomCode(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>live.tracking_setup.custom_code</code>.
     */
    public String getCustomCode() {
        return (String) get(16);
    }

    /**
     * Setter for <code>live.tracking_setup.recprob_desktop</code>. Column for
     * the desktop tracking rate (see MPATHY-774).
     */
    public void setRecprobDesktop(Double value) {
        set(17, value);
    }

    /**
     * Getter for <code>live.tracking_setup.recprob_desktop</code>. Column for
     * the desktop tracking rate (see MPATHY-774).
     */
    public Double getRecprobDesktop() {
        return (Double) get(17);
    }

    /**
     * Setter for <code>live.tracking_setup.recprob_phone</code>. Column for the
     * phone tracking rate (see MPATHY-774).
     */
    public void setRecprobPhone(Double value) {
        set(18, value);
    }

    /**
     * Getter for <code>live.tracking_setup.recprob_phone</code>. Column for the
     * phone tracking rate (see MPATHY-774).
     */
    public Double getRecprobPhone() {
        return (Double) get(18);
    }

    /**
     * Setter for <code>live.tracking_setup.recprob_tablet</code>. Column for
     * the tablet tracking rate (see MPATHY-774).
     */
    public void setRecprobTablet(Double value) {
        set(19, value);
    }

    /**
     * Getter for <code>live.tracking_setup.recprob_tablet</code>. Column for
     * the tablet tracking rate (see MPATHY-774).
     */
    public Double getRecprobTablet() {
        return (Double) get(19);
    }

    /**
     * Setter for <code>live.tracking_setup.pilimit_desktop</code>. Page
     * impression limit for desktop devices
     */
    public void setPilimitDesktop(Long value) {
        set(20, value);
    }

    /**
     * Getter for <code>live.tracking_setup.pilimit_desktop</code>. Page
     * impression limit for desktop devices
     */
    public Long getPilimitDesktop() {
        return (Long) get(20);
    }

    /**
     * Setter for <code>live.tracking_setup.pilimit_phone</code>. Page
     * impression limit for phone devices
     */
    public void setPilimitPhone(Long value) {
        set(21, value);
    }

    /**
     * Getter for <code>live.tracking_setup.pilimit_phone</code>. Page
     * impression limit for phone devices
     */
    public Long getPilimitPhone() {
        return (Long) get(21);
    }

    /**
     * Setter for <code>live.tracking_setup.pilimit_tablet</code>. Page
     * impression limit for tablet devices
     */
    public void setPilimitTablet(Long value) {
        set(22, value);
    }

    /**
     * Getter for <code>live.tracking_setup.pilimit_tablet</code>. Page
     * impression limit for tablet devices
     */
    public Long getPilimitTablet() {
        return (Long) get(22);
    }

    /**
     * Setter for <code>live.tracking_setup.update_source</code>.
     */
    public void setUpdateSource(Integer value) {
        set(23, value);
    }

    /**
     * Getter for <code>live.tracking_setup.update_source</code>.
     */
    public Integer getUpdateSource() {
        return (Integer) get(23);
    }

    /**
     * Setter for <code>live.tracking_setup.update_date</code>.
     */
    public void setUpdateDate(LocalTime value) {
        set(24, value);
    }

    /**
     * Getter for <code>live.tracking_setup.update_date</code>.
     */
    public LocalTime getUpdateDate() {
        return (LocalTime) get(24);
    }

    /**
     * Setter for <code>live.tracking_setup.recprob_polls_desktop</code>. Rate
     * for polls on desktop (see MPATHY-1504).
     */
    public void setRecprobPollsDesktop(Double value) {
        set(25, value);
    }

    /**
     * Getter for <code>live.tracking_setup.recprob_polls_desktop</code>. Rate
     * for polls on desktop (see MPATHY-1504).
     */
    public Double getRecprobPollsDesktop() {
        return (Double) get(25);
    }

    /**
     * Setter for <code>live.tracking_setup.recprob_polls_phone</code>. Rate for
     * polls on phone (see MPATHY-1504).
     */
    public void setRecprobPollsPhone(Double value) {
        set(26, value);
    }

    /**
     * Getter for <code>live.tracking_setup.recprob_polls_phone</code>. Rate for
     * polls on phone (see MPATHY-1504).
     */
    public Double getRecprobPollsPhone() {
        return (Double) get(26);
    }

    /**
     * Setter for <code>live.tracking_setup.recprob_polls_tablet</code>. Rate
     * for polls on tablet (see MPATHY-1504).
     */
    public void setRecprobPollsTablet(Double value) {
        set(27, value);
    }

    /**
     * Getter for <code>live.tracking_setup.recprob_polls_tablet</code>. Rate
     * for polls on tablet (see MPATHY-1504).
     */
    public Double getRecprobPollsTablet() {
        return (Double) get(27);
    }

    /**
     * Setter for <code>live.tracking_setup.pre_custom_code</code>.
     */
    public void setPreCustomCode(String value) {
        set(28, value);
    }

    /**
     * Getter for <code>live.tracking_setup.pre_custom_code</code>.
     */
    public String getPreCustomCode() {
        return (String) get(28);
    }

    /**
     * Setter for <code>live.tracking_setup.interface_clickmapxpath</code>.
     */
    public void setInterfaceClickmapxpath(String value) {
        set(29, value);
    }

    /**
     * Getter for <code>live.tracking_setup.interface_clickmapxpath</code>.
     */
    public String getInterfaceClickmapxpath() {
        return (String) get(29);
    }

    /**
     * Setter for <code>live.tracking_setup.xdomain_persist</code>. X-Domain
     * Tracking
     */
    public void setXdomainPersist(Boolean value) {
        set(30, value);
    }

    /**
     * Getter for <code>live.tracking_setup.xdomain_persist</code>. X-Domain
     * Tracking
     */
    public Boolean getXdomainPersist() {
        return (Boolean) get(30);
    }

    /**
     * Setter for <code>live.tracking_setup.vid_salt_hash</code>.
     */
    public void setVidSaltHash(String value) {
        set(31, value);
    }

    /**
     * Getter for <code>live.tracking_setup.vid_salt_hash</code>.
     */
    public String getVidSaltHash() {
        return (String) get(31);
    }

    /**
     * Setter for <code>live.tracking_setup.survey_limit</code>. polls rate
     * limit
     */
    public void setSurveyLimit(Long value) {
        set(32, value);
    }

    /**
     * Getter for <code>live.tracking_setup.survey_limit</code>. polls rate
     * limit
     */
    public Long getSurveyLimit() {
        return (Long) get(32);
    }

    /**
     * Setter for <code>live.tracking_setup.polls_custom_code</code>. holder for
     * the polls only customcode (more information see MPATHY-5306).
     */
    public void setPollsCustomCode(String value) {
        set(33, value);
    }

    /**
     * Getter for <code>live.tracking_setup.polls_custom_code</code>. holder for
     * the polls only customcode (more information see MPATHY-5306).
     */
    public String getPollsCustomCode() {
        return (String) get(33);
    }

    /**
     * Setter for <code>live.tracking_setup.idtracking_config</code>. Foreign
     * key to the tracking_config table.
     */
    public void setIdtrackingConfig(Integer value) {
        set(34, value);
    }

    /**
     * Getter for <code>live.tracking_setup.idtracking_config</code>. Foreign
     * key to the tracking_config table.
     */
    public Integer getIdtrackingConfig() {
        return (Integer) get(34);
    }

    /**
     * Setter for <code>live.tracking_setup.process_clicks</code>.
     */
    public void setProcessClicks(Boolean value) {
        set(35, value);
    }

    /**
     * Getter for <code>live.tracking_setup.process_clicks</code>.
     */
    public Boolean getProcessClicks() {
        return (Boolean) get(35);
    }

    /**
     * Setter for <code>live.tracking_setup.process_scrolls</code>.
     */
    public void setProcessScrolls(Boolean value) {
        set(36, value);
    }

    /**
     * Getter for <code>live.tracking_setup.process_scrolls</code>.
     */
    public Boolean getProcessScrolls() {
        return (Boolean) get(36);
    }

    /**
     * Setter for <code>live.tracking_setup.process_movements</code>.
     */
    public void setProcessMovements(Boolean value) {
        set(37, value);
    }

    /**
     * Getter for <code>live.tracking_setup.process_movements</code>.
     */
    public Boolean getProcessMovements() {
        return (Boolean) get(37);
    }

    /**
     * Setter for <code>live.tracking_setup.process_forms</code>.
     */
    public void setProcessForms(Boolean value) {
        set(38, value);
    }

    /**
     * Getter for <code>live.tracking_setup.process_forms</code>.
     */
    public Boolean getProcessForms() {
        return (Boolean) get(38);
    }

    /**
     * Setter for <code>live.tracking_setup.tracking_persistence</code>.
     */
    public void setTrackingPersistence(String value) {
        set(39, value);
    }

    /**
     * Getter for <code>live.tracking_setup.tracking_persistence</code>.
     */
    public String getTrackingPersistence() {
        return (String) get(39);
    }

    /**
     * Setter for <code>live.tracking_setup.sdk_type</code>. Contains the
     * tracking type for this site.
     */
    public void setSdkType(String value) {
        set(40, value);
    }

    /**
     * Getter for <code>live.tracking_setup.sdk_type</code>. Contains the
     * tracking type for this site.
     */
    public String getSdkType() {
        return (String) get(40);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TrackingSetupRecord
     */
    public TrackingSetupRecord() {
        super(TrackingSetup.TRACKING_SETUP);
    }

    /**
     * Create a detached, initialised TrackingSetupRecord
     */
    public TrackingSetupRecord(Integer idsite, Long active, Long activeDesktop, Long activePhone, Long activeTablet, Long sesslimit, String blockip, Double sesspercentage, Double sesspercentageDev, Long subdomainwildcard, Long ignoreurlfilter, Short providerstate, Short recstrategy, String trackingstartUrl, LocalTime trackingstartDate, LocalTime trackingstopDate, String customCode, Double recprobDesktop, Double recprobPhone, Double recprobTablet, Long pilimitDesktop, Long pilimitPhone, Long pilimitTablet, Integer updateSource, LocalTime updateDate, Double recprobPollsDesktop, Double recprobPollsPhone, Double recprobPollsTablet, String preCustomCode, String interfaceClickmapxpath, Boolean xdomainPersist, String vidSaltHash, Long surveyLimit, String pollsCustomCode, Integer idtrackingConfig, Boolean processClicks, Boolean processScrolls, Boolean processMovements, Boolean processForms, String trackingPersistence, String sdkType) {
        super(TrackingSetup.TRACKING_SETUP);

        setIdsite(idsite);
        setActive(active);
        setActiveDesktop(activeDesktop);
        setActivePhone(activePhone);
        setActiveTablet(activeTablet);
        setSesslimit(sesslimit);
        setBlockip(blockip);
        setSesspercentage(sesspercentage);
        setSesspercentageDev(sesspercentageDev);
        setSubdomainwildcard(subdomainwildcard);
        setIgnoreurlfilter(ignoreurlfilter);
        setProviderstate(providerstate);
        setRecstrategy(recstrategy);
        setTrackingstartUrl(trackingstartUrl);
        setTrackingstartDate(trackingstartDate);
        setTrackingstopDate(trackingstopDate);
        setCustomCode(customCode);
        setRecprobDesktop(recprobDesktop);
        setRecprobPhone(recprobPhone);
        setRecprobTablet(recprobTablet);
        setPilimitDesktop(pilimitDesktop);
        setPilimitPhone(pilimitPhone);
        setPilimitTablet(pilimitTablet);
        setUpdateSource(updateSource);
        setUpdateDate(updateDate);
        setRecprobPollsDesktop(recprobPollsDesktop);
        setRecprobPollsPhone(recprobPollsPhone);
        setRecprobPollsTablet(recprobPollsTablet);
        setPreCustomCode(preCustomCode);
        setInterfaceClickmapxpath(interfaceClickmapxpath);
        setXdomainPersist(xdomainPersist);
        setVidSaltHash(vidSaltHash);
        setSurveyLimit(surveyLimit);
        setPollsCustomCode(pollsCustomCode);
        setIdtrackingConfig(idtrackingConfig);
        setProcessClicks(processClicks);
        setProcessScrolls(processScrolls);
        setProcessMovements(processMovements);
        setProcessForms(processForms);
        setTrackingPersistence(trackingPersistence);
        setSdkType(sdkType);
    }
}
