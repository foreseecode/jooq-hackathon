/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables.records;


import com.verint.mpathy.db.live.tables.Customparameter;

import org.jooq.Field;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomparameterRecord extends TableRecordImpl<CustomparameterRecord> implements Record13<Long, Integer, String, Long, String, String, String, Boolean, Boolean, String, Short, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live.customparameter.idcp</code>.
     */
    public void setIdcp(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>live.customparameter.idcp</code>.
     */
    public Long getIdcp() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>live.customparameter.idsite</code>.
     */
    public void setIdsite(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>live.customparameter.idsite</code>.
     */
    public Integer getIdsite() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>live.customparameter.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>live.customparameter.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>live.customparameter.ordervalue</code>.
     */
    public void setOrdervalue(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>live.customparameter.ordervalue</code>.
     */
    public Long getOrdervalue() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>live.customparameter.type</code>.
     */
    public void setType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>live.customparameter.type</code>.
     */
    public String getType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>live.customparameter.level</code>.
     */
    public void setLevel(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>live.customparameter.level</code>.
     */
    public String getLevel() {
        return (String) get(5);
    }

    /**
     * Setter for <code>live.customparameter.desc</code>. Original Name from
     * tracking (e.g. with german letters)
     */
    public void setDesc(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>live.customparameter.desc</code>. Original Name from
     * tracking (e.g. with german letters)
     */
    public String getDesc() {
        return (String) get(6);
    }

    /**
     * Setter for <code>live.customparameter.segment</code>.
     */
    public void setSegment(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>live.customparameter.segment</code>.
     */
    public Boolean getSegment() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>live.customparameter.enabled</code>.
     */
    public void setEnabled(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>live.customparameter.enabled</code>.
     */
    public Boolean getEnabled() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>live.customparameter.description</code>. Description of
     * combination of customparameter fieldname and value
     */
    public void setDescription(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>live.customparameter.description</code>. Description of
     * combination of customparameter fieldname and value
     */
    public String getDescription() {
        return (String) get(9);
    }

    /**
     * Setter for <code>live.customparameter.multiselect</code>.
     */
    public void setMultiselect(Short value) {
        set(10, value);
    }

    /**
     * Getter for <code>live.customparameter.multiselect</code>.
     */
    public Short getMultiselect() {
        return (Short) get(10);
    }

    /**
     * Setter for <code>live.customparameter.view_type</code>. The view type to
     * visualize the interaction component of the frontend.
     */
    public void setViewType(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>live.customparameter.view_type</code>. The view type to
     * visualize the interaction component of the frontend.
     */
    public String getViewType() {
        return (String) get(11);
    }

    /**
     * Setter for <code>live.customparameter.comparator_type</code>.
     */
    public void setComparatorType(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>live.customparameter.comparator_type</code>.
     */
    public String getComparatorType() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Long, Integer, String, Long, String, String, String, Boolean, Boolean, String, Short, String, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Long, Integer, String, Long, String, String, String, Boolean, Boolean, String, Short, String, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Customparameter.CUSTOMPARAMETER.IDCP;
    }

    @Override
    public Field<Integer> field2() {
        return Customparameter.CUSTOMPARAMETER.IDSITE;
    }

    @Override
    public Field<String> field3() {
        return Customparameter.CUSTOMPARAMETER.NAME;
    }

    @Override
    public Field<Long> field4() {
        return Customparameter.CUSTOMPARAMETER.ORDERVALUE;
    }

    @Override
    public Field<String> field5() {
        return Customparameter.CUSTOMPARAMETER.TYPE;
    }

    @Override
    public Field<String> field6() {
        return Customparameter.CUSTOMPARAMETER.LEVEL;
    }

    @Override
    public Field<String> field7() {
        return Customparameter.CUSTOMPARAMETER.DESC;
    }

    @Override
    public Field<Boolean> field8() {
        return Customparameter.CUSTOMPARAMETER.SEGMENT;
    }

    @Override
    public Field<Boolean> field9() {
        return Customparameter.CUSTOMPARAMETER.ENABLED;
    }

    @Override
    public Field<String> field10() {
        return Customparameter.CUSTOMPARAMETER.DESCRIPTION;
    }

    @Override
    public Field<Short> field11() {
        return Customparameter.CUSTOMPARAMETER.MULTISELECT;
    }

    @Override
    public Field<String> field12() {
        return Customparameter.CUSTOMPARAMETER.VIEW_TYPE;
    }

    @Override
    public Field<String> field13() {
        return Customparameter.CUSTOMPARAMETER.COMPARATOR_TYPE;
    }

    @Override
    public Long component1() {
        return getIdcp();
    }

    @Override
    public Integer component2() {
        return getIdsite();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Long component4() {
        return getOrdervalue();
    }

    @Override
    public String component5() {
        return getType();
    }

    @Override
    public String component6() {
        return getLevel();
    }

    @Override
    public String component7() {
        return getDesc();
    }

    @Override
    public Boolean component8() {
        return getSegment();
    }

    @Override
    public Boolean component9() {
        return getEnabled();
    }

    @Override
    public String component10() {
        return getDescription();
    }

    @Override
    public Short component11() {
        return getMultiselect();
    }

    @Override
    public String component12() {
        return getViewType();
    }

    @Override
    public String component13() {
        return getComparatorType();
    }

    @Override
    public Long value1() {
        return getIdcp();
    }

    @Override
    public Integer value2() {
        return getIdsite();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Long value4() {
        return getOrdervalue();
    }

    @Override
    public String value5() {
        return getType();
    }

    @Override
    public String value6() {
        return getLevel();
    }

    @Override
    public String value7() {
        return getDesc();
    }

    @Override
    public Boolean value8() {
        return getSegment();
    }

    @Override
    public Boolean value9() {
        return getEnabled();
    }

    @Override
    public String value10() {
        return getDescription();
    }

    @Override
    public Short value11() {
        return getMultiselect();
    }

    @Override
    public String value12() {
        return getViewType();
    }

    @Override
    public String value13() {
        return getComparatorType();
    }

    @Override
    public CustomparameterRecord value1(Long value) {
        setIdcp(value);
        return this;
    }

    @Override
    public CustomparameterRecord value2(Integer value) {
        setIdsite(value);
        return this;
    }

    @Override
    public CustomparameterRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public CustomparameterRecord value4(Long value) {
        setOrdervalue(value);
        return this;
    }

    @Override
    public CustomparameterRecord value5(String value) {
        setType(value);
        return this;
    }

    @Override
    public CustomparameterRecord value6(String value) {
        setLevel(value);
        return this;
    }

    @Override
    public CustomparameterRecord value7(String value) {
        setDesc(value);
        return this;
    }

    @Override
    public CustomparameterRecord value8(Boolean value) {
        setSegment(value);
        return this;
    }

    @Override
    public CustomparameterRecord value9(Boolean value) {
        setEnabled(value);
        return this;
    }

    @Override
    public CustomparameterRecord value10(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public CustomparameterRecord value11(Short value) {
        setMultiselect(value);
        return this;
    }

    @Override
    public CustomparameterRecord value12(String value) {
        setViewType(value);
        return this;
    }

    @Override
    public CustomparameterRecord value13(String value) {
        setComparatorType(value);
        return this;
    }

    @Override
    public CustomparameterRecord values(Long value1, Integer value2, String value3, Long value4, String value5, String value6, String value7, Boolean value8, Boolean value9, String value10, Short value11, String value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomparameterRecord
     */
    public CustomparameterRecord() {
        super(Customparameter.CUSTOMPARAMETER);
    }

    /**
     * Create a detached, initialised CustomparameterRecord
     */
    public CustomparameterRecord(Long idcp, Integer idsite, String name, Long ordervalue, String type, String level, String desc, Boolean segment, Boolean enabled, String description, Short multiselect, String viewType, String comparatorType) {
        super(Customparameter.CUSTOMPARAMETER);

        setIdcp(idcp);
        setIdsite(idsite);
        setName(name);
        setOrdervalue(ordervalue);
        setType(type);
        setLevel(level);
        setDesc(desc);
        setSegment(segment);
        setEnabled(enabled);
        setDescription(description);
        setMultiselect(multiselect);
        setViewType(viewType);
        setComparatorType(comparatorType);
    }
}
