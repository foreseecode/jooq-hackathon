/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.DeviceInfoJsonPairRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This table contains all json references for the "video_page_stats" table and
 * his "device_info" column.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeviceInfoJsonPair extends TableImpl<DeviceInfoJsonPairRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live.device_info_json_pair</code>
     */
    public static final DeviceInfoJsonPair DEVICE_INFO_JSON_PAIR = new DeviceInfoJsonPair();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DeviceInfoJsonPairRecord> getRecordType() {
        return DeviceInfoJsonPairRecord.class;
    }

    /**
     * The column
     * <code>live.device_info_json_pair.iddevice_info_json_pair</code>.
     */
    public final TableField<DeviceInfoJsonPairRecord, Long> IDDEVICE_INFO_JSON_PAIR = createField(DSL.name("iddevice_info_json_pair"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>live.device_info_json_pair.idvideo_page_stats</code>.
     */
    public final TableField<DeviceInfoJsonPairRecord, BigDecimal> IDVIDEO_PAGE_STATS = createField(DSL.name("idvideo_page_stats"), SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>live.device_info_json_pair.idjson_key</code>.
     */
    public final TableField<DeviceInfoJsonPairRecord, BigDecimal> IDJSON_KEY = createField(DSL.name("idjson_key"), SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>live.device_info_json_pair.idjson_value</code>.
     */
    public final TableField<DeviceInfoJsonPairRecord, BigDecimal> IDJSON_VALUE = createField(DSL.name("idjson_value"), SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column
     * <code>live.device_info_json_pair.iddevice_info_json_pair_ref</code>.
     */
    public final TableField<DeviceInfoJsonPairRecord, BigDecimal> IDDEVICE_INFO_JSON_PAIR_REF = createField(DSL.name("iddevice_info_json_pair_ref"), SQLDataType.NUMERIC, this, "");

    private DeviceInfoJsonPair(Name alias, Table<DeviceInfoJsonPairRecord> aliased) {
        this(alias, aliased, null);
    }

    private DeviceInfoJsonPair(Name alias, Table<DeviceInfoJsonPairRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("This table contains all json references for the \"video_page_stats\" table and his \"device_info\" column."), TableOptions.table());
    }

    /**
     * Create an aliased <code>live.device_info_json_pair</code> table reference
     */
    public DeviceInfoJsonPair(String alias) {
        this(DSL.name(alias), DEVICE_INFO_JSON_PAIR);
    }

    /**
     * Create an aliased <code>live.device_info_json_pair</code> table reference
     */
    public DeviceInfoJsonPair(Name alias) {
        this(alias, DEVICE_INFO_JSON_PAIR);
    }

    /**
     * Create a <code>live.device_info_json_pair</code> table reference
     */
    public DeviceInfoJsonPair() {
        this(DSL.name("device_info_json_pair"), null);
    }

    public <O extends Record> DeviceInfoJsonPair(Table<O> child, ForeignKey<O, DeviceInfoJsonPairRecord> key) {
        super(child, key, DEVICE_INFO_JSON_PAIR);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public Identity<DeviceInfoJsonPairRecord, Long> getIdentity() {
        return (Identity<DeviceInfoJsonPairRecord, Long>) super.getIdentity();
    }

    @Override
    public DeviceInfoJsonPair as(String alias) {
        return new DeviceInfoJsonPair(DSL.name(alias), this);
    }

    @Override
    public DeviceInfoJsonPair as(Name alias) {
        return new DeviceInfoJsonPair(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DeviceInfoJsonPair rename(String name) {
        return new DeviceInfoJsonPair(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DeviceInfoJsonPair rename(Name name) {
        return new DeviceInfoJsonPair(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
