/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.MapClickPathinfo_11198Record;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MapClickPathinfo_11198 extends TableImpl<MapClickPathinfo_11198Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live.map_click_pathinfo_11198</code>
     */
    public static final MapClickPathinfo_11198 MAP_CLICK_PATHINFO_11198 = new MapClickPathinfo_11198();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MapClickPathinfo_11198Record> getRecordType() {
        return MapClickPathinfo_11198Record.class;
    }

    /**
     * The column <code>live.map_click_pathinfo_11198.idpathinfo_plain</code>.
     * ident of the pathinfo.
     */
    public final TableField<MapClickPathinfo_11198Record, String> IDPATHINFO_PLAIN = createField(DSL.name("idpathinfo_plain"), SQLDataType.CLOB.nullable(false), this, "ident of the pathinfo.");

    /**
     * The column <code>live.map_click_pathinfo_11198.idpage_name</code>. ident
     * of the page.
     */
    public final TableField<MapClickPathinfo_11198Record, Long> IDPAGE_NAME = createField(DSL.name("idpage_name"), SQLDataType.BIGINT.nullable(false), this, "ident of the page.");

    /**
     * The column <code>live.map_click_pathinfo_11198.idsite</code>. ident of
     * the site.
     */
    public final TableField<MapClickPathinfo_11198Record, Integer> IDSITE = createField(DSL.name("idsite"), SQLDataType.INTEGER.nullable(false), this, "ident of the site.");

    /**
     * The column <code>live.map_click_pathinfo_11198.abs_width</code>. absolute
     * width of the container.
     */
    public final TableField<MapClickPathinfo_11198Record, Integer> ABS_WIDTH = createField(DSL.name("abs_width"), SQLDataType.INTEGER, this, "absolute width of the container.");

    /**
     * The column <code>live.map_click_pathinfo_11198.abs_height</code>.
     * absolute height of the container.
     */
    public final TableField<MapClickPathinfo_11198Record, Integer> ABS_HEIGHT = createField(DSL.name("abs_height"), SQLDataType.INTEGER, this, "absolute height of the container.");

    /**
     * The column <code>live.map_click_pathinfo_11198.abs_x</code>. absolute
     * position(x) of the left top corner in px of container.
     */
    public final TableField<MapClickPathinfo_11198Record, Integer> ABS_X = createField(DSL.name("abs_x"), SQLDataType.INTEGER.nullable(false), this, "absolute position(x) of the left top corner in px of container.");

    /**
     * The column <code>live.map_click_pathinfo_11198.abs_y</code>. absolute
     * position(y) of the left top corner in px of container.
     */
    public final TableField<MapClickPathinfo_11198Record, Integer> ABS_Y = createField(DSL.name("abs_y"), SQLDataType.INTEGER.nullable(false), this, "absolute position(y) of the left top corner in px of container.");

    /**
     * The column <code>live.map_click_pathinfo_11198.rel_x</code>. relative
     * position(x) of the left top corner in px of container in relation to the
     * upper parent.
     */
    public final TableField<MapClickPathinfo_11198Record, Integer> REL_X = createField(DSL.name("rel_x"), SQLDataType.INTEGER.nullable(false), this, "relative position(x) of the left top corner in px of container in relation to the upper parent.");

    /**
     * The column <code>live.map_click_pathinfo_11198.rel_y</code>. relative
     * position(y) of the left top corner in px of container in relation to the
     * upper parent.
     */
    public final TableField<MapClickPathinfo_11198Record, Integer> REL_Y = createField(DSL.name("rel_y"), SQLDataType.INTEGER.nullable(false), this, "relative position(y) of the left top corner in px of container in relation to the upper parent.");

    /**
     * The column <code>live.map_click_pathinfo_11198.relp_width</code>.
     * relative width of the element in relation to the parent container
     */
    public final TableField<MapClickPathinfo_11198Record, BigDecimal> RELP_WIDTH = createField(DSL.name("relp_width"), SQLDataType.NUMERIC.nullable(false), this, "relative width of the element in relation to the parent container");

    /**
     * The column <code>live.map_click_pathinfo_11198.relp_x</code>. relative x
     * offset factor as a relation of the percentual width in relation to the
     * parent container
     */
    public final TableField<MapClickPathinfo_11198Record, BigDecimal> RELP_X = createField(DSL.name("relp_x"), SQLDataType.NUMERIC.nullable(false), this, "relative x offset factor as a relation of the percentual width in relation to the parent container");

    /**
     * The column <code>live.map_click_pathinfo_11198.idpathinfo</code>. added
     * new id for compressed xpath format see MPATHY-2305
     */
    public final TableField<MapClickPathinfo_11198Record, Long> IDPATHINFO = createField(DSL.name("idpathinfo"), SQLDataType.BIGINT, this, "added new id for compressed xpath format see MPATHY-2305");

    private MapClickPathinfo_11198(Name alias, Table<MapClickPathinfo_11198Record> aliased) {
        this(alias, aliased, null);
    }

    private MapClickPathinfo_11198(Name alias, Table<MapClickPathinfo_11198Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>live.map_click_pathinfo_11198</code> table
     * reference
     */
    public MapClickPathinfo_11198(String alias) {
        this(DSL.name(alias), MAP_CLICK_PATHINFO_11198);
    }

    /**
     * Create an aliased <code>live.map_click_pathinfo_11198</code> table
     * reference
     */
    public MapClickPathinfo_11198(Name alias) {
        this(alias, MAP_CLICK_PATHINFO_11198);
    }

    /**
     * Create a <code>live.map_click_pathinfo_11198</code> table reference
     */
    public MapClickPathinfo_11198() {
        this(DSL.name("map_click_pathinfo_11198"), null);
    }

    public <O extends Record> MapClickPathinfo_11198(Table<O> child, ForeignKey<O, MapClickPathinfo_11198Record> key) {
        super(child, key, MAP_CLICK_PATHINFO_11198);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public MapClickPathinfo_11198 as(String alias) {
        return new MapClickPathinfo_11198(DSL.name(alias), this);
    }

    @Override
    public MapClickPathinfo_11198 as(Name alias) {
        return new MapClickPathinfo_11198(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MapClickPathinfo_11198 rename(String name) {
        return new MapClickPathinfo_11198(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MapClickPathinfo_11198 rename(Name name) {
        return new MapClickPathinfo_11198(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<String, Long, Integer, Integer, Integer, Integer, Integer, Integer, Integer, BigDecimal, BigDecimal, Long> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
