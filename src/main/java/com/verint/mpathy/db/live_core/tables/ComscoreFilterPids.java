/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables;


import com.verint.mpathy.db.live_core.LiveCore;
import com.verint.mpathy.db.live_core.tables.records.ComscoreFilterPidsRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ComscoreFilterPids extends TableImpl<ComscoreFilterPidsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live_core.comscore_filter_pids</code>
     */
    public static final ComscoreFilterPids COMSCORE_FILTER_PIDS = new ComscoreFilterPids();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ComscoreFilterPidsRecord> getRecordType() {
        return ComscoreFilterPidsRecord.class;
    }

    /**
     * The column <code>live_core.comscore_filter_pids.idclient</code>.
     */
    public final TableField<ComscoreFilterPidsRecord, BigDecimal> IDCLIENT = createField(DSL.name("idclient"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.comscore_filter_pids.idfilter</code>.
     */
    public final TableField<ComscoreFilterPidsRecord, BigDecimal> IDFILTER = createField(DSL.name("idfilter"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.comscore_filter_pids.idpage</code>.
     */
    public final TableField<ComscoreFilterPidsRecord, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.comscore_filter_pids.date</code>.
     */
    public final TableField<ComscoreFilterPidsRecord, Integer> DATE = createField(DSL.name("date"), SQLDataType.INTEGER, this, "");

    private ComscoreFilterPids(Name alias, Table<ComscoreFilterPidsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ComscoreFilterPids(Name alias, Table<ComscoreFilterPidsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Easy access to underlying table in other schemas."), TableOptions.view("create view \"comscore_filter_pids\" as  SELECT comscore_filter_pids.idclient,\n    comscore_filter_pids.idfilter,\n    comscore_filter_pids.idpage,\n    comscore_filter_pids.date\n   FROM live.comscore_filter_pids;"));
    }

    /**
     * Create an aliased <code>live_core.comscore_filter_pids</code> table
     * reference
     */
    public ComscoreFilterPids(String alias) {
        this(DSL.name(alias), COMSCORE_FILTER_PIDS);
    }

    /**
     * Create an aliased <code>live_core.comscore_filter_pids</code> table
     * reference
     */
    public ComscoreFilterPids(Name alias) {
        this(alias, COMSCORE_FILTER_PIDS);
    }

    /**
     * Create a <code>live_core.comscore_filter_pids</code> table reference
     */
    public ComscoreFilterPids() {
        this(DSL.name("comscore_filter_pids"), null);
    }

    public <O extends Record> ComscoreFilterPids(Table<O> child, ForeignKey<O, ComscoreFilterPidsRecord> key) {
        super(child, key, COMSCORE_FILTER_PIDS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : LiveCore.LIVE_CORE;
    }

    @Override
    public ComscoreFilterPids as(String alias) {
        return new ComscoreFilterPids(DSL.name(alias), this);
    }

    @Override
    public ComscoreFilterPids as(Name alias) {
        return new ComscoreFilterPids(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ComscoreFilterPids rename(String name) {
        return new ComscoreFilterPids(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ComscoreFilterPids rename(Name name) {
        return new ComscoreFilterPids(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<BigDecimal, BigDecimal, BigDecimal, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
