/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.TaskitemHasPageRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskitemHasPage extends TableImpl<TaskitemHasPageRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live.taskitem_has_page</code>
     */
    public static final TaskitemHasPage TASKITEM_HAS_PAGE = new TaskitemHasPage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TaskitemHasPageRecord> getRecordType() {
        return TaskitemHasPageRecord.class;
    }

    /**
     * The column <code>live.taskitem_has_page.idtaskitem</code>.
     */
    public final TableField<TaskitemHasPageRecord, BigDecimal> IDTASKITEM = createField(DSL.name("idtaskitem"), SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>live.taskitem_has_page.idpage</code>.
     */
    public final TableField<TaskitemHasPageRecord, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC.nullable(false), this, "");

    private TaskitemHasPage(Name alias, Table<TaskitemHasPageRecord> aliased) {
        this(alias, aliased, null);
    }

    private TaskitemHasPage(Name alias, Table<TaskitemHasPageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>live.taskitem_has_page</code> table reference
     */
    public TaskitemHasPage(String alias) {
        this(DSL.name(alias), TASKITEM_HAS_PAGE);
    }

    /**
     * Create an aliased <code>live.taskitem_has_page</code> table reference
     */
    public TaskitemHasPage(Name alias) {
        this(alias, TASKITEM_HAS_PAGE);
    }

    /**
     * Create a <code>live.taskitem_has_page</code> table reference
     */
    public TaskitemHasPage() {
        this(DSL.name("taskitem_has_page"), null);
    }

    public <O extends Record> TaskitemHasPage(Table<O> child, ForeignKey<O, TaskitemHasPageRecord> key) {
        super(child, key, TASKITEM_HAS_PAGE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public TaskitemHasPage as(String alias) {
        return new TaskitemHasPage(DSL.name(alias), this);
    }

    @Override
    public TaskitemHasPage as(Name alias) {
        return new TaskitemHasPage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TaskitemHasPage rename(String name) {
        return new TaskitemHasPage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TaskitemHasPage rename(Name name) {
        return new TaskitemHasPage(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<BigDecimal, BigDecimal> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
