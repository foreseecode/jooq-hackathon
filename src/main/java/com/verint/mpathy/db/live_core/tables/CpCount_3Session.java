/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables;


import com.verint.mpathy.db.live_core.LiveCore;
import com.verint.mpathy.db.live_core.tables.records.CpCount_3SessionRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CpCount_3Session extends TableImpl<CpCount_3SessionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live_core.cp_count_3_session</code>
     */
    public static final CpCount_3Session CP_COUNT_3_SESSION = new CpCount_3Session();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CpCount_3SessionRecord> getRecordType() {
        return CpCount_3SessionRecord.class;
    }

    /**
     * The column <code>live_core.cp_count_3_session.idcp</code>.
     */
    public final TableField<CpCount_3SessionRecord, Long> IDCP = createField(DSL.name("idcp"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.cp_count_3_session.idvalue</code>.
     */
    public final TableField<CpCount_3SessionRecord, BigDecimal> IDVALUE = createField(DSL.name("idvalue"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.cp_count_3_session.idpage_name</code>.
     */
    public final TableField<CpCount_3SessionRecord, Short> IDPAGE_NAME = createField(DSL.name("idpage_name"), SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>live_core.cp_count_3_session.count</code>.
     */
    public final TableField<CpCount_3SessionRecord, Long> COUNT = createField(DSL.name("count"), SQLDataType.BIGINT, this, "");

    private CpCount_3Session(Name alias, Table<CpCount_3SessionRecord> aliased) {
        this(alias, aliased, null);
    }

    private CpCount_3Session(Name alias, Table<CpCount_3SessionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>live_core.cp_count_3_session</code> table
     * reference
     */
    public CpCount_3Session(String alias) {
        this(DSL.name(alias), CP_COUNT_3_SESSION);
    }

    /**
     * Create an aliased <code>live_core.cp_count_3_session</code> table
     * reference
     */
    public CpCount_3Session(Name alias) {
        this(alias, CP_COUNT_3_SESSION);
    }

    /**
     * Create a <code>live_core.cp_count_3_session</code> table reference
     */
    public CpCount_3Session() {
        this(DSL.name("cp_count_3_session"), null);
    }

    public <O extends Record> CpCount_3Session(Table<O> child, ForeignKey<O, CpCount_3SessionRecord> key) {
        super(child, key, CP_COUNT_3_SESSION);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : LiveCore.LIVE_CORE;
    }

    @Override
    public CpCount_3Session as(String alias) {
        return new CpCount_3Session(DSL.name(alias), this);
    }

    @Override
    public CpCount_3Session as(Name alias) {
        return new CpCount_3Session(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CpCount_3Session rename(String name) {
        return new CpCount_3Session(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CpCount_3Session rename(Name name) {
        return new CpCount_3Session(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, BigDecimal, Short, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
