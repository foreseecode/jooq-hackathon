/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables;


import com.verint.mpathy.db.live_core.LiveCore;
import com.verint.mpathy.db.live_core.tables.records.VideoPageStatsRecord;

import java.math.BigDecimal;
import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VideoPageStats extends TableImpl<VideoPageStatsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live_core.video_page_stats</code>
     */
    public static final VideoPageStats VIDEO_PAGE_STATS = new VideoPageStats();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VideoPageStatsRecord> getRecordType() {
        return VideoPageStatsRecord.class;
    }

    /**
     * The column <code>live_core.video_page_stats.idvideo_page_stats</code>.
     */
    public final TableField<VideoPageStatsRecord, Long> IDVIDEO_PAGE_STATS = createField(DSL.name("idvideo_page_stats"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>live_core.video_page_stats.idvisitor</code>.
     */
    public final TableField<VideoPageStatsRecord, BigDecimal> IDVISITOR = createField(DSL.name("idvisitor"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.video_page_stats.idpage</code>.
     */
    public final TableField<VideoPageStatsRecord, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.video_page_stats.idclient</code>.
     */
    public final TableField<VideoPageStatsRecord, BigDecimal> IDCLIENT = createField(DSL.name("idclient"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>live_core.video_page_stats.device</code>.
     */
    public final TableField<VideoPageStatsRecord, String> DEVICE = createField(DSL.name("device"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live_core.video_page_stats.stage</code>.
     */
    public final TableField<VideoPageStatsRecord, String> STAGE = createField(DSL.name("stage"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live_core.video_page_stats.success</code>.
     */
    public final TableField<VideoPageStatsRecord, Boolean> SUCCESS = createField(DSL.name("success"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>live_core.video_page_stats.pagename</code>.
     */
    public final TableField<VideoPageStatsRecord, String> PAGENAME = createField(DSL.name("pagename"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live_core.video_page_stats.message</code>.
     */
    public final TableField<VideoPageStatsRecord, String> MESSAGE = createField(DSL.name("message"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live_core.video_page_stats.date</code>.
     */
    public final TableField<VideoPageStatsRecord, LocalTime> DATE = createField(DSL.name("date"), SQLDataType.LOCALTIME(6), this, "");

    /**
     * The column <code>live_core.video_page_stats.uuid</code>.
     */
    public final TableField<VideoPageStatsRecord, String> UUID = createField(DSL.name("uuid"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>live_core.video_page_stats.chunk_index</code>.
     */
    public final TableField<VideoPageStatsRecord, Short> CHUNK_INDEX = createField(DSL.name("chunk_index"), SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>live_core.video_page_stats.last_chunk_index</code>.
     */
    public final TableField<VideoPageStatsRecord, Short> LAST_CHUNK_INDEX = createField(DSL.name("last_chunk_index"), SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>live_core.video_page_stats.device_info</code>.
     */
    public final TableField<VideoPageStatsRecord, String> DEVICE_INFO = createField(DSL.name("device_info"), SQLDataType.CLOB, this, "");

    private VideoPageStats(Name alias, Table<VideoPageStatsRecord> aliased) {
        this(alias, aliased, null);
    }

    private VideoPageStats(Name alias, Table<VideoPageStatsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Easy access to underlying table in other schemas."), TableOptions.view("create view \"video_page_stats\" as  SELECT video_page_stats.idvideo_page_stats,\n    video_page_stats.idvisitor,\n    video_page_stats.idpage,\n    video_page_stats.idclient,\n    video_page_stats.device,\n    video_page_stats.stage,\n    video_page_stats.success,\n    video_page_stats.pagename,\n    video_page_stats.message,\n    video_page_stats.date,\n    video_page_stats.uuid,\n    video_page_stats.chunk_index,\n    video_page_stats.last_chunk_index,\n    video_page_stats.device_info\n   FROM live.video_page_stats;"));
    }

    /**
     * Create an aliased <code>live_core.video_page_stats</code> table reference
     */
    public VideoPageStats(String alias) {
        this(DSL.name(alias), VIDEO_PAGE_STATS);
    }

    /**
     * Create an aliased <code>live_core.video_page_stats</code> table reference
     */
    public VideoPageStats(Name alias) {
        this(alias, VIDEO_PAGE_STATS);
    }

    /**
     * Create a <code>live_core.video_page_stats</code> table reference
     */
    public VideoPageStats() {
        this(DSL.name("video_page_stats"), null);
    }

    public <O extends Record> VideoPageStats(Table<O> child, ForeignKey<O, VideoPageStatsRecord> key) {
        super(child, key, VIDEO_PAGE_STATS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : LiveCore.LIVE_CORE;
    }

    @Override
    public VideoPageStats as(String alias) {
        return new VideoPageStats(DSL.name(alias), this);
    }

    @Override
    public VideoPageStats as(Name alias) {
        return new VideoPageStats(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VideoPageStats rename(String name) {
        return new VideoPageStats(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VideoPageStats rename(Name name) {
        return new VideoPageStats(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<Long, BigDecimal, BigDecimal, BigDecimal, String, String, Boolean, String, String, LocalTime, String, Short, Short, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
