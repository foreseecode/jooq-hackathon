/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.StruggleIndicatorErrorMessageCountRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Indicator definition: The amount of error properties set for a page view
 * succeeded the threshold defined in the struggle settings.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StruggleIndicatorErrorMessageCount extends TableImpl<StruggleIndicatorErrorMessageCountRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>live.struggle_indicator_error_message_count</code>
     */
    public static final StruggleIndicatorErrorMessageCount STRUGGLE_INDICATOR_ERROR_MESSAGE_COUNT = new StruggleIndicatorErrorMessageCount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StruggleIndicatorErrorMessageCountRecord> getRecordType() {
        return StruggleIndicatorErrorMessageCountRecord.class;
    }

    /**
     * The column
     * <code>live.struggle_indicator_error_message_count.idstruggle_indicator_error_message_count</code>.
     * The primary key for identifying rows of this table.
     */
    public final TableField<StruggleIndicatorErrorMessageCountRecord, Long> IDSTRUGGLE_INDICATOR_ERROR_MESSAGE_COUNT = createField(DSL.name("idstruggle_indicator_error_message_count"), SQLDataType.BIGINT.nullable(false).identity(true), this, "The primary key for identifying rows of this table.");

    /**
     * The column
     * <code>live.struggle_indicator_error_message_count.idpage</code>. The FK
     * for reference to the ID column of the "page" table.
     */
    public final TableField<StruggleIndicatorErrorMessageCountRecord, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC, this, "The FK for reference to the ID column of the \"page\" table.");

    /**
     * The column
     * <code>live.struggle_indicator_error_message_count.value</code>. The
     * amount of times, an error segment has been set on the page associated
     * with "idpage".
     */
    public final TableField<StruggleIndicatorErrorMessageCountRecord, Long> VALUE = createField(DSL.name("value"), SQLDataType.BIGINT, this, "The amount of times, an error segment has been set on the page associated with \"idpage\".");

    private StruggleIndicatorErrorMessageCount(Name alias, Table<StruggleIndicatorErrorMessageCountRecord> aliased) {
        this(alias, aliased, null);
    }

    private StruggleIndicatorErrorMessageCount(Name alias, Table<StruggleIndicatorErrorMessageCountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Indicator definition: The amount of error properties set for a page view succeeded the threshold defined in the struggle settings."), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>live.struggle_indicator_error_message_count</code> table reference
     */
    public StruggleIndicatorErrorMessageCount(String alias) {
        this(DSL.name(alias), STRUGGLE_INDICATOR_ERROR_MESSAGE_COUNT);
    }

    /**
     * Create an aliased
     * <code>live.struggle_indicator_error_message_count</code> table reference
     */
    public StruggleIndicatorErrorMessageCount(Name alias) {
        this(alias, STRUGGLE_INDICATOR_ERROR_MESSAGE_COUNT);
    }

    /**
     * Create a <code>live.struggle_indicator_error_message_count</code> table
     * reference
     */
    public StruggleIndicatorErrorMessageCount() {
        this(DSL.name("struggle_indicator_error_message_count"), null);
    }

    public <O extends Record> StruggleIndicatorErrorMessageCount(Table<O> child, ForeignKey<O, StruggleIndicatorErrorMessageCountRecord> key) {
        super(child, key, STRUGGLE_INDICATOR_ERROR_MESSAGE_COUNT);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public Identity<StruggleIndicatorErrorMessageCountRecord, Long> getIdentity() {
        return (Identity<StruggleIndicatorErrorMessageCountRecord, Long>) super.getIdentity();
    }

    @Override
    public StruggleIndicatorErrorMessageCount as(String alias) {
        return new StruggleIndicatorErrorMessageCount(DSL.name(alias), this);
    }

    @Override
    public StruggleIndicatorErrorMessageCount as(Name alias) {
        return new StruggleIndicatorErrorMessageCount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StruggleIndicatorErrorMessageCount rename(String name) {
        return new StruggleIndicatorErrorMessageCount(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StruggleIndicatorErrorMessageCount rename(Name name) {
        return new StruggleIndicatorErrorMessageCount(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, BigDecimal, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
