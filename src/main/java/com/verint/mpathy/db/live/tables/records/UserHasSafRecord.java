/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables.records;


import com.verint.mpathy.db.live.tables.UserHasSaf;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserHasSafRecord extends TableRecordImpl<UserHasSafRecord> implements Record3<Long, Long, Short> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live.user_has_saf.iduser</code>.
     */
    public void setIduser(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>live.user_has_saf.iduser</code>.
     */
    public Long getIduser() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>live.user_has_saf.idfile</code>.
     */
    public void setIdfile(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>live.user_has_saf.idfile</code>.
     */
    public Long getIdfile() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>live.user_has_saf.permission</code>.
     */
    public void setPermission(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>live.user_has_saf.permission</code>.
     */
    public Short getPermission() {
        return (Short) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Short> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Short> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserHasSaf.USER_HAS_SAF.IDUSER;
    }

    @Override
    public Field<Long> field2() {
        return UserHasSaf.USER_HAS_SAF.IDFILE;
    }

    @Override
    public Field<Short> field3() {
        return UserHasSaf.USER_HAS_SAF.PERMISSION;
    }

    @Override
    public Long component1() {
        return getIduser();
    }

    @Override
    public Long component2() {
        return getIdfile();
    }

    @Override
    public Short component3() {
        return getPermission();
    }

    @Override
    public Long value1() {
        return getIduser();
    }

    @Override
    public Long value2() {
        return getIdfile();
    }

    @Override
    public Short value3() {
        return getPermission();
    }

    @Override
    public UserHasSafRecord value1(Long value) {
        setIduser(value);
        return this;
    }

    @Override
    public UserHasSafRecord value2(Long value) {
        setIdfile(value);
        return this;
    }

    @Override
    public UserHasSafRecord value3(Short value) {
        setPermission(value);
        return this;
    }

    @Override
    public UserHasSafRecord values(Long value1, Long value2, Short value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserHasSafRecord
     */
    public UserHasSafRecord() {
        super(UserHasSaf.USER_HAS_SAF);
    }

    /**
     * Create a detached, initialised UserHasSafRecord
     */
    public UserHasSafRecord(Long iduser, Long idfile, Short permission) {
        super(UserHasSaf.USER_HAS_SAF);

        setIduser(iduser);
        setIdfile(idfile);
        setPermission(permission);
    }
}
