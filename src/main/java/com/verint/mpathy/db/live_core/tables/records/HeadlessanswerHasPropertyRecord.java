/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables.records;


import com.verint.mpathy.db.live_core.tables.HeadlessanswerHasProperty;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HeadlessanswerHasPropertyRecord extends TableRecordImpl<HeadlessanswerHasPropertyRecord> implements Record5<BigDecimal, BigDecimal, BigDecimal, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live_core.headlessanswer_has_property.group_key</code>.
     */
    public void setGroupKey(BigDecimal value) {
        set(0, value);
    }

    /**
     * Getter for <code>live_core.headlessanswer_has_property.group_key</code>.
     */
    public BigDecimal getGroupKey() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>live_core.headlessanswer_has_property.idcp</code>.
     */
    public void setIdcp(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_core.headlessanswer_has_property.idcp</code>.
     */
    public BigDecimal getIdcp() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>live_core.headlessanswer_has_property.idvalue</code>.
     */
    public void setIdvalue(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>live_core.headlessanswer_has_property.idvalue</code>.
     */
    public BigDecimal getIdvalue() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>live_core.headlessanswer_has_property.idsite</code>.
     */
    public void setIdsite(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>live_core.headlessanswer_has_property.idsite</code>.
     */
    public Integer getIdsite() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>live_core.headlessanswer_has_property.idresponse</code>.
     */
    public void setIdresponse(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>live_core.headlessanswer_has_property.idresponse</code>.
     */
    public String getIdresponse() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<BigDecimal, BigDecimal, BigDecimal, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<BigDecimal, BigDecimal, BigDecimal, Integer, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<BigDecimal> field1() {
        return HeadlessanswerHasProperty.HEADLESSANSWER_HAS_PROPERTY.GROUP_KEY;
    }

    @Override
    public Field<BigDecimal> field2() {
        return HeadlessanswerHasProperty.HEADLESSANSWER_HAS_PROPERTY.IDCP;
    }

    @Override
    public Field<BigDecimal> field3() {
        return HeadlessanswerHasProperty.HEADLESSANSWER_HAS_PROPERTY.IDVALUE;
    }

    @Override
    public Field<Integer> field4() {
        return HeadlessanswerHasProperty.HEADLESSANSWER_HAS_PROPERTY.IDSITE;
    }

    @Override
    public Field<String> field5() {
        return HeadlessanswerHasProperty.HEADLESSANSWER_HAS_PROPERTY.IDRESPONSE;
    }

    @Override
    public BigDecimal component1() {
        return getGroupKey();
    }

    @Override
    public BigDecimal component2() {
        return getIdcp();
    }

    @Override
    public BigDecimal component3() {
        return getIdvalue();
    }

    @Override
    public Integer component4() {
        return getIdsite();
    }

    @Override
    public String component5() {
        return getIdresponse();
    }

    @Override
    public BigDecimal value1() {
        return getGroupKey();
    }

    @Override
    public BigDecimal value2() {
        return getIdcp();
    }

    @Override
    public BigDecimal value3() {
        return getIdvalue();
    }

    @Override
    public Integer value4() {
        return getIdsite();
    }

    @Override
    public String value5() {
        return getIdresponse();
    }

    @Override
    public HeadlessanswerHasPropertyRecord value1(BigDecimal value) {
        setGroupKey(value);
        return this;
    }

    @Override
    public HeadlessanswerHasPropertyRecord value2(BigDecimal value) {
        setIdcp(value);
        return this;
    }

    @Override
    public HeadlessanswerHasPropertyRecord value3(BigDecimal value) {
        setIdvalue(value);
        return this;
    }

    @Override
    public HeadlessanswerHasPropertyRecord value4(Integer value) {
        setIdsite(value);
        return this;
    }

    @Override
    public HeadlessanswerHasPropertyRecord value5(String value) {
        setIdresponse(value);
        return this;
    }

    @Override
    public HeadlessanswerHasPropertyRecord values(BigDecimal value1, BigDecimal value2, BigDecimal value3, Integer value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HeadlessanswerHasPropertyRecord
     */
    public HeadlessanswerHasPropertyRecord() {
        super(HeadlessanswerHasProperty.HEADLESSANSWER_HAS_PROPERTY);
    }

    /**
     * Create a detached, initialised HeadlessanswerHasPropertyRecord
     */
    public HeadlessanswerHasPropertyRecord(BigDecimal groupKey, BigDecimal idcp, BigDecimal idvalue, Integer idsite, String idresponse) {
        super(HeadlessanswerHasProperty.HEADLESSANSWER_HAS_PROPERTY);

        setGroupKey(groupKey);
        setIdcp(idcp);
        setIdvalue(idvalue);
        setIdsite(idsite);
        setIdresponse(idresponse);
    }
}
