/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.ResourceExcludeBotRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * The table contains regular expression parts to identify bots by his
 * useragent.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourceExcludeBot extends TableImpl<ResourceExcludeBotRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live.resource_exclude_bot</code>
     */
    public static final ResourceExcludeBot RESOURCE_EXCLUDE_BOT = new ResourceExcludeBot();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResourceExcludeBotRecord> getRecordType() {
        return ResourceExcludeBotRecord.class;
    }

    /**
     * The column <code>live.resource_exclude_bot.idexclude_bot</code>. Primary
     * key for the bot entry.
     */
    public final TableField<ResourceExcludeBotRecord, Integer> IDEXCLUDE_BOT = createField(DSL.name("idexclude_bot"), SQLDataType.INTEGER.nullable(false).identity(true), this, "Primary key for the bot entry.");

    /**
     * The column <code>live.resource_exclude_bot.pattern</code>. The content is
     * the part of only ONE regular expression pattern. Each entry represents a
     * or condition and must be prepared to run as a "match" search (not find)
     * like this: ^.*(pattern1|pattern2|...|pattnerN).*$
     */
    public final TableField<ResourceExcludeBotRecord, String> PATTERN = createField(DSL.name("pattern"), SQLDataType.CLOB, this, "The content is the part of only ONE regular expression pattern. Each entry represents a or condition and must be prepared to run as a \"match\" search (not find) like this: ^.*(pattern1|pattern2|...|pattnerN).*$");

    private ResourceExcludeBot(Name alias, Table<ResourceExcludeBotRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResourceExcludeBot(Name alias, Table<ResourceExcludeBotRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("The table contains regular expression parts to identify bots by his useragent."), TableOptions.table());
    }

    /**
     * Create an aliased <code>live.resource_exclude_bot</code> table reference
     */
    public ResourceExcludeBot(String alias) {
        this(DSL.name(alias), RESOURCE_EXCLUDE_BOT);
    }

    /**
     * Create an aliased <code>live.resource_exclude_bot</code> table reference
     */
    public ResourceExcludeBot(Name alias) {
        this(alias, RESOURCE_EXCLUDE_BOT);
    }

    /**
     * Create a <code>live.resource_exclude_bot</code> table reference
     */
    public ResourceExcludeBot() {
        this(DSL.name("resource_exclude_bot"), null);
    }

    public <O extends Record> ResourceExcludeBot(Table<O> child, ForeignKey<O, ResourceExcludeBotRecord> key) {
        super(child, key, RESOURCE_EXCLUDE_BOT);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public Identity<ResourceExcludeBotRecord, Integer> getIdentity() {
        return (Identity<ResourceExcludeBotRecord, Integer>) super.getIdentity();
    }

    @Override
    public ResourceExcludeBot as(String alias) {
        return new ResourceExcludeBot(DSL.name(alias), this);
    }

    @Override
    public ResourceExcludeBot as(Name alias) {
        return new ResourceExcludeBot(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourceExcludeBot rename(String name) {
        return new ResourceExcludeBot(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourceExcludeBot rename(Name name) {
        return new ResourceExcludeBot(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
