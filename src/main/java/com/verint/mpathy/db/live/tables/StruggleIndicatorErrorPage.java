/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.StruggleIndicatorErrorPageRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Indicator definition: The page view is defined as an error page in the
 * struggle settings.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StruggleIndicatorErrorPage extends TableImpl<StruggleIndicatorErrorPageRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live.struggle_indicator_error_page</code>
     */
    public static final StruggleIndicatorErrorPage STRUGGLE_INDICATOR_ERROR_PAGE = new StruggleIndicatorErrorPage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StruggleIndicatorErrorPageRecord> getRecordType() {
        return StruggleIndicatorErrorPageRecord.class;
    }

    /**
     * The column
     * <code>live.struggle_indicator_error_page.idstruggle_indicator_error_page</code>.
     * The primary key for identifying rows of this table.
     */
    public final TableField<StruggleIndicatorErrorPageRecord, Long> IDSTRUGGLE_INDICATOR_ERROR_PAGE = createField(DSL.name("idstruggle_indicator_error_page"), SQLDataType.BIGINT.nullable(false).identity(true), this, "The primary key for identifying rows of this table.");

    /**
     * The column <code>live.struggle_indicator_error_page.idpage</code>. The FK
     * for reference to the ID column of the "page" table.
     */
    public final TableField<StruggleIndicatorErrorPageRecord, BigDecimal> IDPAGE = createField(DSL.name("idpage"), SQLDataType.NUMERIC, this, "The FK for reference to the ID column of the \"page\" table.");

    /**
     * The column <code>live.struggle_indicator_error_page.value</code>. True,
     * i.e. 1, if the page associated with "idpage" is defined as an error page.
     */
    public final TableField<StruggleIndicatorErrorPageRecord, Short> VALUE = createField(DSL.name("value"), SQLDataType.SMALLINT, this, "True, i.e. 1, if the page associated with \"idpage\" is defined as an error page.");

    private StruggleIndicatorErrorPage(Name alias, Table<StruggleIndicatorErrorPageRecord> aliased) {
        this(alias, aliased, null);
    }

    private StruggleIndicatorErrorPage(Name alias, Table<StruggleIndicatorErrorPageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Indicator definition: The page view is defined as an error page in the struggle settings."), TableOptions.table());
    }

    /**
     * Create an aliased <code>live.struggle_indicator_error_page</code> table
     * reference
     */
    public StruggleIndicatorErrorPage(String alias) {
        this(DSL.name(alias), STRUGGLE_INDICATOR_ERROR_PAGE);
    }

    /**
     * Create an aliased <code>live.struggle_indicator_error_page</code> table
     * reference
     */
    public StruggleIndicatorErrorPage(Name alias) {
        this(alias, STRUGGLE_INDICATOR_ERROR_PAGE);
    }

    /**
     * Create a <code>live.struggle_indicator_error_page</code> table reference
     */
    public StruggleIndicatorErrorPage() {
        this(DSL.name("struggle_indicator_error_page"), null);
    }

    public <O extends Record> StruggleIndicatorErrorPage(Table<O> child, ForeignKey<O, StruggleIndicatorErrorPageRecord> key) {
        super(child, key, STRUGGLE_INDICATOR_ERROR_PAGE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public Identity<StruggleIndicatorErrorPageRecord, Long> getIdentity() {
        return (Identity<StruggleIndicatorErrorPageRecord, Long>) super.getIdentity();
    }

    @Override
    public StruggleIndicatorErrorPage as(String alias) {
        return new StruggleIndicatorErrorPage(DSL.name(alias), this);
    }

    @Override
    public StruggleIndicatorErrorPage as(Name alias) {
        return new StruggleIndicatorErrorPage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StruggleIndicatorErrorPage rename(String name) {
        return new StruggleIndicatorErrorPage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StruggleIndicatorErrorPage rename(Name name) {
        return new StruggleIndicatorErrorPage(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, BigDecimal, Short> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
