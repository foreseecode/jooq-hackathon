/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live.tables;


import com.verint.mpathy.db.live.Live;
import com.verint.mpathy.db.live.tables.records.ResourceExcludeKeywordRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * The table contains keywords which must not be processed by the
 * mpathy-asset-store-serivce.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourceExcludeKeyword extends TableImpl<ResourceExcludeKeywordRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>live.resource_exclude_keyword</code>
     */
    public static final ResourceExcludeKeyword RESOURCE_EXCLUDE_KEYWORD = new ResourceExcludeKeyword();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResourceExcludeKeywordRecord> getRecordType() {
        return ResourceExcludeKeywordRecord.class;
    }

    /**
     * The column <code>live.resource_exclude_keyword.idexclude_keyword</code>.
     * Primary key for the host entry.
     */
    public final TableField<ResourceExcludeKeywordRecord, Short> IDEXCLUDE_KEYWORD = createField(DSL.name("idexclude_keyword"), SQLDataType.SMALLINT.nullable(false).identity(true), this, "Primary key for the host entry.");

    /**
     * The column <code>live.resource_exclude_keyword.keyword</code>. The column
     * is the pattern which exclude a resource url contains it.
     */
    public final TableField<ResourceExcludeKeywordRecord, String> KEYWORD = createField(DSL.name("keyword"), SQLDataType.CLOB, this, "The column is the pattern which exclude a resource url contains it.");

    private ResourceExcludeKeyword(Name alias, Table<ResourceExcludeKeywordRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResourceExcludeKeyword(Name alias, Table<ResourceExcludeKeywordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("The table contains keywords which must not be processed by the mpathy-asset-store-serivce."), TableOptions.table());
    }

    /**
     * Create an aliased <code>live.resource_exclude_keyword</code> table
     * reference
     */
    public ResourceExcludeKeyword(String alias) {
        this(DSL.name(alias), RESOURCE_EXCLUDE_KEYWORD);
    }

    /**
     * Create an aliased <code>live.resource_exclude_keyword</code> table
     * reference
     */
    public ResourceExcludeKeyword(Name alias) {
        this(alias, RESOURCE_EXCLUDE_KEYWORD);
    }

    /**
     * Create a <code>live.resource_exclude_keyword</code> table reference
     */
    public ResourceExcludeKeyword() {
        this(DSL.name("resource_exclude_keyword"), null);
    }

    public <O extends Record> ResourceExcludeKeyword(Table<O> child, ForeignKey<O, ResourceExcludeKeywordRecord> key) {
        super(child, key, RESOURCE_EXCLUDE_KEYWORD);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Live.LIVE;
    }

    @Override
    public Identity<ResourceExcludeKeywordRecord, Short> getIdentity() {
        return (Identity<ResourceExcludeKeywordRecord, Short>) super.getIdentity();
    }

    @Override
    public ResourceExcludeKeyword as(String alias) {
        return new ResourceExcludeKeyword(DSL.name(alias), this);
    }

    @Override
    public ResourceExcludeKeyword as(Name alias) {
        return new ResourceExcludeKeyword(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourceExcludeKeyword rename(String name) {
        return new ResourceExcludeKeyword(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourceExcludeKeyword rename(Name name) {
        return new ResourceExcludeKeyword(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Short, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
