/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables.records;


import com.verint.mpathy.db.live_core.tables.CustomparameterDomtree;

import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomparameterDomtreeRecord extends TableRecordImpl<CustomparameterDomtreeRecord> implements Record7<Long, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live_core.customparameter_domtree.idcp</code>.
     */
    public void setIdcp(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>live_core.customparameter_domtree.idcp</code>.
     */
    public Long getIdcp() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>live_core.customparameter_domtree.selector</code>.
     */
    public void setSelector(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_core.customparameter_domtree.selector</code>.
     */
    public String getSelector() {
        return (String) get(1);
    }

    /**
     * Setter for <code>live_core.customparameter_domtree.extractmode</code>.
     */
    public void setExtractmode(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>live_core.customparameter_domtree.extractmode</code>.
     */
    public String getExtractmode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>live_core.customparameter_domtree.attribute</code>.
     */
    public void setAttribute(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>live_core.customparameter_domtree.attribute</code>.
     */
    public String getAttribute() {
        return (String) get(3);
    }

    /**
     * Setter for <code>live_core.customparameter_domtree.parserregex</code>.
     */
    public void setParserregex(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>live_core.customparameter_domtree.parserregex</code>.
     */
    public String getParserregex() {
        return (String) get(4);
    }

    /**
     * Setter for <code>live_core.customparameter_domtree.excluderegex</code>.
     */
    public void setExcluderegex(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>live_core.customparameter_domtree.excluderegex</code>.
     */
    public String getExcluderegex() {
        return (String) get(5);
    }

    /**
     * Setter for <code>live_core.customparameter_domtree.excludeitems</code>.
     */
    public void setExcludeitems(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>live_core.customparameter_domtree.excludeitems</code>.
     */
    public String getExcludeitems() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, String, String, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, String, String, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CustomparameterDomtree.CUSTOMPARAMETER_DOMTREE.IDCP;
    }

    @Override
    public Field<String> field2() {
        return CustomparameterDomtree.CUSTOMPARAMETER_DOMTREE.SELECTOR;
    }

    @Override
    public Field<String> field3() {
        return CustomparameterDomtree.CUSTOMPARAMETER_DOMTREE.EXTRACTMODE;
    }

    @Override
    public Field<String> field4() {
        return CustomparameterDomtree.CUSTOMPARAMETER_DOMTREE.ATTRIBUTE;
    }

    @Override
    public Field<String> field5() {
        return CustomparameterDomtree.CUSTOMPARAMETER_DOMTREE.PARSERREGEX;
    }

    @Override
    public Field<String> field6() {
        return CustomparameterDomtree.CUSTOMPARAMETER_DOMTREE.EXCLUDEREGEX;
    }

    @Override
    public Field<String> field7() {
        return CustomparameterDomtree.CUSTOMPARAMETER_DOMTREE.EXCLUDEITEMS;
    }

    @Override
    public Long component1() {
        return getIdcp();
    }

    @Override
    public String component2() {
        return getSelector();
    }

    @Override
    public String component3() {
        return getExtractmode();
    }

    @Override
    public String component4() {
        return getAttribute();
    }

    @Override
    public String component5() {
        return getParserregex();
    }

    @Override
    public String component6() {
        return getExcluderegex();
    }

    @Override
    public String component7() {
        return getExcludeitems();
    }

    @Override
    public Long value1() {
        return getIdcp();
    }

    @Override
    public String value2() {
        return getSelector();
    }

    @Override
    public String value3() {
        return getExtractmode();
    }

    @Override
    public String value4() {
        return getAttribute();
    }

    @Override
    public String value5() {
        return getParserregex();
    }

    @Override
    public String value6() {
        return getExcluderegex();
    }

    @Override
    public String value7() {
        return getExcludeitems();
    }

    @Override
    public CustomparameterDomtreeRecord value1(Long value) {
        setIdcp(value);
        return this;
    }

    @Override
    public CustomparameterDomtreeRecord value2(String value) {
        setSelector(value);
        return this;
    }

    @Override
    public CustomparameterDomtreeRecord value3(String value) {
        setExtractmode(value);
        return this;
    }

    @Override
    public CustomparameterDomtreeRecord value4(String value) {
        setAttribute(value);
        return this;
    }

    @Override
    public CustomparameterDomtreeRecord value5(String value) {
        setParserregex(value);
        return this;
    }

    @Override
    public CustomparameterDomtreeRecord value6(String value) {
        setExcluderegex(value);
        return this;
    }

    @Override
    public CustomparameterDomtreeRecord value7(String value) {
        setExcludeitems(value);
        return this;
    }

    @Override
    public CustomparameterDomtreeRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomparameterDomtreeRecord
     */
    public CustomparameterDomtreeRecord() {
        super(CustomparameterDomtree.CUSTOMPARAMETER_DOMTREE);
    }

    /**
     * Create a detached, initialised CustomparameterDomtreeRecord
     */
    public CustomparameterDomtreeRecord(Long idcp, String selector, String extractmode, String attribute, String parserregex, String excluderegex, String excludeitems) {
        super(CustomparameterDomtree.CUSTOMPARAMETER_DOMTREE);

        setIdcp(idcp);
        setSelector(selector);
        setExtractmode(extractmode);
        setAttribute(attribute);
        setParserregex(parserregex);
        setExcluderegex(excluderegex);
        setExcludeitems(excludeitems);
    }
}
