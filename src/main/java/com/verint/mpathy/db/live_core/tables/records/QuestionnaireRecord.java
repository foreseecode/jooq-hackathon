/*
 * This file is generated by jOOQ.
 */
package com.verint.mpathy.db.live_core.tables.records;


import com.verint.mpathy.db.live_core.tables.Questionnaire;

import java.time.LocalTime;

import org.jooq.Field;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.TableRecordImpl;


/**
 * Easy access to underlying table in other schemas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuestionnaireRecord extends TableRecordImpl<QuestionnaireRecord> implements Record14<Long, String, Long, LocalTime, LocalTime, Long, Long, Long, Integer, String, String, LocalTime, Long, Short> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>live_core.questionnaire.idquestionnaire</code>.
     */
    public void setIdquestionnaire(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>live_core.questionnaire.idquestionnaire</code>.
     */
    public Long getIdquestionnaire() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>live_core.questionnaire.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>live_core.questionnaire.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>live_core.questionnaire.active</code>.
     */
    public void setActive(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>live_core.questionnaire.active</code>.
     */
    public Long getActive() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>live_core.questionnaire.show_start</code>.
     */
    public void setShowStart(LocalTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>live_core.questionnaire.show_start</code>.
     */
    public LocalTime getShowStart() {
        return (LocalTime) get(3);
    }

    /**
     * Setter for <code>live_core.questionnaire.show_stop</code>.
     */
    public void setShowStop(LocalTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>live_core.questionnaire.show_stop</code>.
     */
    public LocalTime getShowStop() {
        return (LocalTime) get(4);
    }

    /**
     * Setter for <code>live_core.questionnaire.answered</code>.
     */
    public void setAnswered(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>live_core.questionnaire.answered</code>.
     */
    public Long getAnswered() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>live_core.questionnaire.delivered</code>.
     */
    public void setDelivered(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>live_core.questionnaire.delivered</code>.
     */
    public Long getDelivered() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>live_core.questionnaire.aborted</code>.
     */
    public void setAborted(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>live_core.questionnaire.aborted</code>.
     */
    public Long getAborted() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>live_core.questionnaire.idsite</code>.
     */
    public void setIdsite(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>live_core.questionnaire.idsite</code>.
     */
    public Integer getIdsite() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>live_core.questionnaire.advanced_restrictions</code>.
     */
    public void setAdvancedRestrictions(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>live_core.questionnaire.advanced_restrictions</code>.
     */
    public String getAdvancedRestrictions() {
        return (String) get(9);
    }

    /**
     * Setter for <code>live_core.questionnaire.hash</code>.
     */
    public void setHash(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>live_core.questionnaire.hash</code>.
     */
    public String getHash() {
        return (String) get(10);
    }

    /**
     * Setter for <code>live_core.questionnaire.created_at</code>.
     */
    public void setCreatedAt(LocalTime value) {
        set(11, value);
    }

    /**
     * Getter for <code>live_core.questionnaire.created_at</code>.
     */
    public LocalTime getCreatedAt() {
        return (LocalTime) get(11);
    }

    /**
     * Setter for <code>live_core.questionnaire.idquestionnaire_layout</code>.
     */
    public void setIdquestionnaireLayout(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>live_core.questionnaire.idquestionnaire_layout</code>.
     */
    public Long getIdquestionnaireLayout() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>live_core.questionnaire.status</code>.
     */
    public void setStatus(Short value) {
        set(13, value);
    }

    /**
     * Getter for <code>live_core.questionnaire.status</code>.
     */
    public Short getStatus() {
        return (Short) get(13);
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Long, String, Long, LocalTime, LocalTime, Long, Long, Long, Integer, String, String, LocalTime, Long, Short> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Long, String, Long, LocalTime, LocalTime, Long, Long, Long, Integer, String, String, LocalTime, Long, Short> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Questionnaire.QUESTIONNAIRE.IDQUESTIONNAIRE;
    }

    @Override
    public Field<String> field2() {
        return Questionnaire.QUESTIONNAIRE.NAME;
    }

    @Override
    public Field<Long> field3() {
        return Questionnaire.QUESTIONNAIRE.ACTIVE;
    }

    @Override
    public Field<LocalTime> field4() {
        return Questionnaire.QUESTIONNAIRE.SHOW_START;
    }

    @Override
    public Field<LocalTime> field5() {
        return Questionnaire.QUESTIONNAIRE.SHOW_STOP;
    }

    @Override
    public Field<Long> field6() {
        return Questionnaire.QUESTIONNAIRE.ANSWERED;
    }

    @Override
    public Field<Long> field7() {
        return Questionnaire.QUESTIONNAIRE.DELIVERED;
    }

    @Override
    public Field<Long> field8() {
        return Questionnaire.QUESTIONNAIRE.ABORTED;
    }

    @Override
    public Field<Integer> field9() {
        return Questionnaire.QUESTIONNAIRE.IDSITE;
    }

    @Override
    public Field<String> field10() {
        return Questionnaire.QUESTIONNAIRE.ADVANCED_RESTRICTIONS;
    }

    @Override
    public Field<String> field11() {
        return Questionnaire.QUESTIONNAIRE.HASH;
    }

    @Override
    public Field<LocalTime> field12() {
        return Questionnaire.QUESTIONNAIRE.CREATED_AT;
    }

    @Override
    public Field<Long> field13() {
        return Questionnaire.QUESTIONNAIRE.IDQUESTIONNAIRE_LAYOUT;
    }

    @Override
    public Field<Short> field14() {
        return Questionnaire.QUESTIONNAIRE.STATUS;
    }

    @Override
    public Long component1() {
        return getIdquestionnaire();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Long component3() {
        return getActive();
    }

    @Override
    public LocalTime component4() {
        return getShowStart();
    }

    @Override
    public LocalTime component5() {
        return getShowStop();
    }

    @Override
    public Long component6() {
        return getAnswered();
    }

    @Override
    public Long component7() {
        return getDelivered();
    }

    @Override
    public Long component8() {
        return getAborted();
    }

    @Override
    public Integer component9() {
        return getIdsite();
    }

    @Override
    public String component10() {
        return getAdvancedRestrictions();
    }

    @Override
    public String component11() {
        return getHash();
    }

    @Override
    public LocalTime component12() {
        return getCreatedAt();
    }

    @Override
    public Long component13() {
        return getIdquestionnaireLayout();
    }

    @Override
    public Short component14() {
        return getStatus();
    }

    @Override
    public Long value1() {
        return getIdquestionnaire();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Long value3() {
        return getActive();
    }

    @Override
    public LocalTime value4() {
        return getShowStart();
    }

    @Override
    public LocalTime value5() {
        return getShowStop();
    }

    @Override
    public Long value6() {
        return getAnswered();
    }

    @Override
    public Long value7() {
        return getDelivered();
    }

    @Override
    public Long value8() {
        return getAborted();
    }

    @Override
    public Integer value9() {
        return getIdsite();
    }

    @Override
    public String value10() {
        return getAdvancedRestrictions();
    }

    @Override
    public String value11() {
        return getHash();
    }

    @Override
    public LocalTime value12() {
        return getCreatedAt();
    }

    @Override
    public Long value13() {
        return getIdquestionnaireLayout();
    }

    @Override
    public Short value14() {
        return getStatus();
    }

    @Override
    public QuestionnaireRecord value1(Long value) {
        setIdquestionnaire(value);
        return this;
    }

    @Override
    public QuestionnaireRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public QuestionnaireRecord value3(Long value) {
        setActive(value);
        return this;
    }

    @Override
    public QuestionnaireRecord value4(LocalTime value) {
        setShowStart(value);
        return this;
    }

    @Override
    public QuestionnaireRecord value5(LocalTime value) {
        setShowStop(value);
        return this;
    }

    @Override
    public QuestionnaireRecord value6(Long value) {
        setAnswered(value);
        return this;
    }

    @Override
    public QuestionnaireRecord value7(Long value) {
        setDelivered(value);
        return this;
    }

    @Override
    public QuestionnaireRecord value8(Long value) {
        setAborted(value);
        return this;
    }

    @Override
    public QuestionnaireRecord value9(Integer value) {
        setIdsite(value);
        return this;
    }

    @Override
    public QuestionnaireRecord value10(String value) {
        setAdvancedRestrictions(value);
        return this;
    }

    @Override
    public QuestionnaireRecord value11(String value) {
        setHash(value);
        return this;
    }

    @Override
    public QuestionnaireRecord value12(LocalTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public QuestionnaireRecord value13(Long value) {
        setIdquestionnaireLayout(value);
        return this;
    }

    @Override
    public QuestionnaireRecord value14(Short value) {
        setStatus(value);
        return this;
    }

    @Override
    public QuestionnaireRecord values(Long value1, String value2, Long value3, LocalTime value4, LocalTime value5, Long value6, Long value7, Long value8, Integer value9, String value10, String value11, LocalTime value12, Long value13, Short value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuestionnaireRecord
     */
    public QuestionnaireRecord() {
        super(Questionnaire.QUESTIONNAIRE);
    }

    /**
     * Create a detached, initialised QuestionnaireRecord
     */
    public QuestionnaireRecord(Long idquestionnaire, String name, Long active, LocalTime showStart, LocalTime showStop, Long answered, Long delivered, Long aborted, Integer idsite, String advancedRestrictions, String hash, LocalTime createdAt, Long idquestionnaireLayout, Short status) {
        super(Questionnaire.QUESTIONNAIRE);

        setIdquestionnaire(idquestionnaire);
        setName(name);
        setActive(active);
        setShowStart(showStart);
        setShowStop(showStop);
        setAnswered(answered);
        setDelivered(delivered);
        setAborted(aborted);
        setIdsite(idsite);
        setAdvancedRestrictions(advancedRestrictions);
        setHash(hash);
        setCreatedAt(createdAt);
        setIdquestionnaireLayout(idquestionnaireLayout);
        setStatus(status);
    }
}
